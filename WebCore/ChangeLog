2009-11-13  Dumitru Daniliuc  <dumi@chromium.org>

        Reviewed by Dimitri Glazkov.

        Do not register Chromium's HTML5 DB VFS as the default
        VFS. Otherwise, other sqlite DB users in the same process will
        stop working.

        https://bugs.webkit.org/show_bug.cgi?id=31462

        * platform/sql/chromium/SQLiteFileSystemChromium.cpp:
        (WebCore::SQLiteFileSystem::openDatabase):
        * platform/sql/chromium/SQLiteFileSystemChromiumPosix.cpp:
        (WebCore::SQLiteFileSystem::registerSQLiteVFS):
        * platform/sql/chromium/SQLiteFileSystemChromiumWin.cpp:
        (WebCore::SQLiteFileSystem::registerSQLiteVFS):

2009-11-13  Alexey Proskuryakov  <ap@apple.com>

        Windows build fix

        * platform/network/cf/SocketStreamHandleCFNet.cpp:
        (WebCore::SocketStreamHandle::SocketStreamHandle): Explicitly cast "-1" to CFOptionFlags,
        avoiding a sign mismatch warning.

2009-11-13  Alexey Proskuryakov  <ap@apple.com>

        Release build fix.

        * platform/network/cf/SocketStreamHandleCFNet.cpp:
        (WebCore::SocketStreamHandle::readStreamCallback):
        (WebCore::SocketStreamHandle::writeStreamCallback):
        Use ASSERT_UNUSED for unused stream parameter.

2009-11-12  Alexey Proskuryakov  <ap@apple.com>

        Reviewed by Darin Adler.

        https://bugs.webkit.org/show_bug.cgi?id=31441
        Implement SocketStreamHandleCFNet

        Existing WebSocket tests now pass on Mac. No proxy support yet.

        * platform/network/SocketStreamHandleClient.h:
        * platform/network/cf/SocketStreamHandle.h:
        (WebCore::SocketStreamHandle::shouldUseSSL):
        (WebCore::SocketStreamHandle::refAuthenticationClient):
        (WebCore::SocketStreamHandle::derefAuthenticationClient):
        (WebCore::SocketStreamHandle::):
        * platform/network/cf/SocketStreamHandleCFNet.cpp:
        (WebCore::SocketStreamHandle::SocketStreamHandle):
        (WebCore::SocketStreamHandle::chooseProxy):
        (WebCore::SocketStreamHandle::createStreams):
        (WebCore::SocketStreamHandle::copyCFStreamDescription):
        (WebCore::SocketStreamHandle::readStreamCallback):
        (WebCore::SocketStreamHandle::writeStreamCallback):
        (WebCore::SocketStreamHandle::~SocketStreamHandle):
        (WebCore::SocketStreamHandle::platformSend):
        (WebCore::SocketStreamHandle::platformClose):
        (WebCore::SocketStreamHandle::receivedCredential):
        (WebCore::SocketStreamHandle::receivedRequestToContinueWithoutCredential):
        (WebCore::SocketStreamHandle::receivedCancellation):

2009-11-12  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: preload status bar button glyphs
        in order to prevent them from flickering (take 2).

        https://bugs.webkit.org/show_bug.cgi?id=31439

        * inspector/front-end/inspector.js:
        (preloadImages):

2009-11-13  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Adam Barth.

        Chromium: [REGRESSION] Crash while stopping on a breakpoint.
        Rolling back r50890.

        https://bugs.webkit.org/show_bug.cgi?id=31467

        * bindings/v8/V8Proxy.cpp:
        (WebCore::V8Proxy::canAccessPrivate):

2009-11-13  Dirk Schulze  <krit@webkit.org>

        Reviewed by Gustavo Noronha.

        [CAIRO] shadow support for Canvas and SVG
        [https://bugs.webkit.org/show_bug.cgi?id=30960]
        
        This is the fix of a regression, caused by the shadow patch
        from the bug above. Reinserted the save and restore calls
        that were accidently removed by the previous patch.

        * platform/graphics/cairo/GraphicsContextCairo.cpp:
        (WebCore::setPlatformFill):
        (WebCore::setPlatformStroke):

2009-11-13  Pavel Feldman  <pfeldman@chromium.org>

        Not reviewed. Reverting r50908 since it makes inspector tests
        time out.

        https://bugs.webkit.org/show_bug.cgi?id=31439

        * inspector/front-end/inspector.js:

2009-11-13  Mikhail Naganov  <mnaganov@chromium.org>

        Reviewed by Timothy Hatcher.

        Enable 'console.profile()' and 'console.profileEnd()'
        regardless of JAVASCRIPT_DEBUGGER.

        https://bugs.webkit.org/show_bug.cgi?id=31293

        * WebCore.gypi:
        * bindings/js/JSConsoleCustom.cpp:
        (WebCore::JSConsole::profile):
        (WebCore::JSConsole::profileEnd):
        * bindings/v8/custom/V8ConsoleCustom.cpp: Added.
        (WebCore::CALLBACK_FUNC_DECL):
        * bindings/v8/custom/V8CustomBinding.h:
        * page/Console.idl:

2009-11-12  David Levin  <levin@chromium.org>

        Reviewed by NOBODY.

        Chromium build fix.

        * bindings/v8/ScriptController.h:
        (WebCore::ScriptController::evaluateInWorld): Add a dummy
         method which isn't called in chromium to make things compile.

2009-11-12  Anantanarayanan G Iyengar  <ananta@chromium.org>

        Reviewed by Adam Barth.
        
        The document-open.html test was flaky at times. The test invokes the layout test plugin
        which in its destroy stream handler opens a new document. This basically tears down the
        stream and the associated plugin instance, which causes a crash when the plugin stream
        dereferences an invalid m_client pointer which points to the PluginView instance which
        is invalid at this time. Fix is to set the m_client pointer to NULL in the stop function
        and check for the same.
       
        https://bugs.webkit.org/show_bug.cgi?id=31067

        * plugins/PluginStream.cpp:
        (WebCore::PluginStream::stop):
        (WebCore::PluginStream::destroyStream):

2009-11-12  Dumitru Daniliuc  <dumi@chromium.org>

        Reviewed by Dimitri Glazkov.

        Renaming some parameters passed to DB-related methods to better
        indicate their purpose.

        https://bugs.webkit.org/show_bug.cgi?id=31449

        * platform/chromium/ChromiumBridge.h:

2009-11-12  Simon Fraser  <simon.fraser@apple.com>

        Reviewed by Dan Bernstein.

        Transformed reflected elements are clipped inside element with opacity
        https://bugs.webkit.org/show_bug.cgi?id=30957
        
        transparencyClipBox() attemped to minimize the size of the transparency layer by mapping
        each clip rect into painting space before taking the unions. This, however, did not work
        correctly with combinations of reflections and transforms. Fixed by unioning the
        clipRect and mapping through transforms along the way.
        
        Also leave some #ifdeffed code in beginTransparencyLayers() that makes it easy to see
        where the transparency layers are.

        Test: fast/reflections/opacity-reflection-transform.html

        * rendering/RenderLayer.cpp:
        (WebCore::expandClipRectForDescendantsAndReflection):
        (WebCore::transparencyClipBox):
        (WebCore::RenderLayer::beginTransparencyLayers):

2009-11-12  Adam Barth  <abarth@webkit.org>

        Reviewed by Darin Fisher.

        Improve SecurityOrigin::toString comment
        https://bugs.webkit.org/show_bug.cgi?id=31041

        * page/SecurityOrigin.h:

2009-11-12  Shinichiro Hamaji  <hamaji@chromium.org>

        Reviewed by Darin Adler.

        externalRepresentation should take Frame as the argument
        https://bugs.webkit.org/show_bug.cgi?id=31393

        No new tests as this is just a refactoring.

        * WebCore.base.exp:
        * rendering/RenderTreeAsText.cpp:
        (WebCore::externalRepresentation):
        * rendering/RenderTreeAsText.h:

2009-11-12  Ben Murdoch  <benm@google.com>

        Reviewed by Dimitri Glazkov.

        [Android] The Android specific files in page/Android are out of date.
        https://bugs.webkit.org/show_bug.cgi?id=31437

        No tests required.

        * page/android/DragControllerAndroid.cpp:
        (WebCore::DragController::dragOperation): Added.
        (WebCore::DragController::cleanupAfterSystemDrag):
        * page/android/EventHandlerAndroid.cpp:
        (WebCore::EventHandler::accessKeyModifiers): Added.
        * page/android/InspectorControllerAndroid.cpp: Removed.

2009-11-12  Brent Fulgham  <bfulgham@webkit.org>

        Reviewed by Simon Fraser.

        [CAIRO] shadow support for Canvas and SVG.
        [https://bugs.webkit.org/show_bug.cgi?id=30960]

        Implement Canvas/SVG shadow support for Cairo.  This patch
        uses the filter code from SVG Filters.  That means that it is
        necessary to activate filters to see the shadows.

        Test: fast/canvas/canvas-shadow.html

        * GNUmakefile.am:
        * WebCore.vcproj/WebCore.vcproj: Add new ImageBufferFilter files.
        * platform/graphics/GraphicsContext.h:
        * platform/graphics/cairo/GraphicsContextCairo.cpp:
        (GraphicsContext::calculateShadowBufferDimensions): New helper routine.
        (WebCore::setPlatformFill):
        (WebCore::setPlatformStroke):
        (WebCore::copyContextProperties):
        (WebCore::drawPathShadow):
        (WebCore::GraphicsContext::fillPath):
        (WebCore::GraphicsContext::strokePath):
        (WebCore::GraphicsContext::drawPath):
        (WebCore::GraphicsContext::setPlatformShadow):
        (WebCore::GraphicsContext::createPlatformShadow):
        * platform/graphics/cairo/ImageCairo.cpp:
        (WebCore::BitmapImage::draw): Add filter effect.
        * platform/graphics/filters/Filter.h: Correct 'const' signatures.
        * platform/graphics/filters/ImageBufferFilter.cpp: Added.
        * platform/graphics/filters/ImageBufferFilter.h: Added.
        * svg/graphics/filters/SVGFilter.cpp: Correct 'const' signatures.
        * svg/graphics/filters/SVGFilter.h: Correct 'const' signatures.

2009-11-12  Dmitry Titov  <dimich@chromium.org>

        Reviewed by Alexey Proskuryakov.

        Add postTaskToMainThread to ScriptExecutionContext.
        Move the code to post task to the main thread into a new method on ScriptExecutionContext,
        to use as a helper implementation of the virtual ScriptExecutionContext::postTask(Task) in
        contexts that live on the main thread.
        https://bugs.webkit.org/show_bug.cgi?id=31427

        No new tests - simply moving the code.

        * dom/Document.cpp:
        (WebCore::Document::postTask):
        * dom/ScriptExecutionContext.cpp:
        (WebCore::ScriptExecutionContextTaskTimer::ScriptExecutionContextTaskTimer):
        (WebCore::ScriptExecutionContextTaskTimer::fired):
        (WebCore::PerformTaskData::PerformTaskData):
        (WebCore::PerformTaskData::performTask):
        (WebCore::ScriptExecutionContext::postTaskToMainThread):
        * dom/ScriptExecutionContext.h:

2009-11-12  Simon Fraser  <simon.fraser@apple.com>

        Reviewed by Darin Adler.

        Fix crash when removing compositing layers when GC is enabled
        https://bugs.webkit.org/show_bug.cgi?id=31429

        Workaround <rdar://problem/7390716> by special-casing the removal
        of all sublayers when GC is enabled.

        * platform/graphics/mac/GraphicsLayerCA.mm:
        (WebCore::safeSetSublayers):
        (WebCore::GraphicsLayerCA::updateSublayerList):
        (WebCore::GraphicsLayerCA::swapFromOrToTiledLayer):

2009-11-12  Jens Alfke  <snej@chromium.org>

        Reviewed by Dimitri Glazkov.

        The last of the V8 binding optimizations.
        - Replace string-valued element accessors with a shared getter/setter function.
        - Change error handling flow of control to avoid extra branches and function calls.
        https://bugs.webkit.org/show_bug.cgi?id=31443
        
        * bindings/scripts/CodeGeneratorV8.pm:
        * bindings/v8/V8Binding.cpp:
        (WebCore::getElementStringAttr):  Body of string-valued Element getter function.
        (WebCore::setElementStringAttr):  Body of string-valued Element setter function.
        * bindings/v8/V8Binding.h:

2009-11-12  Sam Weinig  <sam@webkit.org>

        Reviewed by Oliver Hunt.

        Fix for <rdar://problem/7267951>
        Canvas methods should reject uses of NaN and Infinity.

        Test: fast/canvas/canvas-with-illegal-args.html

        * html/canvas/CanvasRenderingContext2D.cpp:
        (WebCore::CanvasRenderingContext2D::scale):
        (WebCore::CanvasRenderingContext2D::rotate):
        (WebCore::CanvasRenderingContext2D::translate):
        (WebCore::CanvasRenderingContext2D::transform):
        (WebCore::CanvasRenderingContext2D::setTransform):

2009-11-12  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: profile timeline panel, fix obvious problems.

        https://bugs.webkit.org/show_bug.cgi?id=31432

        * inspector/front-end/AbstractTimelinePanel.js:
        (WebInspector.AbstractTimelinePanel.prototype.updateGraphDividersIfNeeded):
        * inspector/front-end/TimelinePanel.js:
        (WebInspector.TimelinePanel.prototype._setWindowPosition):
        (WebInspector.TimelineCalculator):
        (WebInspector.TimelineCalculator.prototype.get minimumBoundary):
        (WebInspector.TimelineCalculator.prototype.get maximumBoundary):
        (WebInspector.TimelineCalculator.prototype.reset):
        (WebInspector.TimelineCalculator.prototype.updateBoundaries):
        (WebInspector.TimelineCalculator.prototype.formatValue):
        (WebInspector.TimelineGraph):
        (WebInspector.TimelineGraph.prototype.refresh):
        * inspector/front-end/utilities.js:
        (Element.prototype.hasStyleClass):

2009-11-12  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: preload status bar button glyphs
        in order to prevent them from flickering.

        https://bugs.webkit.org/show_bug.cgi?id=31439

        * inspector/front-end/inspector.js:
        (preloadImages):

2009-11-12  Adam Roben  <aroben@apple.com>

        Replace worldIDs with world objects

        Part of <http://webkit.org/b/31414> Implement new SPI for dealing with
        user scripts/stylesheets and isolated worlds

        Reviewed by Sam Weinig.

        Covered by existing tests.

        * WebCore.base.exp: Update exported symbols to match what now exists
        and is needed by WebKit.

        * bindings/js/ScheduledAction.cpp:
        (WebCore::ScheduledAction::execute): Updated for function rename.

        * bindings/js/ScriptController.cpp: Removed code that dealt with
        worldIDs.
        (WebCore::ScriptController::createWorld): Added. Returns a new world
        suitable for use on the main thread.
        (WebCore::ScriptController::executeScriptInWorld): Renamed from
        executeScriptInIsolatedWorld, since this works just fine with a
        "normal" world.

        * bindings/js/ScriptController.h: Added createWorld, removed functions
        that took worldIDs, renamed executeScriptInIsolatedWorld to
        executeScriptInWorld.

        * page/Frame.cpp:
        (WebCore::Frame::injectUserScripts):
        (WebCore::Frame::injectUserScriptsForWorld):
        Updated for changes to UserScriptMap and ScriptController.

        * page/Frame.h: Changed injectUserScriptsForWorld to take a
        DOMWrapperWorld* instead of a worldID.

        * page/PageGroup.cpp:
        (WebCore::PageGroup::addUserScriptToWorld):
        (WebCore::PageGroup::addUserStyleSheetToWorld):
        (WebCore::PageGroup::removeUserScriptFromWorld):
        (WebCore::PageGroup::removeUserStyleSheetFromWorld):
        (WebCore::PageGroup::removeUserScriptsFromWorld):
        (WebCore::PageGroup::removeUserStyleSheetsFromWorld):
        * page/PageGroup.h:
        Changed these functions to take a DOMWrapperWorld* instead of a
        worldID. Also updated for changes to UserScript and UserStyleSheet.

        * page/UserScript.h:
        * page/UserStyleSheet.h: Changed not to hold a worldID, since it was
        never used.

        * page/UserScriptTypes.h:
        * page/UserStyleSheetTypes.h: Changed UserScriptMap and
        UserStyleSheetMap to use a RefPtr<DOMWrapperWorld> instead of a
        worldID as their key type.


2009-11-12  Brian Weinstein  <bweinstein@apple.com>

        Reviewed by Tim Hatcher.

        Fixes <http://webkit.org/b/31260>.
        Web Inspector: Main Resources Other than HTML are mis-detected.
        
        Even if the resource is a main resource, look at its CachedResource type, 
        because it might be an image, stylesheet, or JavaScript file, and we
        want to show them all correctly.

        * inspector/InspectorResource.cpp:
        (WebCore::InspectorResource::cachedResourceType): Move this method out so it can be called in multiple places.
        (WebCore::InspectorResource::type): 
        * inspector/InspectorResource.h:

2009-11-12  Jens Alfke  <snej@chromium.org>

        Reviewed by Dimitri Glazkov.

        Table-driven setup for V8 binding template callback functions. 100k in code savings.
        https://bugs.webkit.org/show_bug.cgi?id=31420

        * bindings/scripts/CodeGeneratorV8.pm:  Change generated ConfigureXXXTemplate fn
            to call configureTemplate().
        * bindings/v8/V8Binding.cpp:
        (WebCore::configureTemplate):  New function; does all the standard configuration work.
        (WebCore::createCallback):  De-inlined wrapper for FunctionTemplate creation.
        * bindings/v8/V8Binding.h:
        * bindings/v8/V8Proxy.cpp:
        (WebCore::batchConfigureAttributes):  Just wrapped the very long fn parameter list.
        (WebCore::batchConfigureCallbacks):  New function, used by configureTemplate.
        (WebCore::batchConfigureConstants):  Just wrapped the very long fn parameter list.
        * bindings/v8/V8Proxy.h:

2009-11-12  Dumitru Daniliuc  <dumi@chromium.org>

        Unreviewed, fix Chromium build after http://trac.webkit.org/changeset/50876.

        * platform/sql/chromium/SQLiteFileSystemChromiumPosix.cpp:

2009-11-12  Eric Carlson  <eric.carlson@apple.com>

        Reviewed by Dan Bernstein.

        <rdar://problem/7388969> Add DOM API for fullscreen video
        
        DOM API for fullscreen <video>.

        Tests: media/media-fullscreen-inline.html
               media/media-fullscreen-not-in-document.html

        * dom/EventNames.h:
            Add webkitbeginfullscreen and webkitendfullscreen.

        * html/HTMLAttributeNames.in:
            Add onwebkitbeginfullscreen and onwebkitendfullscreen.

        * html/HTMLMediaElement.cpp:
        (WebCore::HTMLMediaElement::parseMappedAttribute):
            Deal with onwebkitbeginfullscreen and onwebkitendfullscreen.
        (WebCore::HTMLMediaElement::enterFullscreen):
            Schedule webkitbeginfullscreenEvent event, don't set m_isFullscreen unless we
            actually do enter fullscreen.
        (WebCore::HTMLMediaElement::exitFullscreen):
            Schedule webkitendfullscreenEvent event.
        (WebCore::HTMLMediaElement::webkitEnterFullScreen):
        (WebCore::HTMLMediaElement::webkitExitFullScreen):
        (WebCore::HTMLMediaElement::webkitSupportsFullscreen):
        (WebCore::HTMLMediaElement::webkitDisplayingFullscreen):
            New, access to fullscreen properties and methods.

        * html/HTMLMediaElement.h:
        * html/HTMLMediaElement.idl:
            Declare methods needed for fullscreen API.

        * html/HTMLVideoElement.cpp:
        (WebCore::HTMLVideoElement::supportsFullscreen):
            Return false if a movie does not have video.

        * page/DOMWindow.h:
            Add webkitbeginfullscreen and webkitendfullscreen.

2009-11-12  Adam Barth  <abarth@webkit.org>

        Reviewed by Dimitri Glazkov.

        [Chromium] Sify compose button alerts error
        https://bugs.webkit.org/show_bug.cgi?id=31394

        Test: http/tests/security/calling-versus-current.html

        We're supposed to use the calling context for security checks.  In JSC
        land, this is the lexicalGlobalObject.

        * bindings/v8/V8Proxy.cpp:
        (WebCore::V8Proxy::canAccessPrivate):

2009-11-12  Daniel Bates  <dbates@webkit.org>

        Reviewed by Darin Adler.

        https://bugs.webkit.org/show_bug.cgi?id=30291

        Fixes an issue where the returned drop effect is incorrect when
        effectAllowed == "uninitialized".

        According to section 7.9.2 of the HTML 5 spec.
        <http://dev.w3.org/html5/spec/Overview.html#the-dragevent-and-datatransfer-interfaces>
        when effectAllowed = "uninitialized" the resulting dropEffect should be the
        user-specified dropEffect (i.e. "copy", "move", "link") and "none" for any
        other case.
        
        No test cases are included because we have an existing test case from
        bug #24731.

        * dom/Clipboard.cpp:
        (WebCore::dragOpFromIEOp): Added case for op == "uninitialized".

2009-11-12  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Do not highlight node on refresh.

        https://bugs.webkit.org/show_bug.cgi?id=31419

        * inspector/front-end/ElementsPanel.js:
        (WebInspector.ElementsPanel.prototype.reset):

2009-11-12  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Minor timeline fixes.

        https://bugs.webkit.org/show_bug.cgi?id=31417

        * inspector/front-end/TimelinePanel.js:
        (WebInspector.TimelinePanel.prototype._getRecordDetails):
        (WebInspector.TimelineRecordTreeElement.prototype.onattach):
        (WebInspector.TimelineRecordTreeElement.prototype._updateDetails):
        (WebInspector.TimelineRecordTreeElement.prototype.refresh):

2009-11-12  Alexey Proskuryakov  <ap@apple.com>

        SnowLeopard build fix.

        Renamed initWithClient to initWithAuthenticationClient.

        * platform/network/mac/AuthenticationMac.mm:
        (-[WebCoreAuthenticationClientAsChallengeSender initWithAuthenticationClient:]):
        (WebCore::AuthenticationChallenge::setAuthenticationClient):

2009-11-12  Chris Fleizach  <cfleizach@apple.com>

        Reviewed by Darin Adler.

        ARIA: add alert type roles
        https://bugs.webkit.org/show_bug.cgi?id=31392

        Test: platform/mac/accessibility/aria-alerts.html

        * accessibility/AccessibilityObject.h:
        * accessibility/AccessibilityRenderObject.cpp:
        * accessibility/mac/AccessibilityObjectWrapper.mm:

2009-11-11  Alexey Proskuryakov  <ap@apple.com>

        Reviewed by Darin Adler.

        https://bugs.webkit.org/show_bug.cgi?id=31386
        Make Mac AuthenticationChallenge usable from cross-platform code

        No change in behavior, so no tests.

        * platform/network/ResourceHandle.cpp:
        (WebCore::ResourceHandle::clearAuthentication):
        * platform/network/ResourceHandleInternal.h:
        (WebCore::ResourceHandleInternal::ResourceHandleInternal):
        Don't store m_currentCFChallenge, which was only used for a single assertion. Unlike the
        NSURLConnection case, CF challenge doesn't carry a sender with it, so the copy in web challenge
        is identical.

        * platform/network/cf/AuthenticationChallenge.h:
        (WebCore::AuthenticationChallenge::setAuthenticationClient): Added a setter to match the new
        Mac interface. Previously, one had to create a new AuthenticationChallenge to replace client.

        * platform/network/cf/ResourceHandleCFNet.cpp:
        (WebCore::ResourceHandle::didReceiveAuthenticationChallenge): Fixed assertions after removal
        of m_currentCFChallenge. Also, there is no need to set client now, as it's guaranteed to
        be already set.

        * platform/network/mac/AuthenticationChallenge.h:
        (WebCore::AuthenticationChallenge::m_sender): Explained the existence of this member to the
        best of my understanding.
        (WebCore::AuthenticationChallenge::m_nsChallenge): Renamed from m_macChallenge to prevent
        confusion with "mac" and "web" challenges in ResourceHandleInternal.

        * platform/network/mac/AuthenticationMac.mm:
        (WebCoreAuthenticationClientAsChallengeSender): Added a Obj-C wrapper for AuthenticationClient,
        making it possible to use the latter with NSURLAuthenticationChallenge.
        (WebCore::AuthenticationChallenge::AuthenticationChallenge): Updated for m_macChallenge ->
        m_nsChallenge renaming.
        (WebCore::AuthenticationChallenge::setAuthenticationClient): Wrap the client in Obj-C and
        set it as sender (or unset, if client is null).

        * platform/network/mac/ResourceHandleMac.mm:
        (WebCoreResourceHandleAsDelegate) WebCoreResourceHandleAsDelegate no longer doubles as
        authentication challenge sender.
        (WebCore::ResourceHandle::~ResourceHandle): A navigation can happen underneath an
        authentication sheet.
        (WebCore::ResourceHandle::didReceiveAuthenticationChallenge): Form m_currentWebChallenge
        using the new setAuthenticationClient() method.
        (WebCore::ResourceHandle::didCancelAuthenticationChallenge): Fixed an incorrect assertion.
        Since didCancelAuthenticationChallenge is called by connection, the passed challenge is
        the original Mac one, not the one we created for use with authentication sheet. I don't
        know when a connection would cancel authentication in practice, so I haven't tested this.

2009-11-12  Patrick Mueller  <Patrick_Mueller@us.ibm.com>

        Reviewed by Timothy Hatcher.

        Web Inspector: breakpoint sidebar entries should allow click over entire list item
        https://bugs.webkit.org/show_bug.cgi?id=31411

        No new tests; no new functionality, small usability change. 

        * inspector/front-end/BreakpointsSidebarPane.js:
        (WebInspector.BreakpointsSidebarPane.prototype._appendBreakpointElement):
        (WebInspector.BreakpointsSidebarPane.prototype._appendBreakpointElement.breakpointClicked):

2009-11-12  Patrick Mueller  <Patrick_Mueller@us.ibm.com>

        Reviewed by Timothy Hatcher.

        Web Inspector: breakpoints in named evals are not restored after a reload
        https://bugs.webkit.org/show_bug.cgi?id=31375

        Manual test added

        * inspector/front-end/ScriptsPanel.js:
        (WebInspector.ScriptsPanel.prototype.addScript):
        * manual-tests/inspector/bp-in-named-eval-after-reload.html: Added.

2009-11-12  Benjamin Poulain  <benjamin.poulain@nokia.com>

        Reviewed by Kenneth Rohde Christiansen.

        Custom printing shrink factors
        https://bugs.webkit.org/show_bug.cgi?id=29042

        This reverts commit r49769. The public API for this needs to be reviewed
        before its inclusion in Qt.

        * page/PrintContext.cpp:
        (WebCore::PrintContext::begin):
        * page/Settings.cpp:
        (WebCore::Settings::Settings):
        * page/Settings.h:

2009-11-12  Alexander Pavlov  <apavlov@chromium.org>

        Reviewed by Pavel Feldman.

        Web Inspector: Resource errors/warnings not shown in the Resource tree.

        Error/Warning bubbles are not displayed next to the resource in the 
        Resources panel if those occur before the resource is attached to the tree.
        https://bugs.webkit.org/show_bug.cgi?id=31404

        Test: manual-tests/inspector/styled-error-bubbles-in-scripts.html

        * inspector/front-end/AbstractTimelinePanel.js:
        (WebInspector.AbstractTimelinePanel.prototype.removeItem):
        * inspector/front-end/ResourcesPanel.js:
        (WebInspector.ResourceSidebarTreeElement.prototype.onattach):

2009-11-12  Philippe Normand  <pnormand@igalia.com>

        Reviewed by Jan Alonzo.

        https://bugs.webkit.org/show_bug.cgi?id=31047
        [GTK] Failing test media/video-played-ranges-1.html

        Follow-up of r50726, don't block the UI thread when calling
        gst_element_get_state(). Also fixed a compilation warning and some
        static casts.

        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.cpp:
        (WebCore::playbackPosition):
        (WebCore::MediaPlayerPrivate::seek):
        (WebCore::MediaPlayerPrivate::setRate):

2009-11-12  Philippe Normand  <pnormand@igalia.com>

        Reviewed by Jan Alonzo.

        https://bugs.webkit.org/show_bug.cgi?id=31047
        [GTK] Failing test media/video-played-ranges-1.html

        don't pause pipeline if already paused, same for play()

        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.cpp:
        (WebCore::MediaPlayerPrivate::play):
        (WebCore::MediaPlayerPrivate::pause):

2009-11-12  Kinuko Yasuda  <kinuko@google.com>

        Reviewed by David Levin.

        Support Gtk scrollwheel behavior for horizontal scrollbars on Linux
        Chromium too.
        https://bugs.webkit.org/show_bug.cgi?id=31292

        No new tests. (Corresponding test for Gtk+ is
        platform/gtk/scrollbars/overflow-scrollbar-horizontal-wheel-scroll.html)

        * page/EventHandler.cpp:
        * page/chromium/EventHandlerChromium.cpp:

2009-11-12  Yuta Kitamura  <yutak@chromium.org>

        Reviewed by Eric Seidel.

        Prevent text inside a multi-column block from being split into columns.
        
        If the tentative height of a multi-column block was too small, we need to
        expand the block height and try to layout again, in order to prevent text
        from being split into different columns.

        CSS Multicolumn text is split awkwardly
        https://bugs.webkit.org/show_bug.cgi?id=22249

        Test: fast/multicol/single-line.html

        * rendering/RenderBlock.cpp:
        (WebCore::RenderBlock::layoutColumns):
        * rendering/RenderBlock.h:
        * rendering/RenderLineBoxList.cpp:
        (WebCore::RenderLineBoxList::paint):
        * rendering/RenderView.h:
        (WebCore::RenderView::setTruncatedAt):
        (WebCore::RenderView::setMinimumColumnHeight):
        (WebCore::RenderView::minimumColumnHeight):

2009-11-11  Kent Tamura  <tkent@chromium.org>

        Reviewed by Darin Adler.

        Fix a bug that RenderFileUploadControl isn't initialized with multiple files.
        https://bugs.webkit.org/show_bug.cgi?id=31195

        Test: fast/forms/input-file-re-render.html

        * rendering/RenderFileUploadControl.cpp:
        (WebCore::RenderFileUploadControl::RenderFileUploadControl):

2009-11-09  Dumitru Daniliuc  <dumi@chromium.org>

        Reviewed by Dimitri Glazkov.

        Fixing Chromium's POSIX VFS implementation, by adding the required
        "used file descriptors" logic.

        https://bugs.webkit.org/show_bug.cgi?id=31275

        * platform/sql/chromium/SQLiteFileSystemChromiumPosix.cpp:

2009-11-11  Chris Fleizach  <cfleizach@apple.com>

        Reviewed by Oliver Hunt.

        need to implement aria tree roles
        https://bugs.webkit.org/show_bug.cgi?id=31284

        Tests: platform/mac/accessibility/aria-multiselectable.html
               platform/mac/accessibility/aria-tree.html

        * accessibility/AccessibilityList.cpp:
        (WebCore::AccessibilityList::accessibilityIsIgnored):
        * accessibility/AccessibilityObject.cpp:
        (WebCore::AccessibilityObject::ariaTreeRows):
        (WebCore::AccessibilityObject::ariaTreeItemContent):
        (WebCore::AccessibilityObject::ariaTreeItemDisclosedRows):
        * accessibility/AccessibilityObject.h:
        (WebCore::):
        (WebCore::AccessibilityObject::isTree):
        (WebCore::AccessibilityObject::isTreeItem):
        (WebCore::AccessibilityObject::setIsExpanded):
        (WebCore::AccessibilityObject::canSetExpandedAttribute):
        (WebCore::AccessibilityObject::hierarchicalLevel):
        (WebCore::AccessibilityObject::setSelectedRows):
        (WebCore::AccessibilityObject::performDefaultAction):
        * accessibility/AccessibilityRenderObject.cpp:
        (WebCore::AccessibilityRenderObject::hierarchicalLevel):
        (WebCore::AccessibilityRenderObject::accessibilityIsIgnored):
        (WebCore::AccessibilityRenderObject::isExpanded):
        (WebCore::AccessibilityRenderObject::setElementAttributeValue):
        (WebCore::AccessibilityRenderObject::elementAttributeValue):
        (WebCore::AccessibilityRenderObject::setIsExpanded):
        (WebCore::AccessibilityRenderObject::isSelected):
        (WebCore::AccessibilityRenderObject::setSelected):
        (WebCore::AccessibilityRenderObject::setSelectedRows):
        (WebCore::createARIARoleMap):
        (WebCore::AccessibilityRenderObject::canSetExpandedAttribute):
        (WebCore::AccessibilityRenderObject::ariaTreeSelectedRows):
        (WebCore::AccessibilityRenderObject::ariaListboxSelectedChildren):
        (WebCore::AccessibilityRenderObject::selectedChildren):
        * accessibility/AccessibilityRenderObject.h:
        * accessibility/mac/AccessibilityObjectMac.mm:
        (WebCore::AccessibilityObject::accessibilityPlatformIncludesObject):
        * accessibility/mac/AccessibilityObjectWrapper.mm:
        (-[AccessibilityObjectWrapper accessibilityAttributeNames]):
        (RoleEntry::):
        (-[AccessibilityObjectWrapper subrole]):
        (-[AccessibilityObjectWrapper accessibilityAttributeValue:]):
        (-[AccessibilityObjectWrapper accessibilityIsAttributeSettable:]):
        (-[AccessibilityObjectWrapper accessibilityPerformShowMenuAction]):
        (-[AccessibilityObjectWrapper accessibilitySetValue:forAttribute:]):
        (-[AccessibilityObjectWrapper accessibilityArrayAttributeCount:]):
        * html/HTMLAttributeNames.in:

2009-11-11  Brent Fulgham  <bfulgham@webkit.org>

        Build fix after @r50760 with ENABLE_FILTERS.

        * platform/graphics/filters/SourceAlpha.cpp:
        (WebCore::SourceAlpha::apply): Supply ColorSpace to fillRect.
        * svg/graphics/filters/SVGFEFlood.cpp: Supply ColorSpace argument
          to fillRect.

2009-11-11  Fumitoshi Ukai  <ukai@chromium.org>

        Reviewed by Alexey Proskuryakov.

        Fix WebSocket frame parser of frame_type with high-order bit set.
        https://bugs.webkit.org/show_bug.cgi?id=30668

        If buffer is smaller than frame's length, it should break the loop
        instead of reading next byte.

        Tests: websocket/tests/frame-length-longer-than-buffer.html
               websocket/tests/frame-length-skip.html

        * websockets/WebSocketChannel.cpp:
        (WebCore::WebSocketChannel::didReceiveData):

2009-11-11  Yusuke Sato  <yusukes@chromium.org>

        Reviewed by Adam Barth.

        [chromium] Remove t2embed.dll functions from FontCustomPlatformData.cpp for Chromium
        https://bugs.webkit.org/show_bug.cgi?id=31345

        Remove dependency on t2embed.dll so that Chromium for Windows can start even if t2embed.dll cannot be accessed.

        * platform/graphics/chromium/FontCustomPlatformData.cpp:
        (WebCore::FontCustomPlatformData::~FontCustomPlatformData): Remove TTDeleteEmbeddedFont() call. Always use RemoveFontMemResourceEx().
        (WebCore::FontCustomPlatformData::fontPlatformData): Remove TTGetNewFontName() call.
        (WebCore::createFontCustomPlatformData): Remove TTLoadEmbeddedFont() call. Always use AddFontMemResourceEx() via renameAndActivateFont() in opentype/OpenTypeUtility.h. Remove EOTStream class as well.

2009-11-11  Beth Dakin  <bdakin@apple.com>

        Build fix. No review needed.

        * platform/graphics/gtk/FontGtk.cpp:
        (WebCore::Font::drawComplexText):

2009-11-11  Beth Dakin  <bdakin@apple.com>

        Build fix. No review needed.

        * platform/graphics/cairo/FontCairo.cpp:
        (WebCore::Font::drawGlyphs):

2009-11-11  Beth Dakin  <bdakin@apple.com>

        Windows build fix. No review needed. 

        * platform/graphics/win/FontCGWin.cpp:
        (WebCore::Font::drawGlyphs):

2009-11-11  Beth Dakin  <bdakin@apple.com>

        Reviewed by Simon Fraser.

        Fix for https://bugs.webkit.org/show_bug.cgi?id=31382
        Make -webkit-color-correction work with shadows

        From canvas, just send DeviceColorSpace to setShadow() for now. 
        Will fix soon when I address https://bugs.webkit.org/show_bug.cgi?id=31319
        * html/canvas/CanvasRenderingContext2D.cpp:
        (WebCore::CanvasRenderingContext2D::setShadow):
        (WebCore::CanvasRenderingContext2D::applyShadow):

        setShadow() and setPlatformShadow() now take a ColorSpace.
        * platform/graphics/GraphicsContext.cpp:
        (WebCore::GraphicsContext::setShadow):
        * platform/graphics/GraphicsContext.h:
        * platform/graphics/cg/GraphicsContextCG.cpp:
        (WebCore::createCGColorWithColorSpace): New helper to create a 
        color in a ColorSpace.
        (WebCore::setCGFillColor): Call new helper.
        (WebCore::setCGStrokeColor): Call new helper.
        (WebCore::GraphicsContext::setPlatformShadow): Call new helper.
        * platform/graphics/haiku/GraphicsContextHaiku.cpp:
        (WebCore::GraphicsContext::setPlatformShadow):

        Send appropriate ColorSpace to setShadow().
        * platform/graphics/mac/FontMac.mm:
        (WebCore::Font::drawGlyphs):
        * rendering/EllipsisBox.cpp:
        (WebCore::EllipsisBox::paint):
        * rendering/InlineFlowBox.cpp:
        (WebCore::InlineFlowBox::paintTextDecorations):
        * rendering/InlineTextBox.cpp:
        (WebCore::paintTextWithShadows):
        (WebCore::InlineTextBox::paintDecoration):
        * rendering/RenderBoxModelObject.cpp:
        (WebCore::RenderBoxModelObject::paintBoxShadow):
        * rendering/SVGInlineTextBox.cpp:
        (WebCore::SVGInlineTextBox::paintCharacters):
        * rendering/SVGRenderSupport.cpp:
        (WebCore::SVGRenderBase::prepareToRenderSVGContent):

        Attempt to keep ports building.
        * platform/graphics/cairo/GraphicsContextCairo.cpp:
        (WebCore::GraphicsContext::setPlatformShadow):
        * platform/graphics/qt/GraphicsContextQt.cpp:
        (WebCore::GraphicsContext::setPlatformShadow):
        * platform/graphics/skia/GraphicsContextSkia.cpp:
        (WebCore::GraphicsContext::setPlatformShadow):
        * platform/graphics/wince/GraphicsContextWince.cpp:
        (WebCore::GraphicsContext::setPlatformShadow):
        * platform/graphics/wx/GraphicsContextWx.cpp:
        (WebCore::GraphicsContext::setPlatformShadow):

2009-11-11  Kent Tamura  <tkent@chromium.org>

        Reviewed by Darin Adler.

        Print the file text of a file upload control in DumpRenderTree for ease of tests.
        https://bugs.webkit.org/show_bug.cgi?id=31195

        * rendering/RenderFileUploadControl.cpp:
        (WebCore::RenderFileUploadControl::paintObject):
        (WebCore::RenderFileUploadControl::fileTextValue):
        * rendering/RenderFileUploadControl.h:
        (WebCore::RenderFileUploadControl::isFileUploadControl):
        (WebCore::toRenderFileUploadControl):
        * rendering/RenderObject.h:
        (WebCore::RenderObject::isFileUploadControl):
        * rendering/RenderTreeAsText.cpp:
        (WebCore::operator<<):

2009-11-11  Gavin Barraclough  <barraclough@apple.com>

        Reviewed by Sam Weinig.

        DOM Wrappers for some nodes may not be marked.
        https://bugs.webkit.org/show_bug.cgi?id=31380

        Some markChildren methods are calling getCachedDOMNodeWrapper, which will find
        the wrapper for the current world only.  This means that wrappers may be GC'ed
        prematurely, and properties lost.

        Move to a model more like markDOMObjectWrapper, mark wrappers for all worlds.

        * bindings/js/JSAttrCustom.cpp:
        (WebCore::JSAttr::markChildren):
        * bindings/js/JSDOMBinding.cpp:
        (WebCore::markDOMNodeWrapper):
        * bindings/js/JSDOMBinding.h:
        * bindings/js/JSNamedNodeMapCustom.cpp:
        (WebCore::JSNamedNodeMap::markChildren):
        * bindings/js/JSNodeCustom.cpp:
        (WebCore::JSNode::markChildren):
        * bindings/js/JSSVGElementInstanceCustom.cpp:
        (WebCore::JSSVGElementInstance::markChildren):
        * bindings/js/JSStyleSheetCustom.cpp:
        (WebCore::JSStyleSheet::markChildren):

2009-11-11  Ben Murdoch  <benm@google.com>

        Reviewed by Darin Adler.

        bindings/js/ScriptObject.cpp is missing and ENABLE(INSPECTOR) guard.
        https://bugs.webkit.org/show_bug.cgi?id=31384

        No functionality change so no tests required.

        * bindings/js/ScriptObject.cpp: Add ENABLE(INSPECTOR) guard around the JSInspectorBackend.h include.

2009-11-11  Jens Alfke  <snej@chromium.org>

        Reviewed by Dimitri Glazkov.

        The Big De-Inlining. 450k code size reduction (32-bit x86.)
        - Various inline functions in V8Binding.h made non-inline.
        - Some renaming for consistency.
        - New function createRawTemplate().
        https://bugs.webkit.org/show_bug.cgi?id=31383

        * bindings/scripts/CodeGeneratorV8.pm:
        * bindings/v8/V8Binding.cpp:
        (WebCore::v8DOMWrapperToNative):
        (WebCore::v8ValueToWebCoreString):
        (WebCore::v8ValueToAtomicWebCoreString):
        (WebCore::toInt32):
        (WebCore::toWebCoreString):
        (WebCore::toWebCoreStringWithNullCheck):
        (WebCore::toAtomicWebCoreStringWithNullCheck):
        (WebCore::toWebCoreStringWithNullOrUndefinedCheck):
        (WebCore::isUndefinedOrNull):
        (WebCore::v8Boolean):
        (WebCore::v8UndetectableString):
        (WebCore::v8StringOrNull):
        (WebCore::v8StringOrUndefined):
        (WebCore::v8StringOrFalse):
        (WebCore::v8StringToWebCoreString):
        (WebCore::v8ExternalString):
        (WebCore::createRawTemplate):  New function.
        * bindings/v8/V8Binding.h:
        (WebCore::v8DOMWrapperTo):
        (WebCore::v8DOMWrapperToNode):
        (WebCore::v8StringToWebCoreString):
        (WebCore::v8StringToAtomicWebCoreString):

2009-11-11  Jens Alfke  <snej@chromium.org>

        Reviewed by Dimitri Glazkov.

        More V8 de-inlining (outlining?) Abstracted a chunk of boilerplate code from every
        event-listener setter into a new subroutine transferHiddenDependency().
        https://bugs.webkit.org/show_bug.cgi?id=31377

        * bindings/scripts/CodeGeneratorV8.pm:  Replace boilerplate with call to transferHiddenDependency().
        * bindings/v8/V8Utilities.cpp:
        (WebCore::transferHiddenDependency):  New.
        * bindings/v8/V8Utilities.h:  Declaration of transferHiddenDependency.

2009-11-11  Brian Weinstein  <bweinstein@apple.com>

        Reviewed by Beth Dakin.

        If we are on Windows, don't try and get the kCGColorSpaceSRGB ColorSpace,
        because there is a CG bug preventing this from working.

        * platform/graphics/cg/GraphicsContextCG.cpp:
        (WebCore::sRGBColorSpaceRef):

2009-11-11  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Check that if Storage panel exists before calling its methods

        https://bugs.webkit.org/show_bug.cgi?id=31343

        * inspector/front-end/inspector.js:
        (WebInspector.addDatabase):
        (WebInspector.addCookieDomain):
        (WebInspector.addDOMStorage):
        (WebInspector.updateDOMStorage):

2009-11-11  Jens Alfke  <snej@chromium.org>

        Reviewed by Dimitri Glazkov.

        De-inline convertNodeToV8Object(), which expands to a lot of asm code and is inlined 136
        times in the generated V8 bindings.
        https://bugs.webkit.org/show_bug.cgi?id=31368

        * bindings/v8/V8DOMWrapper.cpp:
        (WebCore::V8DOMWrapper::convertNodeToV8Object):  Moved body here from .h file
        * bindings/v8/V8DOMWrapper.h:  Removed inline method body.

2009-11-11  Jessie Berlin  <jberlin@webkit.org>

        Reviewed by Timothy Hatcher.

        Display the correct summary in the web inspector for the shorthands
        border-color, border-width, border-style, margin, and padding.
        https://bugs.webkit.org/show_bug.cgi?id=7987

        Test: fast/css/shorthands-four-values.html

        * css/CSSMutableStyleDeclaration.cpp:
        (WebCore::CSSMutableStyleDeclaration::get4Values):
        Display the summary information in the same way the shorthand would be
        specified in a css rule.

2009-11-11  Jens Alfke  <snej@chromium.org>

        Reviewed by Dimitri Glazkov.

        Make V8 bindings return NULL handles instead of calling v8::Undefined(). This has equivalent
        meaning to the caller, saves code, and appears to save a few cycles at runtime too.
        https://bugs.webkit.org/show_bug.cgi?id=31367

        * bindings/scripts/CodeGeneratorV8.pm: Change "v8::Undefined()" to "v8::Handle<v8::Value>()"

2009-11-11  Jens Alfke  <snej@chromium.org>

        Reviewed by Dimitri Glazkov.

        Optimize V8 getDOMNodeMap(), a hot function in Dromaeo DOM tests, by increasing inlining.

        * bindings/v8/DOMData.cpp:
        (WebCore::DOMData::getCurrent):  Moved getCurrentMainThread to MainThreadDOMData::getCurrent
            so it can be inlined by its caller.
        * bindings/v8/DOMData.h:
        * bindings/v8/MainThreadDOMData.cpp:
        (WebCore::MainThreadDOMData::getCurrent):  Moved here from DOMData.cpp.
        (WebCore::MainThreadDOMData::getMainThreadStore):  Added UNLIKELY macro to improve codegen.
        (WebCore::MainThreadDOMData::getCurrentMainThreadStore):  Combination of getCurrentMainThread
            and getStore, which inline both calls together.
        * bindings/v8/MainThreadDOMData.h:
        (WebCore::MainThreadDOMData::getStore):  Broke out nonvirtual getMainThreadStore for inlineability.
        * bindings/v8/V8DOMMap.cpp:
        (WebCore::getDOMNodeMap):  Call new getCurrentMainThreadStore, which is faster.

2009-11-11  Nate Chapin  <japhet@chromium.org>

        Reviewed by Dimitri Glazkov.

        Add methods to KURLGoogle.cpp declared in http://trac.webkit.org/changeset/50784 but not defined when using KURLGoogle.

        https://bugs.webkit.org/show_bug.cgi?id=31357

        * platform/KURLGoogle.cpp:
        (WebCore::isSchemeFirstChar):
        (WebCore::isSchemeChar):
        (WebCore::KURL::hasPort):
        (WebCore::KURL::removePort):
        (WebCore::protocolIsValid):

2009-11-11  Brent Fulgham  <bfulgham@webkit.org>

        Build fix, no reviewed.

        Correct setPlatformFillColor and setPlatformStrokeColor calls
        to match new ColorSpace-supporting signatures.

        * platform/graphics/win/GraphicsContextCairoWin.cpp:  Add the
          color space to the set[...]Color calls.

2009-11-10  Alexey Proskuryakov  <ap@apple.com>

        Reviewed by Sam Weinig.

        https://bugs.webkit.org/show_bug.cgi?id=31327
        Clean up SocketStreamHandleClient interface

        No change in behavior.

        * platform/network/SocketStreamHandleClient.h: Removed willOpenStream and willSendData.
        (WebCore::SocketStreamHandleClient::willOpenStream): Removed. This is currently not used by
        the only client (WebSocketChannel), and it's not clear what this callback's semantics
        should be.
        (WebCore::SocketStreamHandleClient::willSendData): Ditto.
        (WebCore::SocketStreamHandleClient::receivedCancellation): Removed, because it was misplaced.
        For ResourceHandle, this method is called when the user cancels authentication sheet,
        not when something happens with the stream.

        * websockets/WebSocketChannel.h: Some WebSocketChannel methods were virtual without any
        reason. Also, added didReceiveAuthenticationChallenge/didCancelAuthenticationChallenge.

        * websockets/WebSocketChannel.cpp: Adjusted for the above change. Authentication-related
        callbacks have no real implementation yet.

2009-11-11  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Eric Seidel.

        Allow custom memory allocation control for the part of page directory in WebCore
        https://bugs.webkit.org/show_bug.cgi?id=31350

        Inherits the following classes from Noncopyable because these are instantiated
        by 'new' and these are no need to be copyable:

        class DragController         - instantiated at: WebCore/page/Page.cpp:107
        class FocusController        - instantiated at: WebCore/page/Page.cpp:109
        class Settings               - instantiated at: WebCore/page/Page.cpp:116
        class PluginHalter           - instantiated at: WebCore/page/Page.cpp:160
        struct ScheduledEvent        - instantiated at: WebCore/page/FrameView.cpp:1275
        class UserScript             - instantiated at: WebCore/page/PageGroup.cpp:208
        struct EventHandlerDragState - instantiated at: WebCore/page/EventHandler.cpp:182
        class XSSAuditor             - instantiated at: WebCore/bindings/js/ScriptController.cpp:70
        class UserStyleSheet         - instantiated at: WebCore/page/PageGroup.cpp:222

        Inherits PropertyWrapperBase class from Noncopyable because (its child class) 
        PropertyWrapper is instantiated by 'new' in 
        WebCore/page/animation/AnimationBase.cpp:564 it is no need to be copyable.

        * page/DragController.h:
        * page/EventHandler.h:
        * page/FocusController.h:
        * page/FrameView.cpp:
        * page/PluginHalter.h:
        * page/Settings.h:
        * page/UserScript.h:
        * page/UserStyleSheet.h:
        * page/XSSAuditor.h:
        * page/animation/AnimationBase.cpp:

2009-11-11  Laszlo Gombos  <laszlo.1.gombos@nokia.com>

        Reviewed by Kenneth Rohde Christiansen.

        https://bugs.webkit.org/show_bug.cgi?id=31323
        Fix a few compiler warnings

        No new tests as there is no new functionality.

        * editing/htmlediting.cpp:
        (WebCore::isRenderedAsNonInlineTableImageOrHR): Use explicit
        parentheses to silence gcc 4.4 -Wparentheses warnings

2009-11-11  Kenneth Rohde Christiansen  <kenneth@webkit.org>

        Reviewed by Mark Rowe.

        Set m_hasPendingGeometryChange to true by default, so that
        at least one call to NPP_SetWindow is executed, which is
        needed by the DRT plugin testing framework.

        * plugins/PluginView.cpp:
        (WebCore::PluginView::PluginView):

2009-11-11  Csaba Osztrogonác  <ossy@webkit.org>

        Rubber-stamped by Kenneth Rohde Christiansen.

        https://bugs.webkit.org/show_bug.cgi?id=31348
        [Qt] Remove unnecessary LUT creator from WebCore.pro

        * WebCore.pro:

2009-11-11  Simon Hausmann  <simon.hausmann@nokia.com>

        Reviewed by Tor Arne Vestbø.

        Introduce a function for querying the input method status
        in QWebPageClient.

        * platform/qt/QWebPageClient.h:

2009-11-11  Benjamin Otte  <otte@gnome.org>

        Reviewed by Jan Alonzo.

        [GTK] Black artifacts in youtube.com/html5

        Paint the video to the given size. It's the job of the callers to keep
        track of aspect ratio. RenderVideo.cpp does it for the <video>
        element.
        https://bugs.webkit.org/show_bug.cgi?id=30925

        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.cpp:
        (WebCore::MediaPlayerPrivate::paint):

2009-11-11  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Reviewed by Jan Alonzo.

        https://bugs.webkit.org/show_bug.cgi?id=30901
        [Gtk] Need to de-lint the Atk a11y code

        Cleaned up some missed capitalization style-guideline violations.

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:

2009-11-11  Jocelyn Turcotte  <jocelyn.turcotte@nokia.com>

        Reviewed by Eric Seidel.

        [Qt] Make the default style background color valid.
        Currently the color is transparent but invalid, this causes
        list boxes in QtWebKit to be drawn with a black background
        since r49242.
        https://bugs.webkit.org/show_bug.cgi?id=31295

        * rendering/style/RenderStyle.h:
        (WebCore::InheritedFlags::initialBackgroundColor):
        * rendering/style/StyleBackgroundData.cpp:
        (WebCore::StyleBackgroundData::StyleBackgroundData):

2009-11-10  Gavin Barraclough  <barraclough@apple.com>

        Reviewed by Geoff Garen.

        Simplify the ownership model for worlds - rather than having a pair of weak references
        between DOMWrapperWorld and ScriptController/ScriptCachedFrameData, give the latter an
        ref pointer to the former.  This reduces complexity & cost of the caching entries in the
        back forward cache.

        * WebCore.base.exp:
        * bindings/js/JSDOMBinding.cpp:
        (WebCore::DOMWrapperWorld::~DOMWrapperWorld):
        * bindings/js/JSDOMBinding.h:
        (WebCore::DOMWrapperWorld::forgetDocument):
        * bindings/js/ScriptCachedFrameData.cpp:
        (WebCore::ScriptCachedFrameData::ScriptCachedFrameData):
        (WebCore::ScriptCachedFrameData::restore):
        (WebCore::ScriptCachedFrameData::clear):
        * bindings/js/ScriptCachedFrameData.h:
        * bindings/js/ScriptController.cpp:
        (WebCore::ScriptController::~ScriptController):
        (WebCore::ScriptController::clearWindowShell):
        (WebCore::ScriptController::initScript):
        (WebCore::ScriptController::updateDocument):
        * bindings/js/ScriptController.h:

2009-11-10  Shinichiro Hamaji  <hamaji@chromium.org>

        Reviewed by Darin Adler.

        rename counter to makeCounterNode in RenderCounter.cpp
        https://bugs.webkit.org/show_bug.cgi?id=31289

        No new test because this is just a small refactoring.

        * rendering/RenderCounter.cpp:
        (WebCore::findPlaceForCounter):
        (WebCore::makeCounterNode):
        (WebCore::RenderCounter::originalText):

2009-11-10  Daniel Bates  <dbates@webkit.org>

        Reviewed by Oliver Hunt.

        https://bugs.webkit.org/show_bug.cgi?id=30754

        Patch 2 of 2.

        Removed method EventHandler::dragSourceMovedTo, since it is no longer
        needed. This method fired a drag event whenever the mouse moved, but
        section 7.9.4 of the HTML 5 spec. defines the drag-and-drop processing
        model independent of when the mouse moves. See "Among other changes..."
        in the change log for patch 1 for more details.

        * WebCore.DragSupport.exp:
        * page/EventHandler.cpp: Removed method EventHandler::dragSourceMovedTo.
        (WebCore::EventHandler::handleDrag): Updated comment about reentrancy issue.
        * page/EventHandler.h:

2009-11-10  Daniel Bates  <dbates@webkit.org>

        Reviewed by Oliver Hunt.

        https://bugs.webkit.org/show_bug.cgi?id=30754

        Patch 1 of 2.

        As per Section 7.9.4 of the HTML 5 spec. <http://dev.w3.org/html5/spec/Overview.html#drag-and-drop-processing-model>,
        the drag event should always fire before the dragover event.

        In fixing this bug, this patch also makes our drag processing model
        conform to the HTML 5 spec.

        Among the changes, this patch ensures that the drag event isn't fired outside
        of the drag-and-drop processing loop, WebCore::EventHandler::updateDragAndDrop.
        Currently, the drag event is fired whenever the mouse button is down and the OS
        detects the mouse moved. But, as per the spec, the drag event should
        fire approx. every 350ms so long as the mouse button is down.

        Test: fast/events/drag-and-drop-fire-drag-dragover.html

        * page/EventHandler.cpp:
        (WebCore::EventHandler::clear):
        (WebCore::EventHandler::canHandleDragAndDropForTarget): Formerly named handleDragAndDropForTarget.
        Modified to determine when we are in the correct instance of EventHandler to service the drag
        and drop operation.
        (WebCore::EventHandler::updateDragAndDrop): Moved code from WebCore::EventHandler::dragSourceMovedTo
        into this method.
        (WebCore::EventHandler::cancelDragAndDrop):
        (WebCore::EventHandler::performDragAndDrop):
        (WebCore::EventHandler::clearDragState):
        * page/EventHandler.h: Added field m_shouldOnlyFireDragOverEvent to determine whether
        we should fire both drag and dragover events or only the dragover event.

2009-11-10  Vitaly Repeshko  <vitalyr@chromium.org>

        Reviewed by Dimitri Glazkov.

        [V8] Fix crash in V8CustomXPathNSResolver (http://crbug.com/26726).
        https://bugs.webkit.org/show_bug.cgi?id=31301

        Tested by new fast/xpath/xpath-detached-iframe-resolver-crash.html.

        Allowed passing V8Proxy for the calling JS context:
        * bindings/v8/V8DOMWrapper.h:
        (WebCore::V8DOMWrapper::getXPathNSResolver):
        * bindings/v8/custom/V8CustomXPathNSResolver.cpp:
        (WebCore::V8CustomXPathNSResolver::create):
        (WebCore::V8CustomXPathNSResolver::V8CustomXPathNSResolver):
        (WebCore::V8CustomXPathNSResolver::lookupNamespaceURI):
        * bindings/v8/custom/V8CustomXPathNSResolver.h:
        * bindings/v8/custom/V8DocumentCustom.cpp:
        (WebCore::CALLBACK_FUNC_DECL):

2009-11-10  Yael Aharon  <yael.aharon@nokia.com>

        Reviewed by Timothy Hatcher.

        Implement URL decomposition IDL attributes for HTMLAnchorElement.
        https://bugs.webkit.org/show_bug.cgi?id=29972.

        Add methods for setting different parts of the URL in href attribute.

        Tests: fast/dom/HTMLAnchorElement/set-href-attribute-hash.html
               fast/dom/HTMLAnchorElement/set-href-attribute-host.html
               fast/dom/HTMLAnchorElement/set-href-attribute-hostname.html
               fast/dom/HTMLAnchorElement/set-href-attribute-pathname.html
               fast/dom/HTMLAnchorElement/set-href-attribute-port.html
               fast/dom/HTMLAnchorElement/set-href-attribute-protocol.html
               fast/dom/HTMLAnchorElement/set-href-attribute-search.html

        * bindings/js/JSLocationCustom.cpp:
        (WebCore::JSLocation::setPort):
        * html/HTMLAnchorElement.cpp:
        (WebCore::parsePortFromStringPosition):
        (WebCore::HTMLAnchorElement::setHash):
        (WebCore::HTMLAnchorElement::setHost):
        (WebCore::HTMLAnchorElement::setHostname):
        (WebCore::HTMLAnchorElement::setPathname):
        (WebCore::HTMLAnchorElement::setPort):
        (WebCore::HTMLAnchorElement::setProtocol):
        (WebCore::HTMLAnchorElement::setSearch):
        * html/HTMLAnchorElement.h:
        * html/HTMLAnchorElement.idl:
        * loader/FrameLoader.cpp:
        (WebCore::FrameLoader::iconURL):
        * platform/KURL.cpp:
        (WebCore::KURL::removePort):
        (WebCore::KURL::setPort):
        (WebCore::KURL::prettyURL):
        (WebCore::protocolIsValid):
        * platform/KURL.h:
        (WebCore::KURL::canSetHostOrPort):
        (WebCore::KURL::canSetPathname):
        (WebCore::KURL::hasPort):
        * platform/network/soup/ResourceHandleSoup.cpp:
        (WebCore::):

2009-11-10  Nate Chapin  <japhet@chromium.org>

        Unreviewed, fix Chromium build after http://trac.webkit.org/changeset/50760.

        * platform/chromium/PopupMenuChromium.cpp:
        (WebCore::PopupContainer::paintBorder):
        (WebCore::PopupListBox::paint):
        (WebCore::PopupListBox::paintRow):
        * platform/graphics/chromium/TransparencyWin.cpp:
        (WebCore::TransparencyWin::setupLayerForWhiteLayer):
        * platform/graphics/skia/GraphicsContextSkia.cpp:
        (WebCore::GraphicsContext::fillRect):
        (WebCore::GraphicsContext::fillRoundedRect):
        (WebCore::GraphicsContext::setPlatformFillColor):
        (WebCore::GraphicsContext::setPlatformStrokeColor):
        * rendering/RenderMediaControlsChromium.cpp:
        (WebCore::paintMediaSlider):
        (WebCore::paintMediaVolumeSlider):
        (WebCore::paintMediaTimelineContainer):
        * rendering/RenderThemeChromiumMac.mm:
        (WebCore::RenderThemeChromiumMac::paintMenuListButton):

2009-11-10  Brady Eidson  <beidson@apple.com>

        Reviewed by Sam Weinig.

        Repro crash saving pcmag.com article as a webarchive.
        <rdar://problem/7381219> and https://webkit.org/b/31322

        Test: http/tests/webarchive/cross-origin-stylesheet-crash.html

        * css/CSSStyleSheet.cpp:
        (WebCore::CSSStyleSheet::addSubresourceStyleURLs): Walk the stylesheet itself instead
          of creating a CSSRuleList (and subjecting ourselves to the security origin check)

2009-11-10  Beth Dakin  <bdakin@apple.com>

        Attempt 2 to fix Tiger build. No review needed.

        * platform/graphics/cg/GraphicsContextCG.cpp:
        (WebCore::deviceRGBColorSpaceRef):
        (WebCore::sRGBColorSpaceRef):

2009-11-10  Kevin Ollivier  <kevino@theolliviers.com>

        wx build fix. Changes needed after r50760.

        * platform/graphics/wx/GraphicsContextWx.cpp:
        (WebCore::GraphicsContext::GraphicsContext):
        * platform/wx/wxcode/mac/carbon/non-kerned-drawing.cpp:
        (WebCore::drawTextWithSpacing):

2009-11-10  Alexey Proskuryakov  <ap@apple.com>

        Qt build fix.

        * platform/network/ResourceHandle.h: Only inherit from AuthenticationClient on platforms
        that use ResourceHandle as a delegate (Mac, CFNetwork, Curl).

2009-11-10  Beth Dakin  <bdakin@apple.com>

        Tiger build fix. No review needed.

        * platform/graphics/cg/GraphicsContextCG.cpp:
        (WebCore::sRGBColorSpaceRef):

2009-11-10  Alexey Proskuryakov  <ap@apple.com>

        Reviewed by Dan Bernstein.

        https://bugs.webkit.org/show_bug.cgi?id=31312
        Decouple authentication panel callbacks from ResourceHandle

        No change in functionality.

        SocketStreamHandle also needs to request credentials, so it's not appropriate to store
        ResourceHandle as delegate.

        * WebCore.vcproj/WebCore.vcproj:
        * platform/network/AuthenticationClient.h: Added.
        Added a new interface for listening to authentication panel notifications.

        * WebCore.xcodeproj/project.pbxproj: Added AuthenticationClient.h. Let Visual Studio do what
        it wants with the project file.

        (WebCore::AuthenticationClient::ref): Using our usual method of exposing refcounting on an
        interface class.
        (WebCore::AuthenticationClient::deref): Ditto.

        * platform/network/ResourceHandle.h:
        (WebCore::ResourceHandle::refAuthenticationClient): Ditto.
        (WebCore::ResourceHandle::derefAuthenticationClient): Ditto.

        * platform/network/cf/AuthenticationCF.cpp:
        (WebCore::AuthenticationChallenge::AuthenticationChallenge):
        (WebCore::AuthenticationChallenge::platformCompare):
        * platform/network/cf/AuthenticationChallenge.h:
        (WebCore::AuthenticationChallenge::authenticationClient):
        * platform/network/chromium/AuthenticationChallenge.h:
        (WebCore::AuthenticationChallenge::authenticationClient):
        * platform/network/curl/AuthenticationChallenge.h:
        (WebCore::AuthenticationChallenge::authenticationClient):
        Keeping a reference to AuthenticationClient, not to ResourceHandle.

2009-11-10  Beth Dakin  <bdakin@apple.com>

       Second attempted gtk build fix. No review needed.

        * html/canvas/CanvasStyle.cpp:
        (WebCore::CanvasStyle::applyStrokeColor):


2009-11-10  Gavin Barraclough  <barraclough@apple.com>

        Reviewed by Geoff Garen.

        Fix back/forwards cache with JSC isolated worlds.
        https://bugs.webkit.org/show_bug.cgi?id=31310
        <rdar://problem/7328111> Cached back navigation doesn't restore global object in extension isolated world

        Store the global object for all worlds, not just the normal world.
        Also maintain bidirectional weak references between the ScriptCachedFrameData and the DOMWrapperWorld,
        so we can forget global objects if a world goes away.

        * bindings/js/JSDOMBinding.cpp:
        (WebCore::DOMWrapperWorld::~DOMWrapperWorld):
        * bindings/js/JSDOMBinding.h:
        (WebCore::DOMWrapperWorld::rememberScriptCachedFrameData):
        (WebCore::DOMWrapperWorld::forgetScriptCachedFrameData):
        * bindings/js/ScriptCachedFrameData.cpp:
        (WebCore::ScriptCachedFrameData::ScriptCachedFrameData):
        (WebCore::ScriptCachedFrameData::forgetWorld):
        (WebCore::ScriptCachedFrameData::domWindow):
        (WebCore::ScriptCachedFrameData::restore):
        (WebCore::ScriptCachedFrameData::clear):
        * bindings/js/ScriptCachedFrameData.h:
        * bindings/js/ScriptController.h:

2009-11-10  Csaba Osztrogonác  <ossy@webkit.org>

        [Qt] Unreviewed buildfix after r50760.

        * platform/graphics/qt/GraphicsContextQt.cpp:
        (WebCore::GraphicsContext::GraphicsContext):

2009-11-10  Beth Dakin  <bdakin@apple.com>

        Attempted build fix. (No review needed.)

        * GNUmakefile.am: Adding ColorSpace.h

2009-11-10  Brian Weinstein  <bweinstein@apple.com>

        Reviewed by NOBODY - Build Fix.

        Updated function calls to take a ColorSpace argument, passing
        in DeviceColorSpace for now - this should be fixed. Also added
        ColorSpace.h to WebCore project.

        * WebCore.vcproj/WebCore.vcproj:
        * platform/graphics/win/FontCGWin.cpp:
        (WebCore::Font::drawGlyphs):
        * platform/graphics/win/GraphicsContextCGWin.cpp:
        (WebCore::GraphicsContext::GraphicsContext):
        * platform/win/PopupMenuWin.cpp:
        (WebCore::PopupMenu::paint):
        * platform/win/WebCoreTextRenderer.cpp:
        (WebCore::doDrawTextAtPoint):
        * rendering/RenderThemeSafari.cpp:
        (WebCore::RenderThemeSafari::paintMenuListButton):

2009-11-10  Jens Alfke  <snej@chromium.org>

        Reviewed by Darin Adler.

        Optimizations to Element::getAttribute
        https://bugs.webkit.org/show_bug.cgi?id=30926

        * dom/Element.cpp:
        (WebCore::Element::getAttribute):  User case-insensitive compare instead of lowercasing the name.
        * dom/NamedAttrMap.cpp:
        (WebCore::NamedNodeMap::getAttributeItem):  Avoid redundant compares, and do fast/likely compares first.
        * platform/text/PlatformString.h:
        (WebCore::equalPossiblyIgnoringCase):  New inline method, used by both of the above.

2009-11-10  Beth Dakin  <bdakin@apple.com>

        Reviewed by Darin Adler.

        Fix for <rdar://problem/7059710> 
        -and corresponding-
        https://bugs.webkit.org/show_bug.cgi?id=31196 Implement -webkit-
        color-correction for CSS colors

        New exported symbol for GraphicsContext::fillColor() which now 
        accepts a ColorSpace as an optional parameter.
        * WebCore.base.exp:

        Added a new file, ColorSpace.h, to define the ColorSpace enum.
        * WebCore.xcodeproj/project.pbxproj:

        Computed Style for -webkit-color-correction
        * css/CSSComputedStyleDeclaration.cpp:
        (WebCore::):
        (WebCore::CSSComputedStyleDeclaration::getPropertyCSSValue):

        Parse -webkit-color-correction
        * css/CSSParser.cpp:
        (WebCore::CSSParser::parseValue):

       Map CSS identifiers to the appropriate values of the ColorSpace enum
        * css/CSSPrimitiveValueMappings.h:
        (WebCore::CSSPrimitiveValue::CSSPrimitiveValue):
        (WebCore::CSSPrimitiveValue::operator ColorSpace):

        New property -webkit-color-correction
        * css/CSSPropertyNames.in:

        Map -webkit-color-correction into the RenderStyle.
        * css/CSSStyleSelector.cpp:
        (WebCore::CSSStyleSelector::applyProperty):

        Add new value sRGB.
        * css/CSSValueKeywords.in:

        Comment out the reference to sRGB since it will now be inherited as 
        a value from CSSValueKeywords.
        * css/SVGCSSValueKeywords.in:

        Definition of the ColorSpace enum.
        * platform/graphics/ColorSpace.h: Added.
        (WebCore::):

        These functions all now take a ColorSpace as a parameter.
        * platform/graphics/GraphicsContext.cpp:
        (WebCore::GraphicsContext::setStrokeColor):
        (WebCore::GraphicsContext::setFillColor):
        (WebCore::GraphicsContext::drawHighlightForText):

        Return the appropriate ColorSpace.
        (WebCore::GraphicsContext::strokeColorSpace):
        (WebCore::GraphicsContext::fillColorSpace):

        These functions all call other functions which require a ColorSpace 
        as a parameter.
        (WebCore::GraphicsContext::setStrokePattern):
        (WebCore::GraphicsContext::setFillPattern):
        (WebCore::GraphicsContext::setStrokeGradient):
        (WebCore::GraphicsContext::setFillGradient):

        All of the GraphicsContext functions that take a Color should now 
        also take a ColorSpace.
        * platform/graphics/GraphicsContext.h:

        Added new member variables stokeColorSpace and fillColorSpace.
        * platform/graphics/GraphicsContextPrivate.h:
        (WebCore::GraphicsContextState::GraphicsContextState):

        Attempt to keep the Cairo port building with all of the massive 
        changes to GraphicsContext.        
        * platform/graphics/cairo/GraphicsContextCairo.cpp:
        (WebCore::GraphicsContext::fillRect):
        (WebCore::GraphicsContext::setPlatformFillColor):
        (WebCore::GraphicsContext::setPlatformStrokeColor):
        (WebCore::GraphicsContext::fillRoundedRect):

        
        * platform/graphics/cg/GraphicsContextCG.cpp:
        (WebCore::sRGBColorSpaceRef): New static function that returns a 
        CGColorSpaceRef for the sRGB color space.
        (WebCore::deviceRGBColorSpaceRef): New static function that returns 
        a CGColorSpaceRef for the device RGB color space.

        (WebCore::setCGFillColor): Now takes a ColorSpace parameter and 
        sets the fill color to the specified color in the given ColorSpace.
        (WebCore::setCGStrokeColor): Same, but for stroke.

        (WebCore::setCGFillColorSpace): New static to set the 
        CGFillColorSpace to the given ColorSpace
        (WebCore::setCGStrokeColorSpace): Same, but for stroke.

        Send ColorSpaces when appropriate, set ColorSpaces when 
        appropriate, and check ColorSpaces when appropriate.
        (WebCore::GraphicsContext::GraphicsContext):
        (WebCore::GraphicsContext::drawRect):
        (WebCore::GraphicsContext::drawLine):
        (WebCore::GraphicsContext::fillPath):
        (WebCore::GraphicsContext::strokePath):
        (WebCore::GraphicsContext::fillRect):
        (WebCore::GraphicsContext::fillRoundedRect):
        (WebCore::GraphicsContext::strokeRect):
        (WebCore::GraphicsContext::drawLineForText):
        (WebCore::GraphicsContext::setPlatformStrokeColor):
        (WebCore::GraphicsContext::setPlatformFillColor):

        Attempt to keep Haiku building.
        * platform/graphics/haiku/GraphicsContextHaiku.cpp:
        (WebCore::GraphicsContext::fillRect):
        (WebCore::GraphicsContext::fillRoundedRect):
        (WebCore::GraphicsContext::setPlatformStrokeColor):
        (WebCore::GraphicsContext::setPlatformFillColor):

        Attempt to keep QT building.
        * platform/graphics/qt/GraphicsContextQt.cpp:
        (WebCore::GraphicsContext::fillRect):
        (WebCore::GraphicsContext::fillRoundedRect):
        (WebCore::GraphicsContext::setPlatformStrokeColor):
        (WebCore::GraphicsContext::setPlatformFillColor):

        Attempt to keep Wince building.
        * platform/graphics/wince/GraphicsContextWince.cpp:
        (WebCore::GraphicsContext::fillRect):
        (WebCore::GraphicsContext::setPlatformFillColor):
        (WebCore::GraphicsContext::setPlatformStrokeColor):
        (WebCore::GraphicsContext::clearRect):
        (WebCore::GraphicsContext::fillRoundedRect):
        (WebCore::GraphicsContext::setPlatformShadow):

        Attempt to keep WX building.
        * platform/graphics/wx/GraphicsContextWx.cpp:
        (WebCore::GraphicsContext::fillRect):
        (WebCore::GraphicsContext::fillRoundedRect):
        (WebCore::GraphicsContext::setPlatformStrokeColor):
        (WebCore::GraphicsContext::setPlatformFillColor):

        Added functions colorSpace() and setColorSpace()
        * rendering/style/RenderStyle.h:
        (WebCore::InheritedFlags::colorSpace):
        (WebCore::InheritedFlags::setColorSpace):

        The ColorSpace is stored here.
        * rendering/style/StyleRareInheritedData.cpp:
        (WebCore::StyleRareInheritedData::StyleRareInheritedData):
        (WebCore::StyleRareInheritedData::operator==):
        * rendering/style/StyleRareInheritedData.h:

        All of these call sites call GraphicsContext functions which now 
        require ColorSpaces.
        * editing/SelectionController.cpp:
        (WebCore::SelectionController::paintCaret):
        * html/canvas/CanvasRenderingContext2D.cpp:
        (WebCore::CanvasRenderingContext2D::drawTextInternal):
        * html/canvas/CanvasStyle.cpp:
        (WebCore::CanvasStyle::applyStrokeColor):
        (WebCore::CanvasStyle::applyFillColor):
        * inspector/InspectorController.cpp:
        (WebCore::drawOutlinedQuad):
        * page/FrameView.cpp:
        (WebCore::FrameView::paintContents):
        * platform/ScrollbarTheme.h:
        (WebCore::ScrollbarTheme::paintScrollCorner):
        * platform/ScrollbarThemeComposite.cpp:
        (WebCore::ScrollbarThemeComposite::paintScrollCorner):
        * platform/graphics/Image.cpp:
        (WebCore::Image::fillWithSolidColor):
        * platform/graphics/mac/FontMac.mm:
        (WebCore::Font::drawGlyphs):
        * platform/graphics/mac/MediaPlayerPrivateQTKit.mm:
        (WebCore::MediaPlayerPrivate::paint):
        * rendering/EllipsisBox.cpp:
        (WebCore::EllipsisBox::paint):
        * rendering/InlineFlowBox.cpp:
        (WebCore::InlineFlowBox::paintTextDecorations):
        * rendering/InlineTextBox.cpp:
        (WebCore::updateGraphicsContext):
        (WebCore::paintTextWithShadows):
        (WebCore::InlineTextBox::paint):
        (WebCore::InlineTextBox::paintSelection):
        (WebCore::InlineTextBox::paintCompositionBackground):
        (WebCore::InlineTextBox::paintDecoration):
        (WebCore::InlineTextBox::paintTextMatchMarker):
        (WebCore::InlineTextBox::paintCompositionUnderline):
        * rendering/InlineTextBox.h:
        * rendering/RenderBlock.cpp:
        (WebCore::RenderBlock::fillHorizontalSelectionGap):
        (WebCore::RenderBlock::fillVerticalSelectionGap):
        (WebCore::RenderBlock::fillLeftSelectionGap):
        (WebCore::RenderBlock::fillRightSelectionGap):
        * rendering/RenderBoxModelObject.cpp:
        (WebCore::RenderBoxModelObject::paintFillLayerExtended):
        (WebCore::RenderBoxModelObject::paintBoxShadow):
        * rendering/RenderFileUploadControl.cpp:
        (WebCore::RenderFileUploadControl::paintObject):
        * rendering/RenderFrameSet.cpp:
        (WebCore::RenderFrameSet::paintColumnBorder):
        (WebCore::RenderFrameSet::paintRowBorder):
        * rendering/RenderImage.cpp:
        (WebCore::RenderImage::paintReplaced):
        * rendering/RenderLayer.cpp:
        (WebCore::RenderLayer::paintScrollCorner):
        (WebCore::RenderLayer::paintResizer):
        * rendering/RenderListBox.cpp:
        (WebCore::RenderListBox::paintItemForeground):
        (WebCore::RenderListBox::paintItemBackground):
        * rendering/RenderListMarker.cpp:
        (WebCore::RenderListMarker::paint):
        * rendering/RenderObject.cpp:
        (WebCore::RenderObject::drawLineForBoxSide):
        (WebCore::RenderObject::drawArcForBoxSide):
        * rendering/RenderReplaced.cpp:
        (WebCore::RenderReplaced::paint):
        * rendering/RenderScrollbarTheme.cpp:
        (WebCore::RenderScrollbarTheme::paintScrollCorner):
        * rendering/RenderThemeMac.mm:
        (WebCore::RenderThemeMac::paintMenuListButton):
        * rendering/RenderView.cpp:
        (WebCore::RenderView::paintBoxDecorations):
        * rendering/RenderWidget.cpp:
        (WebCore::RenderWidget::paint):
        * rendering/SVGInlineTextBox.cpp:
        (WebCore::SVGInlineTextBox::paintSelection):
        * svg/graphics/SVGPaintServerGradient.cpp:
        (WebCore::SVGPaintServerGradient::setup):
        * svg/graphics/SVGPaintServerSolid.cpp:
        (WebCore::SVGPaintServerSolid::setup):

2009-11-10  Keishi Hattori  <casey.hattori@gmail.com>

        Reviewed by Timothy Hatcher.

        Web Inspector: Speed up syntax highlighter
        https://bugs.webkit.org/show_bug.cgi?id=31291

        * inspector/front-end/SourceFrame.js:
        (WebInspector.SourceFrame.prototype._loaded):
        (WebInspector.SourceSyntaxHighlighter.prototype.process.moveToNextLine): Replace the line content node.
        (WebInspector.SourceSyntaxHighlighter.prototype.process):
        (WebInspector.SourceSyntaxHighlighter.prototype.appendNonToken):
        (WebInspector.SourceSyntaxHighlighter.prototype.syntaxHighlightNode):
        (WebInspector.CSSSourceSyntaxHighlighter):
        (WebInspector.JavaScriptSourceSyntaxHighlighter):

2009-11-09  Jeremy Orlow  <jorlow@chromium.org>

        Reviewed by Eric Seidel.

        Remove session storage setting
        https://bugs.webkit.org/show_bug.cgi?id=31279

        Remove session storage from Settings.  It was added temporarily so we could
        disable it by default at runtime in Chromium.  We now disable these things in a
        different way, so it's time to remove it.  Qt also depended on this setting for
        a short period of time, but after talking to them we agreed that it should be
        removed.

        This bug is the second half of https://bugs.webkit.org/show_bug.cgi?id=30602

        * page/DOMWindow.cpp:
        (WebCore::DOMWindow::sessionStorage):
        * page/Settings.cpp:
        (WebCore::Settings::Settings):
        * page/Settings.h:

2009-11-10  Dan Bernstein  <mitz@apple.com>

        Reviewed by Eric Carlson and Darin Adler.

        WebCore part of making full-screen video pause during scrubbing.

        * WebCore.Video.exp: Sorted and added HTMLMediaElement::beginScrubbing()
        and HTMLMediaElement::endScrubbing().

2009-11-10  Anton Muhin  <antonm@chromium.org>

        Reviewed by Adam Barth.

        Reapply 50562 reverted by 50588 due to issues with sandboxing (should be fine now).
        https://bugs.webkit.org/show_bug.cgi?id=31051

        * bindings/v8/V8GCController.cpp:
        (WebCore::V8GCController::gcEpilogue):
        (WebCore::V8GCController::checkMemoryUsage):
        * bindings/v8/V8GCController.h:
        * bindings/v8/V8Proxy.cpp:
        (WebCore::V8Proxy::evaluate):
        (WebCore::V8Proxy::runScript):
        (WebCore::V8Proxy::callFunction):

2009-11-10  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Darin Adler.

        Allow custom memory allocation control for the part of loader directory in WebCore
        https://bugs.webkit.org/show_bug.cgi?id=31161

        Inherits the following classes from Noncopyable because these are instantiated
        by 'new' and these are no need to be copyable:

        class Request - WebCore/loader/loader.cpp:100
        struct ScheduledRedirection - WebCore/loader/RedirectScheduler.cpp:164
        class ApplicationCacheStorage - WebCore/loader/appcache/ApplicationCacheStorage.cpp:1121
        class ApplicationCacheHost -  WebCore/loader/DocumentLoader.cpp:151
        class ImageEventSender - WebCore/loader/ImageLoader.cpp:54
        struct ProgressItem - WebCore/loader/ProgressTracker.cpp:169

        Inherits ThreadableLoaderClient class from Noncopyable because (its child class) 
        MainThreadBridge is instantiated by 'new' in 
        WebCore/loader/WorkerThreadableLoader.cpp:59 it is no need to be copyable.

        ThreadableLoaderClient's inheriting has been changed to public.

        * loader/ImageLoader.cpp:
        * loader/ProgressTracker.cpp:
        * loader/RedirectScheduler.cpp:
        * loader/Request.h:
        * loader/ThreadableLoaderClient.h:
        * loader/WorkerThreadableLoader.h:
        * loader/appcache/ApplicationCacheHost.h:
        * loader/appcache/ApplicationCacheStorage.h:

2009-11-10  Philippe Normand  <pnormand@igalia.com>

        Reviewed by Eric Seidel.

        https://bugs.webkit.org/show_bug.cgi?id=31047
        [GTK] Failing test media/video-played-ranges-1.html

        WebKit coding style fixes.

        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.cpp:
        (WebCore::mediaPlayerPrivateMessageCallback):
        (WebCore::MediaPlayerPrivate::naturalSize):
        (WebCore::MediaPlayerPrivate::paint):
        (WebCore::mimeTypeCache):

2009-11-10  Oliver Hunt  <oliver@apple.com>

        Remove build failure introduced by earlier build fix.

        * bindings/v8/custom/V8WebGLIntArrayCustom.cpp:

2009-11-10  Oliver Hunt  <oliver@apple.com>

        Is this the last build fix? grep tells me yes.

        * bindings/v8/custom/V8DocumentCustom.cpp:
        (WebCore::CALLBACK_FUNC_DECL):

2009-11-10  Oliver Hunt  <oliver@apple.com>

        Hopefully the last one.  Why aren't these autogenerated?

        * bindings/v8/V8DOMWrapper.cpp:
        (WebCore::V8DOMWrapper::setIndexedPropertiesToExternalArray):
        (WebCore::V8DOMWrapper::getTemplate):
        (WebCore::V8DOMWrapper::convertToV8Object):

2009-11-10  Oliver Hunt  <oliver@apple.com>

        Another chrome build fix.

        * bindings/v8/custom/V8HTMLCanvasElementCustom.cpp:
        (WebCore::CALLBACK_FUNC_DECL):

2009-11-10  Oliver Hunt  <oliver@apple.com>

        Yet another chrome buildfix

        * bindings/v8/custom/V8WebGLArrayBufferCustom.cpp:
        (WebCore::CALLBACK_FUNC_DECL):
        * bindings/v8/custom/V8WebGLArrayCustom.h:
        (WebCore::constructCanvasArray):
        * bindings/v8/custom/V8WebGLByteArrayCustom.cpp:
        (WebCore::CALLBACK_FUNC_DECL):
        (WebCore::INDEXED_PROPERTY_GETTER):
        (WebCore::INDEXED_PROPERTY_SETTER):
        * bindings/v8/custom/V8WebGLFloatArrayCustom.cpp:
        (WebCore::CALLBACK_FUNC_DECL):
        (WebCore::INDEXED_PROPERTY_GETTER):
        (WebCore::INDEXED_PROPERTY_SETTER):
        * bindings/v8/custom/V8WebGLIntArrayCustom.cpp:
        (WebCore::CALLBACK_FUNC_DECL):
        (WebCore::INDEXED_PROPERTY_GETTER):
        (WebCore::INDEXED_PROPERTY_SETTER):
        * bindings/v8/custom/V8WebGLRenderingContextCustom.cpp:
        (WebCore::CALLBACK_FUNC_DECL):
        (WebCore::vertexAttribAndUniformHelperf):
        (WebCore::uniformHelperi):
        (WebCore::uniformMatrixHelper):
        * bindings/v8/custom/V8WebGLShortArrayCustom.cpp:
        (WebCore::CALLBACK_FUNC_DECL):
        (WebCore::INDEXED_PROPERTY_GETTER):
        (WebCore::INDEXED_PROPERTY_SETTER):
        * bindings/v8/custom/V8WebGLUnsignedByteArrayCustom.cpp:
        (WebCore::CALLBACK_FUNC_DECL):
        (WebCore::INDEXED_PROPERTY_GETTER):
        (WebCore::INDEXED_PROPERTY_SETTER):
        * bindings/v8/custom/V8WebGLUnsignedIntArrayCustom.cpp:
        (WebCore::CALLBACK_FUNC_DECL):
        (WebCore::INDEXED_PROPERTY_GETTER):
        (WebCore::INDEXED_PROPERTY_SETTER):
        * bindings/v8/custom/V8WebGLUnsignedShortArrayCustom.cpp:
        (WebCore::CALLBACK_FUNC_DECL):
        (WebCore::INDEXED_PROPERTY_GETTER):
        (WebCore::INDEXED_PROPERTY_SETTER):

2009-11-10  Oliver Hunt  <oliver@apple.com>

        Chrome build fix.

        * bindings/v8/V8Index.h:

2009-11-10  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Reviewed by Jan Alonzo.

        https://bugs.webkit.org/show_bug.cgi?id=30901
        [Gtk] Need to de-lint the Atk a11y code

        Removal of various and sundry style-violating nits.

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:

2009-11-10  Philippe Normand  <pnormand@igalia.com>

        Reviewed by Jan Alonzo.

        https://bugs.webkit.org/show_bug.cgi?id=31047
        [GTK] Failing test media/video-played-ranges-1.html

        Fix playback rate setter by remembering the rate was changed. Also
        correctly handle reverse playback by doing a seek from end to
        beginning of the media.

        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.cpp:
        (WebCore::MediaPlayerPrivate::MediaPlayerPrivate):
        (WebCore::MediaPlayerPrivate::currentTime):
        (WebCore::MediaPlayerPrivate::seek):
        (WebCore::MediaPlayerPrivate::hasAudio):
        (WebCore::MediaPlayerPrivate::setVolume):
        (WebCore::MediaPlayerPrivate::setRate):
        (WebCore::MediaPlayerPrivate::updateStates):
        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.h:

2009-11-10  Oliver Hunt  <oliver@apple.com>

        Reviewed by Maciej Stachowiak.

        Rename 3D Canvas related classes to use WebGL prefix
        https://bugs.webkit.org/show_bug.cgi?id=29095

        Automatic rename of all WebGL related types from Canvas* to
        WebGL* per more recent version of the WebGL spec.

        Due to the automatic rename I've removed the 600+ line change list.

2009-11-09  Dirk Schulze  <krit@webkit.org>

        Reviewed by Oliver Hunt.

        SVG feDisplacementMap is not implemented
        [https://bugs.webkit.org/show_bug.cgi?id=31255]

        This is the implementation of the SVG filter effect
        feDisplacementMap. 

        Test: svg/filters/feDisplacementMap.svg

        * svg/graphics/filters/SVGFEDisplacementMap.cpp:
        (WebCore::FEDisplacementMap::apply):

2009-11-09  Kent Tamura  <tkent@chromium.org>

        Reviewed by Darin Adler.

        Add a comment about null strings and hash functions.
        https://bugs.webkit.org/show_bug.cgi?id=29118

        * platform/text/StringHash.h:

2009-11-09  Martin Robinson  <martin.james.robinson@gmail.com>

        Reviewed by Darin Adler.

        Compiler warnings in InspectorResource.h
        https://bugs.webkit.org/show_bug.cgi?id=29231

        Fix compilation warnings by removing addition operation on an enum type.

        * inspector/InspectorResource.h:
        (WebCore::InspectorResource::):
        (WebCore::InspectorResource::Changes::hasChange):
        (WebCore::InspectorResource::Changes::set):
        (WebCore::InspectorResource::Changes::setAll):

2009-11-09  Anders Carlsson  <andersca@apple.com>

        Reviewed by Darin Adler and Dan Bernstein.

        <rdar://problem/7328395>
        https://bugs.webkit.org/show_bug.cgi?id=31277

        When an object tag's style changes (for example when child nodes are added/removed),
        reuse its Frame (if it has one) instead of creating multiple Frames.

        Test: fast/dom/HTMLObjectElement/children-changed.html

        * loader/FrameLoader.cpp:
        (WebCore::FrameLoader::requestObject):

2009-11-09  Norbert Leser  <norbert.leser@nokia.com>

        Reviewed by Kenneth Rohde Christiansen.

        Moved macro MMP_RULES (LINKEROPTION) into symbian instead of symbian-sbsv2,
        since adjustment of RW-section base address will be needed for all new symbian
        tool chains, specifically for arm and gcc compilation targets.
        Also, change target address to 0xE00000 to be sufficient for all targets.

        * WebCore.pro:

2009-11-09  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Crash when inspecting
        WebCore\manual-tests\inspector\dom-mutation.html

        https://bugs.webkit.org/show_bug.cgi?id=31259

        * inspector/InspectorDOMAgent.cpp:
        (WebCore::InspectorDOMAgent::handleEvent):

2009-11-09  Laszlo Gombos  <laszlo.1.gombos@nokia.com>

        Reviewed by Kenneth Rohde Christiansen.

        [Qt] Few classes have virtual functions but non-virtual destructor
        https://bugs.webkit.org/show_bug.cgi?id=31269

        No new tests as there is no functional change.

        * platform/qt/QWebPageClient.h:
        (QWebPageClient::~QWebPageClient): Add virtual destructor.

2009-11-09  Yael Aharon  <yael.aharon@nokia.com>

        Reviewed by Kenneth Rohde Christiansen.

        [Qt] Allow setting HTTP headers with empty value in XMLHTTPRequest
        https://bugs.webkit.org/show_bug.cgi?id=31140

        QtNetwork interprets null string as request to remove the header, not add it.
        Replace null values with empty values before passing them to QtNetwork.

        Test: http/tests/xmlhttprequest/xmlhttprequest-setrequestheader-no-value.html

        * platform/network/qt/ResourceRequestQt.cpp:
        (WebCore::ResourceRequest::toNetworkRequest):

2009-11-09  Vadim Zeitlin  <vadim@wxwidgets.org>

        Reviewed by Kevin Ollivier.

        [wx] Fix handling of alpha channel when using wxWidgets 2.9: it was
        simply ignored before resulting in transparent areas being black in PNG
        images for example.
        
        https://bugs.webkit.org/show_bug.cgi?id=30823

        * platform/image-decoders/wx/ImageDecoderWx.cpp:
        (WebCore::RGBA32Buffer::asNewNativeImage):

2009-11-09  Laszlo Gombos  <laszlo.1.gombos@nokia.com>

        Reviewed by Kenneth Rohde Christiansen.

        Use explicit parentheses to silence gcc 4.4 -Wparentheses warnings
        https://bugs.webkit.org/show_bug.cgi?id=31040

        No new tests as there is no functional change.

        * dom/Document.cpp:
        (WebCore::Document::recalcStyleSelector):
        * editing/TextIterator.cpp:
        (WebCore::pushFullyClippedState):
        * editing/VisibleSelection.cpp:
        (WebCore::VisibleSelection::appendTrailingWhitespace):
        * html/HTMLLinkElement.cpp:
        (WebCore::HTMLLinkElement::process):
        * loader/RedirectScheduler.cpp:
        (WebCore::RedirectScheduler::mustLockBackForwardList):
        * loader/appcache/ApplicationCacheGroup.cpp:
        (WebCore::ApplicationCacheGroup::didFinishLoadingManifest):
        * platform/graphics/qt/FontCacheQt.cpp:
        (WebCore::FontPlatformDataCacheKey::computeHash):
        * rendering/RenderBlock.cpp:
        (WebCore::RenderBlock::handleRunInChild):
        * rendering/RenderBox.cpp:
        (WebCore::RenderBox::calcHeight):
        * rendering/RenderTextControlMultiLine.cpp:
        (WebCore::RenderTextControlMultiLine::nodeAtPoint):
        * rendering/style/RenderStyle.cpp:
        (WebCore::RenderStyle::diff):
        * svg/SVGAnimateElement.cpp:
        (WebCore::parseNumberValueAndUnit):
        * svg/SVGAnimationElement.cpp:
        (WebCore::SVGAnimationElement::startedActiveInterval):
        * svg/SVGPreserveAspectRatio.cpp:
        (WebCore::SVGPreserveAspectRatio::getCTM):

2009-11-09  Shinichiro Hamaji  <hamaji@chromium.org>

        Reviewed by Dimitri Glazkov.

        Win chromium is slow to draw transparent texts
        https://bugs.webkit.org/show_bug.cgi?id=31258

        Clip graphics context to reduce calculation.

        No new tests because this change only affects performance.

        * platform/graphics/chromium/FontChromiumWin.cpp:
        (WebCore::TransparencyAwareFontPainter::TransparencyAwareFontPainter::initializeForGDI):
        (WebCore::TransparencyAwareFontPainter::TransparencyAwareFontPainter::~TransparencyAwareFontPainter):

2009-11-09  Carol Szabo  <carol.szabo@nokia.com>

        Reviewed by Darin Adler.

        showTree(CounterNode*) generates too little info and has too many spaces.
        https://bugs.webkit.org/show_bug.cgi?id=31212

        No new tests as the change has no functional effect it is just for
        improved debugging.

        * rendering/CounterNode.cpp:
        (WebCore::showTreeAndMark):
        Changed to also show addresses of parent, next and previous
        siblings.

2009-11-09  Stuart Morgan  <stuartmorgan@chromium.org>

        Reviewed by Darin Adler.

        Moves Mac implementation of setUseSecureKeyboardEntry to Frame.cpp and
        enables it PLATFORM(CHROMIUM) in addition to PLATFORM(MAC).

        https://bugs.webkit.org/show_bug.cgi?id=31083

        No new tests; implementation is unchanged.

        * page/Frame.cpp:
        (WebCore::Frame::setUseSecureKeyboardEntry):
        * page/mac/FrameMac.mm:

2009-11-09  Laszlo Gombos  <laszlo.1.gombos@nokia.com>

        Reviewed by Jan Alonzo.

        Make XP_UNIX tests consistent
        https://bugs.webkit.org/show_bug.cgi?id=31250

        No new tests as there is no functional change.

        * plugins/PluginView.cpp:
        (WebCore::PluginView::setFrameRect): Test if XP_UNIX is defined
        instead of the value of the macro

        * plugins/gtk/PluginViewGtk.cpp:
        (WebCore::PluginView::setNPWindowIfNeeded): Test if the XP_UNIX is
        defined instead of using the PLATFORM macro to be consistent
        (WebCore::PluginView::getValue): Ditto.

2009-11-09  Kevin Watters  <kevinwatters@gmail.com>

        Reviewed by Darin Adler.

        Thunk to the main thread from ~Database to deref Database's m_document.

        If the Database was the Document's last referrer, then ~Document occurs on the
        Database thread, and ASSERT(!m_styleRecalcTimer.isActive()) hits a main thread
        ASSERT in debug builds.

        * storage/Database.cpp:
        (WebCore::derefDocument):
        (WebCore::Database::~Database):

2009-11-09  Mark Mentovai  <mark@chromium.org>

        Reviewed by Dan Bernstein.

        Track "can have scrollbar" state within FrameView independently of the
        individual scrollbar states in ScrollView.

        rdar://problem/7215132, https://bugs.webkit.org/show_bug.cgi?id=29167
        REGRESSION (r48064): mint.com loses scrollbars after coming out of
        edit mode.

        rdar://problem/7314421, https://bugs.webkit.org/show_bug.cgi?id=30517
        REGRESSION (r48064): Extra scroll bars in GarageBand Lesson Store.

        Test: fast/overflow/scrollbar-restored.html

        * WebCore.base.exp:
        * page/FrameView.cpp:
        (WebCore::FrameView::FrameView):
        (WebCore::FrameView::resetScrollbars):
        (WebCore::FrameView::setCanHaveScrollbars):
        (WebCore::FrameView::updateCanHaveScrollbars):
        (WebCore::FrameView::layout):
        * page/FrameView.h:
        * platform/ScrollView.h:

2009-11-09  Keishi Hattori  <casey.hattori@gmail.com>

        Reviewed by Timothy Hatcher.

        Web Inspector: CSS syntax highlighter doesn't recognize negative numbers
        https://bugs.webkit.org/show_bug.cgi?id=31257

        * inspector/front-end/SourceFrame.js:

2009-11-09  Alexander Pavlov  <apavlov@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Debugger shortcuts (F8, F10, F11) have no effect if the Console view is open
        https://bugs.webkit.org/show_bug.cgi?id=31252

        Route F1-F12 keypresses in the Console view to the current panel if there is one.

        Test: manual-tests/inspector/debugger-shortcuts-with-console-opened.html

        * inspector/front-end/ConsoleView.js:
        (WebInspector.ConsoleView.prototype._promptKeyDown):
        * inspector/front-end/utilities.js:
        ():
        * manual-tests/inspector/debugger-shortcuts-with-console-opened.html: Added.

2009-11-09  Yael Aharon  <yael.aharon@nokia.com>

        Reviewed by Kenneth Rohde Christiansen.

        [Qt] Pass credentials provided by XMLHTTPRequest to the network request.
        https://bugs.webkit.org/show_bug.cgi?id=31208

        After r42483, the credentials are no longer passed to the network request
        in the URL of the request.
        Pass the credentials from XMLHTTPRequest to the network request, the same
        way that other ports do.

        After this patch LayoutTests/http/xmlhttprequest/basic-auth.html passes.

        * platform/network/qt/ResourceHandleQt.cpp:
        (WebCore::ResourceHandle::start):
        (WebCore::ResourceHandle::loadResourceSynchronously):

2009-11-09  Zoltan Horvath  <zoltan@webkit.org>

        Unreviewed.

        https://bugs.webkit.org/show_bug.cgi?id=31161

        Roll back r50657 because it breaks the MAC builds.

        * loader/ImageLoader.cpp:
        * loader/ProgressTracker.cpp:
        * loader/RedirectScheduler.cpp:
        * loader/Request.h:
        * loader/ThreadableLoaderClient.h:
        * loader/WorkerThreadableLoader.h:
        * loader/appcache/ApplicationCacheHost.h:
        * loader/appcache/ApplicationCacheStorage.h:
        * loader/icon/IconDatabaseClient.h:

2009-11-09  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Darin Adler.

        Allow custom memory allocation control for the part of loader directory in WebCore
        https://bugs.webkit.org/show_bug.cgi?id=31161

        Inherits the following classes from Noncopyable because these are instantiated
        by 'new' and these are no need to be copyable:

        class Request - WebCore/loader/loader.cpp:100
        struct ScheduledRedirection - WebCore/loader/RedirectScheduler.cpp:164
        class IconDatabaseClient - WebCore/loader/icon/IconDatabase.cpp:89
        class ApplicationCacheStorage - WebCore/loader/appcache/ApplicationCacheStorage.cpp:1121
        class ApplicationCacheHost -  WebCore/loader/DocumentLoader.cpp:151
        class ImageEventSender - WebCore/loader/ImageLoader.cpp:54
        struct ProgressItem - WebCore/loader/ProgressTracker.cpp:169

        Inherits ThreadableLoaderClient class from Noncopyable because (its child class) 
        MainThreadBridge is instantiated by 'new' in 
        WebCore/loader/WorkerThreadableLoader.cpp:59 it is no need to be copyable.

        ThreadableLoaderClient's inheriting has been changed to public.

        * loader/ImageLoader.cpp:
        * loader/ProgressTracker.cpp:
        * loader/RedirectScheduler.cpp:
        * loader/Request.h:
        * loader/ThreadableLoaderClient.h:
        * loader/WorkerThreadableLoader.h:
        * loader/appcache/ApplicationCacheHost.h:
        * loader/appcache/ApplicationCacheStorage.h:
        * loader/icon/IconDatabaseClient.h:

2009-11-09  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Darin Adler.

        Allow custom memory allocation control for WebCore's DocLoader
        https://bugs.webkit.org/show_bug.cgi?id=31163

        Inherits DocLoader class from Noncopyable because it is
        instantiated by 'new' in WebCore/dom/Document.cpp:370 and 
        it is no need to be copyable.

        * loader/DocLoader.h:

2009-11-09  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Darin Adler.

        Allow custom memory allocation control for WebCore's Tokenizer
        https://bugs.webkit.org/show_bug.cgi?id=31162

        Inherits Tokenizer class from Noncopyable because (its child class)
        ImageTokenizer instantiated by 'new' in WebCore/loader/ImageDocument.cpp:178 
        and it is no need to be copyable.

        * dom/Tokenizer.h:

2009-11-09  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Darin Adler.

        Allow custom memory allocation control for WebCore's DeleteButtonController
        https://bugs.webkit.org/show_bug.cgi?id=31105

        Inherits DeleteButtonController class from Noncopyable because it is 
        instantiated by 'new' in WebCore/editing/Editor.cpp:919 and
        it is no need to be copyable.  

        * editing/DeleteButtonController.h:

2009-11-09  Martin Robinson  <martin.james.robinson@gmail.com>

        Reviewed by Jan Alonzo.

        [GTK] Expose Page::tabKeyCyclesThroughElements in the API
        https://bugs.webkit.org/show_bug.cgi?id=30482

        Expose Page::tabKeyCyclesThroughElements as a property of
        WebKitWebView.

        No new tests; fast/events/keypress-insert-tab.html is no longer skipped.

        * platform/gtk/KeyEventGtk.cpp: Correct m_text for tab key presses.
        (WebCore::singleCharacterString):

2009-11-09  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Xan Lopez.

        https://bugs.webkit.org/show_bug.cgi?id=25415
        [GTK][ATK] Please implement support for get_text_at_offset

        Fix a crasher that occurred with text which included newline
        chars in the markup.

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (convertUniCharToUTF8):

2009-11-05  Jakub Wieczorek  <faw217@gmail.com>

        Reviewed by Holger Freyther.

        [Qt] The XML tokenizer reports a parse error twice if it occurs before the document element is found.
        https://bugs.webkit.org/show_bug.cgi?id=31144

        XMLTokenizer::doEnd() uses an additional logic to report a parse failure in
        documents that end prematurely but are not considered invalid by QXmlStream.
        This is to stay compatible with the libxml2 implementation.
        However, that code path would be also hit in situations when it should not,
        i.e. the error would have already been caught and handled. As a result, the
        same error would be reported twice.

        No new tests, because the problem is already covered by
        fast/parser/xml-declaration-missing-ending-mark.html.

        * dom/XMLTokenizerQt.cpp:
        (WebCore::XMLTokenizer::doEnd):

2009-11-08  Keishi Hattori  <casey.hattori@gmail.com>

        Reviewed by Pavel Feldman.

        Web Inspector: Inspector should support copy() in the command line
        https://bugs.webkit.org/show_bug.cgi?id=31238

        * inspector/InspectorBackend.cpp:
        (WebCore::InspectorBackend::copyText): Added.
        * inspector/InspectorBackend.h: Added copyText
        * inspector/InspectorBackend.idl: Added copyText
        * inspector/front-end/InjectedScript.js:
        (InjectedScript._copy): Added.
        (InjectedScript._ensureCommandLineAPIInstalled):

2009-11-08  Drew Wilson  <atwilson@chromium.org>

        Reviewed by Dimitri Glazkov.

        V8 WorkerContextExecutionProxy does not handle SharedWorkers
        https://bugs.webkit.org/show_bug.cgi?id=31226

        Now checks to see what type of context is active and creates the
        appropriate wrapper (DEDICATEDWORKERCONTEXT vs SHAREDWORKERCONTEXT).

        Added support for converting to SharedWorkers and SharedWorkerContexts.

        Test: Existing layout tests cover this case (start passing in Chrome).

        * bindings/v8/WorkerContextExecutionProxy.cpp:
        (WebCore::WorkerContextExecutionProxy::initContextIfNeeded):
        Now generates the right type of DOMWrapper for SharedWorkerContexts.
        (WebCore::WorkerContextExecutionProxy::convertToV8Object):
        Added support for SHAREDWORKERCONTEXT.
        (WebCore::WorkerContextExecutionProxy::convertEventTargetToV8Object):
        Added support for SharedWorker and SharedWorkerContext.

2009-11-08  Johnny Ding  <johnnyding.webkit@gmail.com>

        Reviewed by Dimitri Glazkov.

        https://bugs.webkit.org/show_bug.cgi?id=31224
        [V8] Return StyleSheet object instead of HTMLStyleElement w/document.styleSheets named property getter.

        Test: fast/dom/StyleSheet/get-stylesheet-byname.html

        * bindings/v8/custom/V8StyleSheetListCustom.cpp:
        (WebCore::NAMED_PROPERTY_GETTER):

2009-11-08  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: "Search again" on scripts panel switches
        to the script this search started with.

        https://bugs.webkit.org/show_bug.cgi?id=31243

        * inspector/front-end/Panel.js:
        (WebInspector.Panel.prototype.jumpToNextSearchResult):

2009-11-08  Kent Tamura  <tkent@chromium.org>

        Reviewed by Darin Adler.

        Simplify Icon interface.
        https://bugs.webkit.org/show_bug.cgi?id=31154

        - Remove Icon::createIconForFile().  createIconForFiles() covers
          createIconForFile()'s role.
        - Remove FileChooser::chooseIcon()
        - Change the parameter types of FileChooser constructor and the
          factory method, String -> const Vector<String>&, in order to
          support initialization with multiple files.
        - Remove the icon loading code in IconChromiumWin.cpp, which
          doesn't work because of the sandbox.

        No tests because it's just a refactoring.

        * platform/FileChooser.cpp:
        (WebCore::FileChooser::FileChooser):
        (WebCore::FileChooser::create):
        (WebCore::FileChooser::chooseFile):
        (WebCore::FileChooser::chooseFiles):
        * platform/FileChooser.h:
        * platform/graphics/Icon.h:
        * platform/graphics/chromium/IconChromiumLinux.cpp:
        * platform/graphics/chromium/IconChromiumMac.cpp:
        * platform/graphics/chromium/IconChromiumWin.cpp:
        (WebCore::Icon::createIconForFiles):
        * platform/graphics/gtk/IconGtk.cpp:
        (WebCore::Icon::createIconForFiles):
        * platform/graphics/haiku/IconHaiku.cpp:
        * platform/graphics/mac/IconMac.mm:
        (WebCore::Icon::createIconForFiles):
        * platform/graphics/qt/IconQt.cpp:
        (WebCore::Icon::createIconForFiles):
        * platform/graphics/win/IconWin.cpp:
        (WebCore::Icon::createIconForFiles):
        * platform/graphics/wx/IconWx.cpp:
        * rendering/RenderFileUploadControl.cpp:
        (WebCore::RenderFileUploadControl::RenderFileUploadControl):

2009-11-08  Daniel Bates  <dbates@webkit.org>

        Reviewed by Adam Barth.

        https://bugs.webkit.org/show_bug.cgi?id=31098

        Allows same-origin plugin-based content to load.

        Test: http/tests/security/xssAuditor/object-src-inject.html

        * page/XSSAuditor.cpp:
        (WebCore::XSSAuditor::canLoadExternalScriptFromSrc): Modified to call XSSAuditor::isSameOriginResource.
        (WebCore::XSSAuditor::canLoadObject): Ditto.
        (WebCore::XSSAuditor::canSetBaseElementURL): Ditto. 
        (WebCore::XSSAuditor::isSameOriginResource): Added.
        * page/XSSAuditor.h:

2009-11-08  David Levin  <levin@chromium.org>

        Reviewed by NOBODY (chromium build fix).

        * platform/network/HTTPParsers.cpp:
        (WebCore::parseDate): Changed this to not
        use a date parser that needs ExecState passed.
        
2009-11-08  David Levin  <levin@chromium.org>

        Unreviewed build fix for chromium.

        * platform/graphics/skia/GraphicsContextSkia.cpp:
        (WebCore::GraphicsContext::fillPath):
        (WebCore::GraphicsContext::fillRect):
        (WebCore::GraphicsContext::strokePath):
        (WebCore::GraphicsContext::strokeRect):

2009-11-08  David Levin  <levin@chromium.org>

        Unreviewed build fix for chromium.

        Build fix for https://bugs.webkit.org/show_bug.cgi?id=31219
        Clean up GraphicsContext's current concept of ColorSpace

        * platform/graphics/skia/GraphicsContextSkia.cpp:
        (WebCore::GraphicsContext::fillPath):
        (WebCore::GraphicsContext::fillRect):
        (WebCore::GraphicsContext::strokePath):
        (WebCore::GraphicsContext::strokeRect):

2009-11-08  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: [REGRESSION] committing style edit
        clears elements panel selection.

        https://bugs.webkit.org/show_bug.cgi?id=31242

        * inspector/front-end/ElementsTreeOutline.js:
        (WebInspector.ElementsTreeOutline.prototype.update):
        * inspector/front-end/StylesSidebarPane.js:
        (WebInspector.StylePropertyTreeElement.prototype.):
        (WebInspector.StylePropertyTreeElement.prototype):

2009-11-08  Janne Koskinen  <janne.p.koskinen@digia.com>

        Reviewed by Holger Freyther.

        ResourceRequest to be class instead of struct
        https://bugs.webkit.org/show_bug.cgi?id=30670

        Started as a compilation fix for Symbian where the compiler makes a distinction between
        class and struct in function argument signatures.
        Changed all forward declarations of ResourceRequest to have class in the forward
        declaration instead of struct and changed the definition of ResourceRequest to be class
        and added access qualifiers where missing. Additionally two references of friend
        struct ResourceRequestBase changed to class instead.

        * history/HistoryItem.h:
        * inspector/InspectorController.h:
        * inspector/InspectorResource.h:
        * loader/DocumentThreadableLoader.h:
        * loader/FrameLoaderClient.h:
        * loader/MainResourceLoader.h:
        * loader/ResourceLoadNotifier.h:
        * loader/SubresourceLoader.h:
        * loader/SubresourceLoaderClient.h:
        * loader/ThreadableLoader.h:
        * loader/WorkerThreadableLoader.h:
        * loader/appcache/ApplicationCache.h:
        * loader/appcache/ApplicationCacheHost.h:
        * platform/CrossThreadCopier.h:
        * platform/network/ResourceHandle.h:
        * platform/network/ResourceHandleClient.h:
        * platform/network/ResourceRequestBase.h:
        * platform/network/cf/ResourceRequest.h:
        * platform/network/cf/ResourceRequestCFNet.h:
        * platform/network/chromium/ResourceRequest.h:
        * platform/network/curl/ResourceRequest.h:
        * platform/network/qt/ResourceRequest.h:
        * platform/network/soup/ResourceRequest.h:
        * xml/XMLHttpRequest.h:

2009-11-08  Dan Bernstein  <mitz@apple.com>

        Reviewed by Simon Fraser.

        <rdar://problem/7363434> Crash inside RenderObject::localToAbsolute
        below FrameView::layout
        https://bugs.webkit.org/show_bug.cgi?id=31093

        Test: fast/block/positioning/relative-positioned-inline-container.html

        In <http://trac.webkit.org/changeset/19148>, setStaticY() was changed
        to mark the object for layout, doing so without marking its ancestors.
        However, RenderBlock::skipLeadingWhitespace and
        RenderBlock::skipTrailingWhitespace() call setStaticY() on a relative-
        positioned inline container, causing it to be marked for layout without
        ever going back to give it layout, and thus layout could end with a
        dirty object still in the tree, leading to all sorts of badness.

        The fix is to revert setStaticY() to not marking the object dirty, and
        instead do it in the call sites that require it, which are in
        RenderBlock and RenderFlexibleBox.

        * rendering/RenderBlock.cpp:
        (WebCore::RenderBlock::adjustPositionedBlock):
        * rendering/RenderFlexibleBox.cpp:
        (WebCore::RenderFlexibleBox::layoutHorizontalBox):
        (WebCore::RenderFlexibleBox::layoutVerticalBox):
        * rendering/RenderLayer.cpp:
        * rendering/RenderLayer.h:
        (WebCore::RenderLayer::setStaticY):

2009-11-07  Daniel Bates  <dbates@webkit.org>

        Reviewed by Darin Adler.

        https://bugs.webkit.org/show_bug.cgi?id=20780
        
        Fixes an issue where the onchange event handler is not fired when the 
        input field is autocompleted.
        
        We cannot test this using DRT since DRT cannot emulate autocompletion.
        So, a manual-test is included.

        Tests: manual-tests/autocompletion-fire-onchange.html

        * manual-tests/autocompletion-fire-onchange.html: Added.
        * rendering/RenderTextControl.cpp:
        (WebCore::RenderTextControl::setInnerTextValue):

2009-11-07  Benjamin Otte  <otte@gnome.org>

        Reviewed by Holger Freyther.

        Mark redrawn areas on image surfaces as dirty.

        This is required to conform to the Cairo API, but is currently only
        used by debugging tools like cairo-trace.

        * platform/graphics/cairo/ImageBufferCairo.cpp:
        (WebCore::ImageBuffer::platformTransformColorSpace):
        (WebCore::putImageData):

2009-11-07  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Xan Lopez.

        https://bugs.webkit.org/show_bug.cgi?id=30878
        [Gtk] atk_text_get_text() fails in entries when the end_offset is -1

        If the end_offset is -1, use the String length as the end_offset.

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (webkit_accessible_text_get_text):

2009-11-06  Beth Dakin  <bdakin@apple.com>

        Reviewed by Adele Peterson.

        Fix for https://bugs.webkit.org/show_bug.cgi?id=31219 Clean up 
        GraphicsContext's current concept of ColorSpace

        ColorSpace is now called ColorType. The variables on the state we 
        appropriately re-named as well. I removed strokeColorSpace() and 
        fillColorSpace() from GraphicsContext since they were never called. 

        * platform/graphics/GraphicsContext.cpp:
        (WebCore::GraphicsContext::setStrokeColor):
        (WebCore::GraphicsContext::setFillColor):
        (WebCore::GraphicsContext::setStrokePattern):
        (WebCore::GraphicsContext::setFillPattern):
        (WebCore::GraphicsContext::setStrokeGradient):
        (WebCore::GraphicsContext::setFillGradient):
        * platform/graphics/GraphicsContext.h:
        (WebCore::):
        * platform/graphics/GraphicsContextPrivate.h:
        (WebCore::GraphicsContextState::GraphicsContextState):
        * platform/graphics/cairo/GraphicsContextCairo.cpp:
        (WebCore::GraphicsContext::fillPath):
        (WebCore::GraphicsContext::strokePath):
        * platform/graphics/cg/GraphicsContextCG.cpp:
        (WebCore::calculateDrawingMode):
        (WebCore::GraphicsContext::drawPath):
        (WebCore::GraphicsContext::fillPath):
        (WebCore::GraphicsContext::strokePath):
        (WebCore::GraphicsContext::fillRect):
        (WebCore::GraphicsContext::strokeRect):
        * platform/graphics/qt/GraphicsContextQt.cpp:
        (WebCore::GraphicsContext::fillPath):
        (WebCore::GraphicsContext::strokePath):
        (WebCore::GraphicsContext::fillRect):
        * platform/graphics/wince/GraphicsContextWince.cpp:
        (WebCore::GraphicsContext::fillPath):
        (WebCore::GraphicsContext::fillRect):

2009-11-06  Brian Weinstein  <bweinstein@apple.com>

        Reviewed by Tim Hatcher.

        Fixes <http://webkit.org/b/31177>.
        Web Inspector: Bind backspace to delete cookies and DOM Storage.
        
        Refactor editing code from DOMStorageDataGrid to DataGrid, so other
        places in the inspector can use editing in DataGrid (added a FIXME for
        some stuff that needs to be generalized).
        
        Also added deleting functionality to DataGrid, and implemented it for
        Cookies and DOM Storage. The reason this patch is so big is because of
        the refactoring of editing code, which won't be used yet in a cross-datagrid
        way, but should be able to.
        
        Additionally, moved the callbacks members from DOMStorageDataGrid to
        DOMStorageItemsView, which allowed us to delete DOMStorageDataGrid, to 
        make the architecture of DOM Storage look a lot more like the Cookies view.
        
        Lastly, added a preventDefault call in ElementsTreeOutline to prevent the 
        inspector from beeping at you when you delete an element.

        * WebCore.gypi: Removed DOMStorageDataGrid.
        * WebCore.vcproj/WebCore.vcproj: Removed DOMStorageDataGrid.
        * inspector/front-end/CookieItemsView.js:
        (WebInspector.CookieItemsView.prototype.dataGridForCookies):
        (WebInspector.CookieItemsView.prototype._deleteButtonClicked):
        (WebInspector.CookieItemsView.prototype._deleteCookieCallback):
        * inspector/front-end/DOMStorageDataGrid.js: Removed.
        * inspector/front-end/DOMStorageItemsView.js:
        (WebInspector.DOMStorageItemsView.prototype._dataGridForDOMStorageEntries):
        (WebInspector.DOMStorageItemsView.prototype._deleteButtonClicked):
        (WebInspector.DOMStorageItemsView.prototype._refreshButtonClicked):
        (WebInspector.DOMStorageItemsView.prototype._editingCallback):
        (WebInspector.DOMStorageItemsView.prototype.deleteSelectedRow):
        (WebInspector.DOMStorageItemsView.prototype._deleteCallback):
        * inspector/front-end/DataGrid.js:
        (WebInspector.DataGrid):
        (WebInspector.DataGrid.prototype._ondblclick): Moved from DOMStorageDataGrid to DataGrid + Refactoring.
        (WebInspector.DataGrid.prototype._startEditingColumnOfDataGridNode): Ditto.
        (WebInspector.DataGrid.prototype._startEditing): Ditto.
        (WebInspector.DataGrid.prototype._editingCommitted.moveToNextIfNeeded): Ditto.
        (WebInspector.DataGrid.prototype._editingCommitted): Ditto.
        (WebInspector.DataGrid.prototype._editingCancelled): Ditto.
        (WebInspector.DataGrid.prototype.handleKeyEvent): Added case for delete/backspace.
        * inspector/front-end/ElementsTreeOutline.js:
        (WebInspector.ElementsTreeOutline.prototype.handleKeyEvent): Added preventDefault call.
        * inspector/front-end/WebKit.qrc: Removed DOMStorageDataGrid.
        * inspector/front-end/inspector.html: Removed DOMStorageDataGrid.

2009-11-06  Geoffrey Garen  <ggaren@apple.com>

        Qt build fix: added an ExecState parameter.

        * bridge/qt/qt_runtime.cpp:
        (JSC::Bindings::convertValueToQVariant):
        (JSC::Bindings::convertQVariantToValue):

2009-11-06  Geoffrey Garen  <ggaren@apple.com>

        https://bugs.webkit.org/show_bug.cgi?id=31197
        Implemented a timezone cache not based on Mac OS X's notify_check API.

        Updated for JavaScriptCore internal API change.

        * bridge/qt/qt_runtime.cpp:
        (JSC::Bindings::convertValueToQVariant):
        (JSC::Bindings::convertQVariantToValue): Updated for namespace change.

        * platform/network/HTTPParsers.cpp:
        (WebCore::parseDate): Pass 0 for ExecState, since we don't have one.
        (This function probably shouldn't be using a JavaScript date parser
        to begin with, but oh well.)

2009-11-06  Anantanarayanan G Iyengar  <ananta@chromium.org>

        Reviewed by Adam Barth.

        The associated webkit bug is https://bugs.webkit.org/show_bug.cgi?id=31067,
        which affects Chromium only.
        
        Changes to V8HTMLDocumentCustom.cpp are as below:-
        1. The HTMLDocumentOpen function would cause a crash in Chromium if
           there was no calling javascript context. We now check for this case
           and pass in NULL to the HTMLDocument::open function which can handle
           a NULL document parameter.
        2. The other functions like HTMLDocumentWrite, HTMLDocumentWriteln, etc
           had ASSERTS for a NULL caller frame, which was bogus as it would crash
           anyway. We now check for this case and return a failure.
           
        Changes to V8DOMWindowCustom.cpp are as below:-
        1. Instead of failing the window.open call made by NPAPI for lack of a
           calling javascript context, we now use the entered context as the calling
           context.

        Tests: plugins/document-open.html
               plugins/window-open.html

        * bindings/v8/custom/V8DOMWindowCustom.cpp:
        (WebCore::CALLBACK_FUNC_DECL):
        * bindings/v8/custom/V8HTMLDocumentCustom.cpp:
        (WebCore::CALLBACK_FUNC_DECL):

2009-11-06  Steve Block  <steveblock@google.com>

        Reviewed by Eric Seidel.

        Geolocation error code UNKNOWN_ERROR is deprecated.
        https://bugs.webkit.org/show_bug.cgi?id=31184

        Remove this error code from PositionError, both for use from C++ code and from the JS object.

        Updated fast/dom/Geolocation/error.html to test this.

        * page/PositionError.h: Modified.
        (WebCore::PositionError::): Remove ErrorCode::UNKNOWN_ERROR.
        * page/PositionError.idl: Modified. Remove UNKNOWN_ERROR constant.
        * page/Geolocation.cpp: Modified.
        (WebCore::Geolocation::startRequest): Replace UNKNOWN_ERROR with POSITION_UNAVAILABLE.
        * platform/gtk/GeolocationServiceGtk.cpp: Modified.
        (WebCore::GeolocationServiceGtk::startUpdating): Replace UNKNOWN_ERROR with POSITION_UNAVAILABLE.

2009-11-06  Dirk Schulze  <krit@webkit.org>

        Reviewed by Nikolas Zimmermann.

        feMorphology filter is not implemented
        [https://bugs.webkit.org/show_bug.cgi?id=5863]

        The Implementation of feMorphology.
        
        Test: We have allready a test for feMorphology
              svg/W3C-SVG-1.1/filters-morph-01-f.svg

        * svg/graphics/filters/SVGFEMorphology.cpp:
        (WebCore::FEMorphology::apply):

2009-11-06  Steve Block  <steveblock@google.com>

        Reviewed by Eric Seidel.

        V8DOMWindowCustom.cpp is missing WEB_SOCKETS guard on include.
        https://bugs.webkit.org/show_bug.cgi?id=31209

        Build fix only. No new tests possible.

        * bindings/v8/custom/V8DOMWindowCustom.cpp: Modified. Added WEB_SOCKETS guard on inclue of WebSockets.h.

2009-11-06  Drew Wilson  <atwilson@chromium.org>

        Reviewed by David Levin.

        V8 bindings do not support SharedWorkers as event targets
        https://bugs.webkit.org/show_bug.cgi?id=31199

        No new tests because existing layout tests suffice (they currently
        crash on Chromium)

        * bindings/v8/V8DOMWrapper.cpp:
        (WebCore::V8DOMWrapper::convertEventTargetToV8Object):
        Added clause to create a DOM wrapper for SharedWorkers.

2009-11-06  Anton Muhin  <antonm@chromium.org>

        Reviewed by Adam Barth.

        Do not unnecessarly synchronzie in weak reference callbacks.
        https://bugs.webkit.org/show_bug.cgi?id=31191

        * bindings/v8/DOMData.h:
        (WebCore::DOMData::handleWeakObject):

2009-11-06  Alexander Pavlov  <apavlov@chromium.org>

        Reviewed by Pavel Feldman.

        Fix resource content search.
        https://bugs.webkit.org/show_bug.cgi?id=31202

        * inspector/front-end/AbstractTimelinePanel.js:
        (WebInspector.AbstractTimelinePanel.prototype.refresh):
        (WebInspector.AbstractTimelinePanel.prototype.removeItem):
        * inspector/front-end/TimelinePanel.js:
        (WebInspector.TimelineGraph.prototype.refresh):

2009-11-05  Yuta Kitamura  <yutak@chromium.org>

        Reviewed by Eric Seidel.

        Fix ASSERT(currentStyle = renderStyle()).
        https://bugs.webkit.org/show_bug.cgi?id=31152

        * dom/Element.cpp:
        (WebCore::Element::pseudoStyleCacheIsInvalid): We should have used "==" instead of "=".

2009-11-05  Alpha Lam  <hclam@chromium.org>

        Revert 50562 because it broke Chromium. Not reviewed since this is a build fix and revert.

        * bindings/v8/V8GCController.cpp:
        (WebCore::V8GCController::gcEpilogue):
        * bindings/v8/V8GCController.h:
        * bindings/v8/V8Proxy.cpp:
        (WebCore::V8Proxy::evaluate):
        (WebCore::V8Proxy::runScript):
        (WebCore::V8Proxy::callFunction):

2009-11-05  Adam Barth  <abarth@webkit.org>

        Reviewed by Sam Weinig.

        Cross-domain access to stylesheet text should not be allowed
        https://bugs.webkit.org/show_bug.cgi?id=20527

        Check whether whether the current document can read the cssRules from
        the style sheet.  Firefox throws a security error here, but we return
        null instead because that's what we usually do in these cases.

        Test: http/tests/security/cannot-read-cssrules-redirect.html
              http/tests/security/cannot-read-cssrules.html

        * css/CSSStyleSheet.cpp:
        (WebCore::CSSStyleSheet::cssRules):

2009-11-05  Steve Block  <steveblock@google.com>

        Reviewed by Eric Seidel.

        If the Geolocation service fails to start, invoke the error callback asynchronously.
        https://bugs.webkit.org/show_bug.cgi?id=28276

        All Geolocation callbacks must be invoked asynchronously.
        See http://www.w3.org/TR/geolocation-API/#geolocation_interface

        No new tests possible with current LayoutTestController.

        * page/Geolocation.cpp:
        (WebCore::Geolocation::getCurrentPosition): Modified. Asserts that startRequest returned a notifier.
        (WebCore::Geolocation::watchPosition): Modified. Asserts that startRequest returned a notifier.
        (WebCore::Geolocation::startRequest): Modified. If the Geolocation service fails to start, set a fatal error on the notifier.

2009-11-05  Chris Jerdonek  <chris.jerdonek@gmail.com>

        Reviewed by Eric Seidel.

        Removed the "this is part of the KDE project" comments from 
        all *.h, *.cpp, *.idl, and *.pm files.
        
        https://bugs.webkit.org/show_bug.cgi?id=31167
        
        The maintenance and architecture page in the project wiki lists
        this as a task.
        
        This change includes no changes or additions to test cases 
        since the change affects only comments.

        * bindings/scripts/CodeGeneratorV8.pm:
        * bindings/scripts/IDLParser.pm:
        * bindings/scripts/IDLStructure.pm:
        * css/CSSInheritedValue.cpp:
        * css/CSSInitialValue.cpp:
        * css/CSSMediaRule.cpp:
        * css/CSSNamespace.h:
        * css/CSSProperty.cpp:
        * css/CSSProperty.h:
        * css/CSSRuleList.cpp:
        * css/CSSRuleList.h:
        * css/CSSSelector.h:
        * css/CSSValueList.cpp:
        * css/FontValue.cpp:
        * css/MediaFeatureNames.cpp:
        * css/MediaFeatureNames.h:
        * css/Pair.h:
        * css/SVGCSSStyleSelector.cpp:
        * css/ShadowValue.cpp:
        * css/StyleSheet.cpp:
        * css/StyleSheetList.cpp:
        * css/maketokenizer:
        * dom/BeforeUnloadEvent.cpp:
        * dom/BeforeUnloadEvent.h:
        * dom/CSSMappedAttributeDeclaration.cpp:
        * dom/EventNames.cpp:
        * dom/EventTarget.cpp:
        * dom/MappedAttributeEntry.h:
        * dom/MouseRelatedEvent.h:
        * dom/RangeException.h:
        * dom/StyleElement.h:
        * dom/Tokenizer.h:
        * html/HTMLHeadElement.h:
        * html/HTMLHeadingElement.cpp:
        * html/HTMLHeadingElement.h:
        * html/HTMLHtmlElement.h:
        * html/HTMLImageLoader.h:
        * html/HTMLMetaElement.h:
        * html/HTMLModElement.cpp:
        * html/HTMLModElement.h:
        * html/HTMLOptionsCollection.cpp:
        * html/HTMLPlugInElement.cpp:
        * html/HTMLPreElement.cpp:
        * html/HTMLPreElement.h:
        * html/HTMLTableCellElement.cpp:
        * html/HTMLTableCellElement.h:
        * html/HTMLTableColElement.cpp:
        * html/HTMLTableColElement.h:
        * html/HTMLTablePartElement.cpp:
        * html/HTMLTablePartElement.h:
        * html/HTMLTitleElement.h:
        * page/MouseEventWithHitTestResults.h:
        * platform/StaticConstructors.h:
        * platform/text/AtomicStringImpl.h:
        * platform/text/qt/TextBreakIteratorQt.cpp:
        * rendering/AutoTableLayout.h:
        * rendering/CounterNode.cpp:
        * rendering/EllipsisBox.cpp:
        * rendering/EllipsisBox.h:
        * rendering/FixedTableLayout.cpp:
        * rendering/FixedTableLayout.h:
        * rendering/HitTestRequest.h:
        * rendering/HitTestResult.h:
        * rendering/InlineRunBox.h:
        * rendering/PointerEventsHitRules.cpp:
        * rendering/PointerEventsHitRules.h:
        * rendering/RenderBR.cpp:
        * rendering/RenderBR.h:
        * rendering/RenderButton.cpp:
        * rendering/RenderButton.h:
        * rendering/RenderFieldset.cpp:
        * rendering/RenderFrameSet.cpp:
        * rendering/RenderListItem.cpp:
        * rendering/RenderTableRow.cpp:
        * rendering/RenderView.h:
        * rendering/RootInlineBox.h:
        * rendering/SVGInlineTextBox.cpp:
        * rendering/SVGInlineTextBox.h:
        * rendering/TableLayout.h:
        * rendering/break_lines.h:
        * rendering/style/SVGRenderStyle.cpp:
        * rendering/style/SVGRenderStyle.h:
        * rendering/style/SVGRenderStyleDefs.cpp:
        * rendering/style/SVGRenderStyleDefs.h:
        * svg/GradientAttributes.h:
        * svg/LinearGradientAttributes.h:
        * svg/PatternAttributes.h:
        * svg/RadialGradientAttributes.h:
        * svg/SVGAElement.cpp:
        * svg/SVGAngle.idl:
        * svg/SVGAnimateColorElement.cpp:
        * svg/SVGAnimateColorElement.h:
        * svg/SVGAnimateElement.cpp:
        * svg/SVGAnimateElement.h:
        * svg/SVGAnimateTransformElement.h:
        * svg/SVGAnimatedPathData.cpp:
        * svg/SVGAnimatedPathData.h:
        * svg/SVGAnimatedPoints.cpp:
        * svg/SVGAnimatedPoints.h:
        * svg/SVGAnimationElement.cpp:
        * svg/SVGCircleElement.cpp:
        * svg/SVGClipPathElement.cpp:
        * svg/SVGColor.cpp:
        * svg/SVGColor.idl:
        * svg/SVGComponentTransferFunctionElement.cpp:
        * svg/SVGComponentTransferFunctionElement.h:
        * svg/SVGCursorElement.cpp:
        * svg/SVGDefsElement.cpp:
        * svg/SVGDescElement.cpp:
        * svg/SVGDescElement.h:
        * svg/SVGDocument.idl:
        * svg/SVGElement.idl:
        * svg/SVGElementInstanceList.cpp:
        * svg/SVGElementInstanceList.h:
        * svg/SVGEllipseElement.cpp:
        * svg/SVGExternalResourcesRequired.cpp:
        * svg/SVGFEBlendElement.cpp:
        * svg/SVGFEBlendElement.h:
        * svg/SVGFEColorMatrixElement.cpp:
        * svg/SVGFEColorMatrixElement.h:
        * svg/SVGFEComponentTransferElement.cpp:
        * svg/SVGFEComponentTransferElement.h:
        * svg/SVGFECompositeElement.cpp:
        * svg/SVGFECompositeElement.h:
        * svg/SVGFEFloodElement.cpp:
        * svg/SVGFEFloodElement.h:
        * svg/SVGFEFuncAElement.cpp:
        * svg/SVGFEFuncAElement.h:
        * svg/SVGFEFuncBElement.cpp:
        * svg/SVGFEFuncBElement.h:
        * svg/SVGFEFuncGElement.cpp:
        * svg/SVGFEFuncGElement.h:
        * svg/SVGFEFuncRElement.cpp:
        * svg/SVGFEFuncRElement.h:
        * svg/SVGFEGaussianBlurElement.cpp:
        * svg/SVGFEGaussianBlurElement.h:
        * svg/SVGFEImageElement.cpp:
        * svg/SVGFEMergeElement.cpp:
        * svg/SVGFEMergeElement.h:
        * svg/SVGFEMergeNodeElement.cpp:
        * svg/SVGFEOffsetElement.cpp:
        * svg/SVGFEOffsetElement.h:
        * svg/SVGFETileElement.cpp:
        * svg/SVGFETileElement.h:
        * svg/SVGFETurbulenceElement.cpp:
        * svg/SVGFETurbulenceElement.h:
        * svg/SVGFilterElement.cpp:
        * svg/SVGGElement.cpp:
        * svg/SVGGradientElement.cpp:
        * svg/SVGHKernElement.idl:
        * svg/SVGLangSpace.cpp:
        * svg/SVGLangSpace.h:
        * svg/SVGLength.cpp:
        * svg/SVGLength.h:
        * svg/SVGLength.idl:
        * svg/SVGLengthList.cpp:
        * svg/SVGLengthList.h:
        * svg/SVGLineElement.cpp:
        * svg/SVGLinearGradientElement.h:
        * svg/SVGList.h:
        * svg/SVGListTraits.h:
        * svg/SVGLocatable.h:
        * svg/SVGMaskElement.cpp:
        * svg/SVGMatrix.idl:
        * svg/SVGMetadataElement.cpp:
        * svg/SVGMetadataElement.h:
        * svg/SVGMetadataElement.idl:
        * svg/SVGNumber.idl:
        * svg/SVGNumberList.cpp:
        * svg/SVGNumberList.h:
        * svg/SVGPaint.cpp:
        * svg/SVGPathElement.cpp:
        * svg/SVGPathSeg.h:
        * svg/SVGPathSegArc.cpp:
        * svg/SVGPathSegArc.h:
        * svg/SVGPathSegClosePath.cpp:
        * svg/SVGPathSegClosePath.h:
        * svg/SVGPathSegCurvetoCubic.cpp:
        * svg/SVGPathSegCurvetoCubic.h:
        * svg/SVGPathSegCurvetoCubicSmooth.cpp:
        * svg/SVGPathSegCurvetoCubicSmooth.h:
        * svg/SVGPathSegCurvetoQuadratic.cpp:
        * svg/SVGPathSegCurvetoQuadratic.h:
        * svg/SVGPathSegCurvetoQuadraticSmooth.cpp:
        * svg/SVGPathSegCurvetoQuadraticSmooth.h:
        * svg/SVGPathSegLineto.cpp:
        * svg/SVGPathSegLineto.h:
        * svg/SVGPathSegLinetoHorizontal.cpp:
        * svg/SVGPathSegLinetoHorizontal.h:
        * svg/SVGPathSegLinetoVertical.cpp:
        * svg/SVGPathSegLinetoVertical.h:
        * svg/SVGPathSegMoveto.cpp:
        * svg/SVGPathSegMoveto.h:
        * svg/SVGPatternElement.cpp:
        * svg/SVGPoint.idl:
        * svg/SVGPointList.cpp:
        * svg/SVGPointList.h:
        * svg/SVGPolyElement.cpp:
        * svg/SVGPolygonElement.cpp:
        * svg/SVGPolygonElement.h:
        * svg/SVGPolylineElement.cpp:
        * svg/SVGPolylineElement.h:
        * svg/SVGPreserveAspectRatio.cpp:
        * svg/SVGPreserveAspectRatio.h:
        * svg/SVGRadialGradientElement.h:
        * svg/SVGRect.idl:
        * svg/SVGRectElement.cpp:
        * svg/SVGRenderingIntent.h:
        * svg/SVGSVGElement.idl:
        * svg/SVGScriptElement.cpp:
        * svg/SVGSetElement.cpp:
        * svg/SVGSetElement.h:
        * svg/SVGStopElement.cpp:
        * svg/SVGStringList.cpp:
        * svg/SVGStringList.h:
        * svg/SVGStylable.cpp:
        * svg/SVGStylable.h:
        * svg/SVGStyleElement.cpp:
        * svg/SVGStyleElement.h:
        * svg/SVGStyledElement.h:
        * svg/SVGStyledLocatableElement.cpp:
        * svg/SVGStyledLocatableElement.h:
        * svg/SVGStyledTransformableElement.cpp:
        * svg/SVGStyledTransformableElement.h:
        * svg/SVGSwitchElement.cpp:
        * svg/SVGSymbolElement.cpp:
        * svg/SVGTRefElement.cpp:
        * svg/SVGTSpanElement.cpp:
        * svg/SVGTSpanElement.h:
        * svg/SVGTests.h:
        * svg/SVGTextElement.cpp:
        * svg/SVGTextElement.h:
        * svg/SVGTextPathElement.cpp:
        * svg/SVGTextPositioningElement.cpp:
        * svg/SVGTextPositioningElement.h:
        * svg/SVGTitleElement.cpp:
        * svg/SVGTitleElement.h:
        * svg/SVGTransform.cpp:
        * svg/SVGTransform.h:
        * svg/SVGTransform.idl:
        * svg/SVGTransformList.cpp:
        * svg/SVGTransformList.h:
        * svg/SVGTransformable.h:
        * svg/SVGURIReference.h:
        * svg/SVGUnitTypes.h:
        * svg/SVGUseElement.cpp:
        * svg/SVGViewElement.cpp:
        * svg/SVGZoomAndPan.cpp:
        * svg/SVGZoomAndPan.h:
        * svg/SVGZoomEvent.cpp:

2009-11-05  Jeremy Orlow  <jorlow@chromium.org>

        Reviewed by Dimitri Glazkov.

        REGRESSION Clean up security origin usage in DOM Storage.
        https://bugs.webkit.org/show_bug.cgi?id=31188

        Clean up security origin usage in DOM Storage.  This fixes a bug in my
        refactoring here: https://bugs.webkit.org/show_bug.cgi?id=31149

        Instead of having StorageAreaSync's constructor (which is called in the
        constructor for StorageAreaImpl) calling a method on StoargeAreaImpl to get the
        database identifier, simply have StorageAreaImpl pass the identifier into
        StorageAreaSync.

        No test because there's no change in externally observable behavior.

        * storage/StorageAreaImpl.cpp:
        (WebCore::StorageAreaImpl::StorageAreaImpl):
        * storage/StorageAreaImpl.h:
        * storage/StorageAreaSync.cpp:
        (WebCore::StorageAreaSync::create):
        (WebCore::StorageAreaSync::StorageAreaSync):
        * storage/StorageAreaSync.h:

2009-11-05  Scott Violet  <sky@google.com>

        Reviewed by Dimitri Glazkov.

        Need notification of scrolling frame
        https://bugs.webkit.org/show_bug.cgi?id=31145

        Adds FrameLoaderClient::didChangeScrollOffset that is called when
        the frame scrolls. This will be used to know when history state
        needs to be updated.

        * loader/FrameLoaderClient.h:
        (WebCore::FrameLoaderClient::didChangeScrollOffset):
        * page/FrameView.cpp:
        (WebCore::FrameView::valueChanged):

2009-11-05  Kenneth Russell  <kbr@google.com>

        Reviewed by Dimitri Glazkov.

        [V8] Update bindings to use new API for external arrays
        https://bugs.webkit.org/show_bug.cgi?id=31181

        No new tests; covered by existing WebGL tests.

        * bindings/v8/V8DOMWrapper.cpp:
        (WebCore::V8DOMWrapper::setIndexedPropertiesToExternalArray):
        (WebCore::V8DOMWrapper::getTemplate):
        (WebCore::V8DOMWrapper::convertToV8Object):
        * bindings/v8/V8DOMWrapper.h:
        * bindings/v8/custom/V8CanvasArrayCustom.h:
        (WebCore::constructCanvasArray):

2009-11-05  Alpha Lam  <hclam@chromium.org>

        Not reviewed, Chromium build fix.

        50561 introduces a custom method for SVGMatrix, we need to implement
        this in V8.

        * bindings/v8/custom/V8CustomBinding.h:
        Adding definition for V8SVGMatrixMultiply.
        * bindings/v8/custom/V8SVGMatrixCustom.cpp:
        (WebCore::CALLBACK_FUNC_DECL):
        Implement V8SVGMatrixMultiply according to the same method in JSC.

2009-11-05  Jeremy Orlow  <jorlow@chromium.org>

        Revert 50569 since it broke QT.  Build fix and just a revert, so no review.

        * page/DOMWindow.cpp:
        (WebCore::DOMWindow::sessionStorage):
        * page/Settings.cpp:
        (WebCore::Settings::Settings):
        (WebCore::Settings::setSessionStorageEnabled):
        * page/Settings.h:
        (WebCore::Settings::sessionStorageEnabled):

2009-11-05  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        REGRESSION: Web Inspector doesn't show CSS rules properly for iframes

        https://bugs.webkit.org/show_bug.cgi?id=30884

        Test: inspector/styles-iframe.html

        * inspector/front-end/DOMAgent.js:
        (WebInspector.DOMNode):
        * inspector/front-end/InjectedScript.js:
        (InjectedScript.getStyles):
        (InjectedScript.getComputedStyle):
        (InjectedScript.addStyleSelector):
        * inspector/front-end/TestController.js:
        (WebInspector.TestController.prototype.notifyDone):
        (WebInspector.TestController.prototype.runAfterPendingDispatches):
        (WebInspector.evaluateForTestInFrontend.invokeMethod):
        (WebInspector.evaluateForTestInFrontend):

2009-11-05  Vitaly Repeshko  <vitalyr@chromium.org>

        Reviewed by Geoffrey Garen and Dimitri Glazkov.

        Rehashing of EventListenerMap leads to loss of EvenListenerList.
        https://bugs.webkit.org/show_bug.cgi?id=31027

        Tested by new fast/events/event-listener-map-rehash-crash.html.

        EventListenerMap modified to store pointers to listener vectors:
        * dom/EventTarget.cpp:
        (WebCore::EventTargetData::~EventTargetData):
        (WebCore::EventTarget::addEventListener):
        (WebCore::EventTarget::removeEventListener):
        (WebCore::EventTarget::fireEventListeners):
        (WebCore::EventTarget::getEventListeners):
        (WebCore::EventTarget::removeAllEventListeners):
        * dom/EventTarget.h:

        Usages updated after interface changes:
        * inspector/InspectorDOMAgent.cpp:
        (WebCore::InspectorDOMAgent::getEventListenersForNode):
        * svg/SVGUseElement.cpp:
        (WebCore::SVGUseElement::transferEventListenersToShadowTree):

2009-11-05  Dan Kegel  <dank@chromium.org>

        Reviewed by Dmitri Titov.

        Add missing initialization for m_createdByParser.
        https://bugs.webkit.org/show_bug.cgi?id=31089

        Test: fast/dom/beforeload/pi-before-load.xhtml in Valgrind

        * dom/ProcessingInstruction.cpp:
        (WebCore::ProcessingInstruction::ProcessingInstruction):

2009-11-04  Jeremy Orlow  <jorlow@chromium.org>

        Reviewed by Adam Barth.

        DOM Storage runtime flag changes
        https://bugs.webkit.org/show_bug.cgi?id=30602

        Part 2/2.

        Revert my changes to Settings and instead implement DOM Storage enabling via
        the methods agreed upon in https://bugs.webkit.org/show_bug.cgi?id=30240

        This stuff was (intentionally) never exposed to web pages or DRT, so there's no
        LayoutTest visible changes and thus no tests.

        * bindings/v8/custom/V8CustomBinding.h:
        * bindings/v8/custom/V8DOMWindowCustom.cpp:
        (WebCore::ACCESSOR_RUNTIME_ENABLER):
        * page/DOMWindow.cpp:
        (WebCore::DOMWindow::sessionStorage):
        * page/DOMWindow.idl:
        * page/Settings.cpp:
        (WebCore::Settings::Settings):
        * page/Settings.h:
        * storage/Storage.cpp:
        (WebCore::Storage::setLocalStorageAvailable):
        (WebCore::Storage::localStorageAvailable):
        (WebCore::Storage::setSessionStorageAvailable):
        (WebCore::Storage::sessionStorageAvailable):
        * storage/Storage.h:

2009-11-05  Jian Li  <jianli@chromium.org>

        Reviewed by Pavel Feldman.

        Bug 31108 - [V8] REGRESSION: Pause on exception is broken
        https://bugs.webkit.org/show_bug.cgi?id=31108

        * bindings/v8/V8AbstractEventListener.cpp:
        (WebCore::V8AbstractEventListener::invokeEventHandler):
        * bindings/v8/V8Utilities.cpp:
        (WebCore::reportException):

2009-11-05  Jian Li  <jianli@chromium.org>

        Reviewed by Dmitri Titov.

        We should not bubble up events if we drag something to an iframe that
        has an invalid source.
        https://bugs.webkit.org/show_bug.cgi?id=30469

        Test: http/tests/misc/bubble-drag-events.html

        * page/EventHandler.cpp:
        (WebCore::EventHandler::handleDragAndDropForTarget):
        (WebCore::EventHandler::updateDragAndDrop):
        (WebCore::EventHandler::cancelDragAndDrop):
        (WebCore::EventHandler::performDragAndDrop):
        * page/EventHandler.h:
        (WebCore::EventHandler::):

2009-11-05  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: speed up Timelines Clear by a factor of thousands.

        https://bugs.webkit.org/show_bug.cgi?id=31160

        * inspector/front-end/utilities.js:
        (Element.prototype.removeChildren):

2009-11-05  Anton Muhin  <antonm@chromium.org>

        Reviewed by Adam Barth.

        If high memory usage is detected, hint to V8 that it might be due
        to external objects retained by V8 objects.
        https://bugs.webkit.org/show_bug.cgi?id=31051

        * bindings/v8/V8GCController.cpp:
        (WebCore::GetMemoryUsageInMB):
        (WebCore::V8GCController::gcEpilogue):
        (WebCore::V8GCController::checkMemoryUsage):
        * bindings/v8/V8GCController.h:
        * bindings/v8/V8Proxy.cpp:
        (WebCore::V8Proxy::evaluate):
        (WebCore::V8Proxy::runScript):
        (WebCore::V8Proxy::callFunction):

2009-11-05  Jeff Schiller  <codedread@gmail.com>

        Reviewed by Simon Fraser.

        Correct order of matrix multiplication for SVGMatrix.
        https://bugs.webkit.org/show_bug.cgi?id=16062

        Test: svg/dom/SVGMatrix-interface.xhtml

        * bindings/js/JSSVGMatrixCustom.cpp:
        (WebCore::JSSVGMatrix::multiply):
        * svg/SVGMatrix.idl:

2009-11-04  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Make resource-related records in timeline
        actually take some time.

        https://bugs.webkit.org/show_bug.cgi?id=31139

        * English.lproj/localizedStrings.js:
        * inspector/front-end/TimelinePanel.js:
        (WebInspector.TimelinePanel):
        (WebInspector.TimelinePanel.prototype._formatRecord):
        (WebInspector.TimelinePanel.prototype._getRecordDetails):
        (WebInspector.TimelinePanel.prototype.reset):

2009-11-04  Jeremy Orlow  <jorlow@chromium.org>

        Reviewed by Darin Fisher.

        Simplify LocalStorageThread
        https://bugs.webkit.org/show_bug.cgi?id=30935

        This is a re-submit of 50519.  LocalStorageTask should have never been ref
        counted.  I've removed that and switched a PassRefPtr over to a PassOwnPtr.

        On LocalStoragethread: Remove reference counting. Get rid of locking. Make some
        of the method names a bit more clear. Assert proper thread usage. Join rather
        than detaching the thread and doing an ad-hoc form of join. Avoid touching
        variables on the background thread when simple to do so.  Also create a generic
        scheduleTask function rather than one for each task.

        No behavior should have changed.

        * storage/LocalStorageTask.h:
        * storage/LocalStorageThread.cpp:
        (WebCore::LocalStorageThread::create):
        (WebCore::LocalStorageThread::LocalStorageThread):
        (WebCore::LocalStorageThread::~LocalStorageThread):
        (WebCore::LocalStorageThread::start):
        (WebCore::LocalStorageThread::threadEntryPointCallback):
        (WebCore::LocalStorageThread::threadEntryPoint):
        (WebCore::LocalStorageThread::scheduleTask):
        (WebCore::LocalStorageThread::terminate):
        (WebCore::LocalStorageThread::performTerminate):
        * storage/LocalStorageThread.h:
        * storage/StorageSyncManager.cpp:
        (WebCore::StorageSyncManager::StorageSyncManager):
        (WebCore::StorageSyncManager::~StorageSyncManager):
        (WebCore::StorageSyncManager::scheduleImport):
        (WebCore::StorageSyncManager::scheduleSync):
        * storage/StorageSyncManager.h:

2009-11-04  Jeremy Orlow  <jorlow@chromium.org>

        Reviewed by Darin Fisher.

        Calling databaseIdentifier on LocalStorage's background thread is not safe.
        https://bugs.webkit.org/show_bug.cgi?id=31149

        Calling SecurityOrigin::databaseIdentifier on LocalStorage's background thread
        is not safe.  databaseIdentifier does a bunch of string concatenation which
        ref-counts StringImpls in some cases.  This was caught by valgrind thread
        sanitizer: http://code.google.com/p/chromium/issues/detail?id=25645

        There's no way to test for such racyness, unfortunately.

        * storage/StorageAreaSync.cpp:
        (WebCore::StorageAreaSync::StorageAreaSync):
        (WebCore::StorageAreaSync::performImport):
        * storage/StorageAreaSync.h:
        * storage/StorageSyncManager.cpp:
        (WebCore::StorageSyncManager::fullDatabaseFilename):
        * storage/StorageSyncManager.h:

2009-11-03  Jeremy Orlow  <jorlow@chromium.org>

        Reviewed by Darin Fisher.

        Clean up StorageAreaSync
        https://bugs.webkit.org/show_bug.cgi?id=31100

        Major fixes: Break the ref count cycle for StorageArea on the main
        thread, not the background thread since the latter is not safe.
        Length() needs to block on the import completing.

        Small fixes: setItem needs to handle the copy on write case even if it
        has an exception.  setItem and removeItem should just bail from the
        the function if the value hasn't changed rather than wrapping the end
        in an if block.  Clear should only send an event if it wasn't already
        cleared.  StorageAreaSync should assert that the final sync was
        scheduled.

        * storage/StorageAreaImpl.cpp:
        (WebCore::StorageAreaImpl::length):
          Forgot to block on the import.
        (WebCore::StorageAreaImpl::key):
        (WebCore::StorageAreaImpl::setItem):
          Handle the copy on write case even when there's an exception.
        (WebCore::StorageAreaImpl::removeItem):
        (WebCore::StorageAreaImpl::clear):
        * storage/StorageAreaSync.cpp:
        (WebCore::StorageAreaSync::~StorageAreaSync):
        (WebCore::StorageAreaSync::scheduleFinalSync):
        (WebCore::StorageAreaSync::performImport):
        (WebCore::StorageAreaSync::markImported):
        (WebCore::StorageAreaSync::blockUntilImportComplete):
        * storage/StorageAreaSync.h:

2009-11-05  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Eric Seidel.

        Allow custom memory allocation control for WebCore's CachedResource
        https://bugs.webkit.org/show_bug.cgi?id=31114

        Inherits CachedResource class from Noncopyable because its (its child
        class) CachedCSSStyleSheet instantiated by 'new' in WebCore/loader/Cache.cpp:75 
        and it is no need to be copyable.

        * loader/CachedResource.h:

2009-11-04  Mark Mentovai  <mark@chromium.org>

        Reviewed by Mark Rowe.

        Separate the difference between HAVE(CGINTERPOLATION_MEDIUM), which
        is true when building on 10.6 or later, and USE(CGINTERPOLATION_MEDIUM)
        which is true when targeting 10.6 or later.

        HAVE(CGINTERPOLATION_MEDIUM) indicates that kCGInterpolationMedium
        is present in the CGInterpolationQuality enum, and must be handled
        by a switch that has cases for each enumerated value.

        USE(CGINTERPOLATION_MEDIUM) indicates that the product will only run
        on 10.6 or later, and that CoreGraphics will understand when
        InterpolationMedium is mapped to kCGInterpolationMedium at runtime.

        * platform/graphics/cg/GraphicsContextCG.cpp:
        (WebCore::GraphicsContext::setImageInterpolationQuality):
        (WebCore::GraphicsContext::imageInterpolationQuality):

2009-11-04  Dan Kegel  <dank@chromium.org>

        Reviewed by Alexey Proskuryakov.

        Fix buffer overrun in WebCore::Page::userStyleSheetLocationChanged()
        https://bugs.webkit.org/show_bug.cgi?id=31138

        Test: LayoutTests/platform/mac/fast/loader/user-stylesheet-fast-path.html in Valgrind

        * page/Page.cpp:
        (WebCore::Page::userStyleSheetLocationChanged):

2009-11-04  Timothy Hatcher  <timothy@apple.com>

        Update the Web Inspector Timeline panel to better match the mock-up.

        https://bugs.webkit.org/show_bug.cgi?id=31150

        Reviewed by Pavel Feldman.

        * inspector/front-end/TimelinePanel.js:
        (WebInspector.TimelinePanel.prototype._getRecordDetails):
        (WebInspector.TimelinePanel.prototype._dragWindow):
        (WebInspector.TimelinePanel.prototype._resizeWindowLeft):
        (WebInspector.TimelinePanel.prototype._resizeWindowRight):
        (WebInspector.TimelineCategoryTreeElement.prototype.onattach):
        (WebInspector.TimelineRecordTreeElement.prototype.onattach):
        (WebInspector.TimelineRecordTreeElement.prototype.refresh):
        (WebInspector.TimelineCategoryGraph):
        * inspector/front-end/inspector.css:

2009-11-05  Justin Garcia  <justin.garcia@apple.com>

        Reviewed by Adele Peterson.

        https://bugs.webkit.org/show_bug.cgi?id=25439
        Deleting when in front of a block image removes character from previous paragraph

        Added editing/deleting/25439-{1,2,3}.html

        * editing/DeleteSelectionCommand.cpp:
        (WebCore::DeleteSelectionCommand::mergeParagraphs): Block images, tables and HRs cannot 
        be made inline with other content.  Instead of merging, just move the caret to just before 
        the selection we deleted.
        * editing/htmlediting.cpp:
        (WebCore::firstInSpecialElement): Added a FIXME.  This function begins iterating up from pos.node(), which 
        doesn't necessarily contain pos (suppose pos was [img, 0]).
        (WebCore::lastInSpecialElement): Ditto.
        (WebCore::isRenderedAsNonInlineTableImageOrHR): Moved from visible_units.cpp.  Added a check for non-inline images.
        * editing/htmlediting.h:
        * editing/visible_units.cpp:
        (WebCore::startOfParagraph): Use moved/renamed function.  Removed FIXME.  The problem causing 
        5027702 is now squarely in first/lastInSpecialElement
        (WebCore::endOfParagraph): Ditto.
        
2009-11-04  Enrica Casucci  <enrica@apple.com>

        Reviewed by Adele Peterson.

        Hang in Mail on attempting to change indent level.
        <rdar://problem/7131805>
        https://bugs.webkit.org/show_bug.cgi?id=31127

        The hang was caused by an infinite loop inside outdentRegion.
        The code did not account for the fact that, when a list item
        contains multiple paragraphs, outdent moves all paragraphs at
        once, invalidating some of the positions we keep track of in the loop.
        Some code refactoring has also been done to minimize duplicated code.
        
        Test: editing/execCommand/outdent-multiparagraph-list.html

        * editing/IndentOutdentCommand.cpp:
        (WebCore::IndentOutdentCommand::indentRegion): Moved code in common with
        outdentRegion to doApply.
        (WebCore::IndentOutdentCommand::outdentRegion): Fixed endless loop.
        (WebCore::IndentOutdentCommand::doApply): Some code refactoring.
        * editing/IndentOutdentCommand.h: Added VisiblePosition parameters to
        indentRegion and outdentRegion.

2009-11-04  Alpha Lam  <hclam@chromium.org>

        Reviewed by Eric Carlson.

        Volume slider doesn't have a thumb
        https://bugs.webkit.org/show_bug.cgi?id=31135

        Fixed an incorrect if statement that prevents volume slider
        being updated.

        The statement checks if the slider value equals to the current
        volume value of the media control to avoid updating the volume
        slider. Updating the volume slider control shouldn't be within
        this condition because we explicitly set them to be equals
        during creation of the controls and also when mouse events are
        received on the volume control.

        No new tests because existing code breaks:
        LayoutTests/media/video-volume-slider.html

        It should now start passing on Chromium.

        * rendering/MediaControlElements.cpp:
        (WebCore::MediaControlVolumeSliderElement::update):
        Update the volume slider regardless of the current volume value
        of the media control.

2009-11-04  Jenn Braithwaite  <jennb@chromium.org>

        Reviewed by David Levin.

        Need to properly disable applicationCache at runtime
        https://bugs.webkit.org/show_bug.cgi?id=30417

        Adding applicationCacheEnabled bit to V8 RuntimeEnabledFeatures.

        No new exposed functionality, so no new tests.

        * bindings/v8/RuntimeEnabledFeatures.cpp:
        * bindings/v8/RuntimeEnabledFeatures.h:
        (WebCore::RuntimeEnabledFeatures::setApplicationCacheEnabled):
        (WebCore::RuntimeEnabledFeatures::applicationCacheEnabled):
        * bindings/v8/custom/V8CustomBinding.h:
        * bindings/v8/custom/V8DOMWindowCustom.cpp:
        (WebCore::ACCESSOR_RUNTIME_ENABLER):
        * page/DOMWindow.idl:

2009-11-04  Alexey Proskuryakov  <ap@apple.com>

        Reviewed by Dan Bernstein.

        https://bugs.webkit.org/show_bug.cgi?id=31143
        Assertion failure in CredentialStorage::set() when proxy credentials are being set

        No test, cannot test proxy behavior.

        * platform/network/CredentialStorage.cpp: (WebCore::CredentialStorage::set): Account for the
        possibility of null url. Release mode changes are likely inconsequential - e.g. we used to
        add "://" to origin set, which is weird, but safe.

2009-11-04  Patrick Mueller  <Patrick_Mueller@us.ibm.com>

        Reviewed by Timothy Hatcher.

        Web Inspector: Leftover Breakpoints in the Sidebar Pane
        https://bugs.webkit.org/show_bug.cgi?id=30659

        No new tests.

        * inspector/front-end/ScriptsPanel.js:
        (WebInspector.ScriptsPanel.prototype.addScript):

2009-11-04  Jocelyn Turcotte  <jocelyn.turcotte@nokia.com>

        Reviewed by Timothy Hatcher.

        WebInspector: Use a different method to identify the webkit port in
        InspectorBackent::platform().
        This corrects the inspector expected behavior with Qt on Windows.
        https://bugs.webkit.org/show_bug.cgi?id=31116

        * inspector/InspectorBackend.cpp:
        (WebCore::InspectorBackend::platform):
        (WebCore::InspectorBackend::port):
        * inspector/InspectorBackend.h:
        * inspector/InspectorBackend.idl:
        * inspector/front-end/InspectorControllerStub.js:
        (.WebInspector.InspectorControllerStub.prototype.port):
        * inspector/front-end/inspector.css:
        * inspector/front-end/inspector.js:
        (WebInspector.loaded):
        (WebInspector.toolbarDragStart):

2009-11-04  Benjamin Otte  <otte@gnome.org>

        Reviewed by Gustavo Noronha.

        Update Cairo requirement to 1.6.

        Also remove all conditional code and workarounds for older versions of
        Cairo.
        In particular, gain image quality by removing the use of
        CAIRO_FILTER_NEAREST when rendering images and use the default
        bilinear filter instead.
        https://bugs.webkit.org/show_bug.cgi?id=19266

        * platform/graphics/cairo/GraphicsContextCairo.cpp:
        (WebCore::GraphicsContext::clipOut):
        * platform/graphics/cairo/ImageCairo.cpp:
        (WebCore::BitmapImage::draw):
        (WebCore::BitmapImage::drawPattern):
        * platform/graphics/cairo/PathCairo.cpp:
        (WebCore::Path::isEmpty):
        (WebCore::Path::boundingRect):
        * platform/gtk/RenderThemeGtk.cpp:
        (WebCore::paintMozWidget):

2009-11-04  Kevin Ollivier  <kevino@theolliviers.com>

        wx build fix. Restore removed string conversion after cleanup.

        * platform/graphics/wx/FontPlatformDataWx.cpp:
        (WebCore::FontPlatformData::computeHash):

2009-11-04  Chris Fleizach  <cfleizach@apple.com>

        Reviewed by Beth Dakin.

        Need to implement ARIA role="combobox"
        https://bugs.webkit.org/show_bug.cgi?id=31096

        Test: accessibility/aria-combobox.html

        * accessibility/AccessibilityObject.h:
        (WebCore::AccessibilityObject::isComboBox):
        (WebCore::AccessibilityObject::isExpanded):
        (WebCore::AccessibilityObject::expandObject):
        (WebCore::AccessibilityObject::increment):
        (WebCore::AccessibilityObject::decrement):
        * accessibility/AccessibilityRenderObject.cpp:
        (WebCore::AccessibilityRenderObject::expandObject):
        (WebCore::AccessibilityRenderObject::isExpanded):
        (WebCore::createARIARoleMap):
        * accessibility/AccessibilityRenderObject.h:
        * accessibility/mac/AccessibilityObjectWrapper.mm:
        (-[AccessibilityObjectWrapper accessibilityAttributeNames]):
        (-[AccessibilityObjectWrapper accessibilityAttributeValue:]):
        (-[AccessibilityObjectWrapper accessibilityPerformShowMenuAction]):
        * html/HTMLAttributeNames.in:

2009-11-04  Kelly Norton  <knorton@google.com>

        Reviewed by Pavel Feldman.

        Fixes naming inconsistencies in TimelineRecordFactory.
        https://bugs.webkit.org/show_bug.cgi?id=31132

        * inspector/InspectorTimelineAgent.cpp:
        (WebCore::InspectorTimelineAgent::willPaint):
        (WebCore::InspectorTimelineAgent::willChangeXHRReadyState):
        (WebCore::InspectorTimelineAgent::willLoadXHR):
        (WebCore::InspectorTimelineAgent::willEvaluateScript):
        (WebCore::InspectorTimelineAgent::willSendResourceRequest):
        (WebCore::InspectorTimelineAgent::didReceiveResourceResponse):
        (WebCore::InspectorTimelineAgent::didFinishLoadingResource):
        * inspector/TimelineRecordFactory.cpp:
        (WebCore::TimelineRecordFactory::createXHRReadyStateChangeRecord):
        (WebCore::TimelineRecordFactory::createXHRLoadRecord):
        (WebCore::TimelineRecordFactory::createEvaluateScriptRecord):
        (WebCore::TimelineRecordFactory::createMarkTimelineRecord):
        (WebCore::TimelineRecordFactory::createResourceSendRequestRecord):
        (WebCore::TimelineRecordFactory::createResourceReceiveResponseRecord):
        (WebCore::TimelineRecordFactory::createResourceFinishRecord):
        (WebCore::TimelineRecordFactory::createPaintRecord):
        * inspector/TimelineRecordFactory.h:

2009-11-04  Eric Z. Ayers  <zundel@google.com>

        Reviewed by Pavel Feldman.

        Followon to bug 31080, which protects Timeline
        instrumentation in the case where InspectorTimelineAgent
        is enabled or disabled during an event dispatch.
        
        https://bugs.webkit.org/show_bug.cgi?id=31121

        * bindings/v8/V8Proxy.cpp:
        (WebCore::V8Proxy::evaluate):
        * dom/Document.cpp:
        (WebCore::Document::recalcStyle):
        * dom/Node.cpp:
        (WebCore::Node::dispatchGenericEvent):
        * html/HTMLTokenizer.cpp:
        (WebCore::HTMLTokenizer::write):
        * page/DOMWindow.cpp:
        (WebCore::DOMWindow::inspectorTimelineAgent):
        (WebCore::DOMWindow::dispatchEvent):
        * page/DOMWindow.h:
        * page/FrameView.cpp:
        (WebCore::FrameView::layout):
        (WebCore::FrameView::paintContents):
        * xml/XMLHttpRequest.cpp:
        (WebCore::XMLHttpRequest::callReadyStateChangeListener):

2009-11-04  Jeremy Orlow  <jorlow@chromium.org>

        Revert 50519 while I work out what went wrong.

        * storage/LocalStorageThread.cpp:
        (WebCore::LocalStorageThread::create):
        (WebCore::LocalStorageThread::LocalStorageThread):
        (WebCore::LocalStorageThread::start):
        (WebCore::LocalStorageThread::localStorageThreadStart):
        (WebCore::LocalStorageThread::localStorageThread):
        (WebCore::LocalStorageThread::scheduleImport):
        (WebCore::LocalStorageThread::scheduleSync):
        (WebCore::LocalStorageThread::terminate):
        (WebCore::LocalStorageThread::performTerminate):
        * storage/LocalStorageThread.h:
        * storage/StorageSyncManager.cpp:
        (WebCore::StorageSyncManager::StorageSyncManager):
        (WebCore::StorageSyncManager::~StorageSyncManager):
        (WebCore::StorageSyncManager::scheduleImport):
        (WebCore::StorageSyncManager::scheduleSync):
        * storage/StorageSyncManager.h:

2009-11-04  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Add basic support for resource events and marks.
        Couple of drive-by fixes. Enabling the panel!

        https://bugs.webkit.org/show_bug.cgi?id=31130

        * English.lproj/localizedStrings.js:
        * inspector/front-end/TimelinePanel.js:
        (WebInspector.TimelinePanel):
        (WebInspector.TimelinePanel.prototype._formatRecord):
        (WebInspector.TimelinePanel.prototype._getRecordDetails):
        (WebInspector.TimelinePanel.prototype.reset):
        (WebInspector.TimelineCategoryTreeElement.prototype._onCheckboxClicked):
        (WebInspector.TimelineRecordTreeElement.prototype.onattach):
        * inspector/front-end/inspector.js:
        (WebInspector._createPanels):

2009-11-03  Jeremy Orlow  <jorlow@chromium.org>

        Reviewed by Darin Fisher.

        Simplify LocalStorageThread
        https://bugs.webkit.org/show_bug.cgi?id=30935

        On LocalStoragethread: Remove reference counting. Get rid of locking. Make some
        of the method names a bit more clear. Assert proper thread usage. Join rather
        than detaching the thread and doing an ad-hoc form of join. Avoid touching
        variables on the background thread when simple to do so.  Also create a generic
        scheduleTask function rather than one for each task.

        No behavior should have changed.

        * storage/LocalStorageThread.cpp:
        (WebCore::LocalStorageThread::create):
        (WebCore::LocalStorageThread::LocalStorageThread):
        (WebCore::LocalStorageThread::~LocalStorageThread):
        (WebCore::LocalStorageThread::start):
        (WebCore::LocalStorageThread::threadEntryPointCallback):
        (WebCore::LocalStorageThread::threadEntryPoint):
        (WebCore::LocalStorageThread::scheduleTask):
        (WebCore::LocalStorageThread::terminate):
        (WebCore::LocalStorageThread::performTerminate):
        * storage/LocalStorageThread.h:
        * storage/StorageSyncManager.cpp:
        (WebCore::StorageSyncManager::StorageSyncManager):
        (WebCore::StorageSyncManager::~StorageSyncManager):
        (WebCore::StorageSyncManager::scheduleImport):
        (WebCore::StorageSyncManager::scheduleSync):
        * storage/StorageSyncManager.h:

2009-11-04  Vadim Zeitlin  <vadim@wxwidgets.org>

        Reviewed by Eric Seidel.

        [wx] Small cleanup: avoid unnecessary wxString::mb_str() calls.

        * platform/graphics/wx/FontPlatformDataWx.cpp:
        (WebCore::FontPlatformData::computeHash):

2009-11-04  Kelly Norton  <knorton@google.com>

        Reviewed by Pavel Feldman.

        Adds lightweight network resources to InspectorTimelineAgent.
        https://bugs.webkit.org/show_bug.cgi?id=31065

        * inspector/InspectorController.cpp:
        (WebCore::InspectorController::willSendRequest):
        (WebCore::InspectorController::didReceiveResponse):
        (WebCore::InspectorController::didFinishLoading):
        (WebCore::InspectorController::didFailLoading):
        * inspector/InspectorTimelineAgent.cpp:
        (WebCore::InspectorTimelineAgent::willSendResourceRequest):
        (WebCore::InspectorTimelineAgent::didReceiveResourceResponse):
        (WebCore::InspectorTimelineAgent::didFinishLoadingResource):
        * inspector/InspectorTimelineAgent.h:
        (WebCore::):
        * inspector/TimelineRecordFactory.cpp:
        (WebCore::TimelineRecordFactory::createResourceSendRequestTimelineRecord):
        (WebCore::TimelineRecordFactory::createResourceReceiveResponseTimelineRecord):
        (WebCore::TimelineRecordFactory::createResourceFinishTimelineRecord):
        * inspector/TimelineRecordFactory.h:
        * inspector/front-end/TimelineAgent.js:

2009-11-04  Yael Aharon  <yael.aharon@nokia.com>

        Reviewed by Tor Arne Vestbø.

        [Qt] ASSERT failure when receiving 401 HTTP Authentication response.
        https://bugs.webkit.org/show_bug.cgi?id=31077

        Allow sending the response body under the same conditions that we
        allow it to finish without reporting an error.

        * platform/network/qt/QNetworkReplyHandler.cpp:
        (WebCore::QNetworkReplyHandler::sendResponseIfNeeded):

2009-11-04  Adam Roben  <aroben@apple.com>

        Sort WebCore.base.exp

        Rubber-stamped by Dan Bernstein.

        * WebCore.base.exp: Sorted.

2009-11-04  Csaba Osztrogonác  <ossy@webkit.org>

        Unreviewed rollout.

        Revert r50496 because it broke all layout tests on QtBuildBot.

        * WebCore.pro:
        * platform/graphics/qt/FontCacheQt.cpp:
        (WebCore::fontCache):
        (WebCore::FontCache::FontCache):
        (WebCore::FontCache::getTraitsInFamily):
        (WebCore::FontPlatformDataCacheKey::FontPlatformDataCacheKey):
        (WebCore::FontPlatformDataCacheKey::isHashTableDeletedValue):
        (WebCore::FontPlatformDataCacheKey::):
        (WebCore::FontPlatformDataCacheKey::operator==):
        (WebCore::FontPlatformDataCacheKey::hash):
        (WebCore::FontPlatformDataCacheKey::computeHash):
        (WebCore::FontPlatformDataCacheKey::hashTableDeletedSize):
        (WebCore::FontPlatformDataCacheKeyHash::hash):
        (WebCore::FontPlatformDataCacheKeyHash::equal):
        (WebCore::FontPlatformDataCacheKeyTraits::emptyValue):
        (WebCore::FontPlatformDataCacheKeyTraits::constructDeletedValue):
        (WebCore::FontPlatformDataCacheKeyTraits::isDeletedValue):
        (WebCore::FontCache::getCachedFontPlatformData):
        (WebCore::FontCache::getCachedFontData):
        (WebCore::FontCache::getLastResortFallbackFont):
        (WebCore::FontCache::releaseFontData):
        (WebCore::FontCache::purgeInactiveFontData):
        (WebCore::FontCache::addClient):
        (WebCore::FontCache::removeClient):
        (WebCore::FontCache::invalidate):
        * platform/graphics/qt/FontFallbackListQt.cpp: Added.
        (WebCore::FontFallbackList::FontFallbackList):
        (WebCore::FontFallbackList::invalidate):
        (WebCore::FontFallbackList::releaseFontData):
        (WebCore::FontFallbackList::determinePitch):
        (WebCore::FontFallbackList::fontDataAt):
        (WebCore::FontFallbackList::fontDataForCharacters):
        (WebCore::FontFallbackList::setPlatformFont):
        * platform/graphics/qt/FontPlatformData.h:
        (WebCore::FontPlatformData::pixelSize):
        * platform/graphics/qt/FontPlatformDataQt.cpp:
        (WebCore::FontPlatformData::FontPlatformData):

2009-11-04  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Jan Alonzo.

        https://bugs.webkit.org/show_bug.cgi?id=31044
        [Gtk] assertion when webkit_accessible_get_index_in_parent attempts to get parent of the web view

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (atkParentOfWebView):
        (webkit_accessible_get_index_in_parent):
        (webkit_accessible_get_parent):

2009-11-04  Dominik Röttsches  <dominik.roettsches@access-company.com>

        Reviewed by Eric Seidel.

        https://bugs.webkit.org/show_bug.cgi?id=15914
        [GTK] Implement Unicode functionality using GLib

        Initial version of this patch by Jürg Billeter and Naiem Shaik.
        Patch 2/4 - Moving TextCodecs to GLib
        
        Added probing for a hard-coded lists of text encodings.
        The basis of this list is taken from the encodings supported by iconv,
        then extended by e.g. tis-620, windows-1251, euc-kr, windows-1253 and
        a number of Chinese ones.

        Probing is necessary with the current design of text codecs
        as iconv/GLib do not support enumerating available encodings.

        * GNUmakefile.am:
        * platform/ThreadGlobalData.cpp:
        (WebCore::ThreadGlobalData::ThreadGlobalData):
        (WebCore::ThreadGlobalData::~ThreadGlobalData):
        * platform/text/TextEncoding.cpp:
        (WebCore::TextEncoding::encode):
        * platform/text/TextEncodingRegistry.cpp:
        (WebCore::buildBaseTextCodecMaps):
        (WebCore::extendTextCodecMaps):
        * platform/text/gtk/TextCodecGtk.cpp: Added.
        (WebCore::):
        (WebCore::newTextCodecGtk):
        (WebCore::TextCodecGtk::isEncodingAvailable):
        (WebCore::TextCodecGtk::registerEncodingNames):
        (WebCore::TextCodecGtk::registerCodecs):
        (WebCore::TextCodecGtk::registerBaseEncodingNames):
        (WebCore::TextCodecGtk::registerBaseCodecs):
        (WebCore::TextCodecGtk::registerExtendedEncodingNames):
        (WebCore::TextCodecGtk::registerExtendedCodecs):
        (WebCore::TextCodecGtk::TextCodecGtk):
        (WebCore::TextCodecGtk::~TextCodecGtk):
        (WebCore::TextCodecGtk::releaseIConv):
        (WebCore::TextCodecGtk::createIConvDecoder):
        (WebCore::TextCodecGtk::createIConvEncoder):
        (WebCore::TextCodecGtk::decode):
        (WebCore::TextCodecGtk::encode):
        * platform/text/gtk/TextCodecGtk.h: Added.

2009-11-04  Martin Robinson  <martin.james.robinson@gmail.com>

        Reviewed by Jan Alonzo.

        [GTK] Enable DOM clipboard and drag-and-drop access
        https://bugs.webkit.org/show_bug.cgi?id=30623

        Unify redudant methods which will always return the same value.

        * platform/gtk/PasteboardGtk.cpp:
        (WebCore::Pasteboard::writeSelection):
        * platform/gtk/PasteboardHelper.h:

2009-11-04  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Jan Alonzo.

        https://bugs.webkit.org/show_bug.cgi?id=31035
        [GTK] some accessibility tests hitting assertion in debug builds

        Removes the assertions in webkit_accessible_ref_child; adds sanity checks.
        Any app or AT can attempt to ref a child at a bogus index.

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (webkit_accessible_ref_child):

2009-11-04  Benjamin Otte  <otte@gnome.org>

        Reviewed by Jan Alonzo.

        [gtk] Use gst_element_class_set_details_simple()

        Cosmetic change, just code simplification

        * platform/graphics/gtk/VideoSinkGStreamer.cpp:
        (webkit_video_sink_base_init):
2009-11-04  Kelly Norton  <knorton@google.com>

        Reviewed by Timothy Hatcher.

        Adds paint rectangle information to TimelineAgent's didPaint callback.
        https://bugs.webkit.org/show_bug.cgi?id=31087

        * inspector/InspectorTimelineAgent.cpp:
        (WebCore::InspectorTimelineAgent::willPaint):
        * inspector/InspectorTimelineAgent.h:
        * inspector/TimelineRecordFactory.cpp:
        (WebCore::TimelineRecordFactory::createPaintTimelineRecord):
        * inspector/TimelineRecordFactory.h:
        * page/FrameView.cpp:
        (WebCore::FrameView::paintContents):

2009-11-04  Jaime Yap  <jaimeyap@google.com>

        Reviewed by Timothy Hatcher.

        This patch adds API to the console object for annotating the
        inspector timeline. This allows developers to mark logical
        checkpoints in their apps and have them overlaid in the event
        record tree.

        tests updated: LayoutTests/fast/dom/Window/window-properties.html
        https://bugs.webkit.org/show_bug.cgi?id=31082


        * inspector/InspectorController.cpp:
        (WebCore::InspectorController::markTimeline):
        * inspector/InspectorController.h:
        * inspector/InspectorTimelineAgent.cpp:
        (WebCore::InspectorTimelineAgent::didMarkTimeline):
        * inspector/InspectorTimelineAgent.h:
        (WebCore::):
        * inspector/TimelineRecordFactory.cpp:
        (WebCore::TimelineRecordFactory::createMarkTimelineRecord):
        * inspector/TimelineRecordFactory.h:
        * inspector/front-end/TimelineAgent.js:
        * page/Console.cpp:
        (WebCore::Console::markTimeline):
        * page/Console.h:
        * page/Console.idl:

2009-11-03  Simon Hausmann  <hausmann@webkit.org>

        Unreviewed build fix for WebInspector with Qt build.

        Simply re-generate the Qt resource file by running
        WebKitTools/Scripts/generate-qt-inspector-resource

        * inspector/front-end/WebKit.qrc:

2009-11-02  Benjamin Poulain  <benjamin.poulain@nokia.com>

        Reviewed by Simon Hausmann.

        [Qt] Handle fonts like the other ports

        Remove FontFallbackListQt and rely on the common FontFallbackList
        to handle the fonts. FontCache and FontPlatformData have been
        updated to work with the common FontFallbackList.

        In the previous implementation, FontPlatformDataCacheKey
        was a clone of FontPlatformData with the hashing
        capabilities added in order to use it as a key in the cache's
        hashmap. FontPlatformData has been modified to handle the hashing
        function directly so the data are not copied twice in memory.

        FontFallbackList::fontDataAt() from FontFallbackListQt was a copy of
        code from FontCache::getFontData() and FontFallbackList::fontDataAt().
        The behavior is similar except currFamily->family().length() was
        not tested and the fallback fonts selector were not used.

        https://bugs.webkit.org/show_bug.cgi?id=29856

        Test: svg/text/text-font-invalid.html

        * WebCore.pro:
        * platform/graphics/qt/FontCacheQt.cpp:
        (WebCore::FontCache::platformInit):
        (WebCore::FontCache::getFontDataForCharacters):
        (WebCore::FontCache::getSimilarFontPlatformData):
        (WebCore::FontCache::getLastResortFallbackFont):
        (WebCore::FontCache::getTraitsInFamily):
        (WebCore::FontCache::createFontPlatformData):
        * platform/graphics/qt/FontFallbackListQt.cpp:
        Removed. We now use the implementation from FontFallbackList.cpp
        * platform/graphics/qt/FontPlatformData.h:
        Add hashing capabilities to be able to use the data with the FontCache.
        This was previously done in FontCacheQt.cpp
        (WebCore::FontPlatformData::FontPlatformData):
        Added a boolean to identify deleted value in the hash table.
        (WebCore::FontPlatformData::isHashTableDeletedValue):
        (WebCore::FontPlatformData::hash):
        (WebCore::FontPlatformData::operator==):
        * platform/graphics/qt/FontPlatformDataQt.cpp:
        (WebCore::FontPlatformData::FontPlatformData):

2009-11-03  Dan Bernstein  <mitz@apple.com>

        Leopard build fix

        * platform/network/mac/AuthenticationMac.mm:
        (WebCore::mac):
        (WebCore::core):

2009-11-03  Dan Bernstein  <mitz@apple.com>

        Reviewed by Alexey Proskuryakov.

        Fix an assertion failure in core(NSURLProtectionSpace *) by handling NTLM
        authentication in AuthenticationMac

        * platform/network/mac/AuthenticationMac.mm:

2009-11-03  Eric Z. Ayers  <zundel@google.com>

        Reviewed by Timothy Hatcher.

        Fixes a problem where the timeline instrumentation crashes if
        timeline profiling is enabled or disabled in the middle of an
        event dispatch.

        https://bugs.webkit.org/show_bug.cgi?id=31080

        Test: inspector/timeline-trivial.html

        * bindings/js/ScriptController.cpp:
        (WebCore::ScriptController::evaluateInWorld):
        (WebCore::ScriptController::processingUserGestureEvent):
        * inspector/InspectorTimelineAgent.cpp:
        (WebCore::InspectorTimelineAgent::didCompleteCurrentRecord):
        * page/DOMTimer.cpp:
        (WebCore::DOMTimer::fired):

2009-11-03  Dan Bernstein  <mitz@apple.com>

        Reviewed by Dave Hyatt.

        Allow a frame to go back to copy-on-scroll when it ceases being overlapped

        The code was not testing slow-scrolling frames for overlappedness, thinking the answer
        would not matter. That is not the case if the only reason for the slow-scrolling is
        being overlapped.

        * page/FrameView.cpp:
        (WebCore::FrameView::useSlowRepaintsIfNotOverlapped): Added. Returns whether there is any
        reason besides being overlapped that the frame would need to fully repaint on scroll.
        * page/FrameView.h:
        * rendering/RenderWidget.cpp:
        (WebCore::RenderWidget::paint): Use useSlowRepaintsIfNotOverlapped().

2009-11-03  Dmitry Titov  <dimich@chromium.org>

        Not reviewed, Qt build fix.

        Need to use right capitalization for include file.

        * page/Navigator.cpp:

2009-11-03  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Migrate from top bar filters to check boxes in Timeline.

        https://bugs.webkit.org/show_bug.cgi?id=31081

        * inspector/front-end/AbstractTimelinePanel.js:
        (WebInspector.AbstractTimelinePanel.prototype.showCategory):
        (WebInspector.AbstractTimelinePanel.prototype.hideCategory):
        (WebInspector.AbstractTimelinePanel.prototype.filter):
        * inspector/front-end/TimelinePanel.js:
        (WebInspector.TimelinePanel):
        (WebInspector.TimelineCategoryTreeElement.prototype.onattach):
        (WebInspector.TimelineCategoryTreeElement.prototype._onCheckboxClick):
        (WebInspector.TimelineCategoryGraph.prototype.clearChunks):
        (WebInspector.TimelineCategoryGraph.prototype.set dimmed):
        * inspector/front-end/inspector.css:

2009-11-03  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: clear overview on Clear action and panel reset.

        https://bugs.webkit.org/show_bug.cgi?id=31078

        * inspector/front-end/TimelinePanel.js:
        (WebInspector.TimelinePanel.prototype._getRecordDetails):
        (WebInspector.TimelinePanel.prototype.reset):

2009-11-03  Yaar Schnitman  <yaar@chromium.org>

        Reviewed by Dimitri Glazkov.

        Imported action and rules python files that WebCore.gyp depends on. 
        These files used to live in chromium.org and deal mostly with auto-generation
        of code by wrapping existing webkit perl scripts.

        https://bugs.webkit.org/show_bug.cgi?id=31071

        * WebCore.gyp/WebCore.gyp: Fixed paths in actions and rules.
        * WebCore.gyp/scripts/action_csspropertynames.py: Added.
        * WebCore.gyp/scripts/action_cssvaluekeywords.py: Added.
        * WebCore.gyp/scripts/action_makenames.py: Added.
        * WebCore.gyp/scripts/action_maketokenizer.py: Added.
        * WebCore.gyp/scripts/action_useragentstylesheets.py: Added.
        * WebCore.gyp/scripts/rule_binding.py: Added.
        * WebCore.gyp/scripts/rule_bison.py: Added.
        * WebCore.gyp/scripts/rule_gperf.py: Added.

2009-11-03  Bradley Green  <brg@chromium.org>

        Reviewed by Dmitry Titov.

        Implement window.navigator.registerProtocolHandler in webkit,
        https://bugs.webkit.org/b/29651

        Also implemented its sister API window.navigator.registerContentHandler.

        These methods are as described in the HTML5 specification which can be
        found here,
        http://dev.w3.org/html5/spec/Overview.html#dom-navigator-registerprotocolhandler
        http://dev.w3.org/html5/spec/Overview.html#dom-navigator-registercontenthandler

        As specified in the document, the behavior of the browser is determined
        by the current registered handler.  The state of a registered handler
        can change at any time, with the user clearing a registered handler,
        registering a different page as handler, or deferring the hander to the
        OS.  If webkit was to track the state of the currently registered
        handlers, it would need more APIs and complexity to keep in sync with
        user actions reported to webkit from the UA.  For simplicity, the state
        of protocol handlers should be kept isolated from webkit and webkit only
        notifies the UA that a page has made the call.  The UA is then
        responsible for correctly handling the registerProtocolHandler call and
        the redirects which result from registration.

        We do however follow the specification in insuring that the reserved
        schemes and mimeTypes are not passed to the UA as custom handler
        registration tests.  We also insure that the "%s" token is present as
        required by the specification.

        Updated test expectations for window.clientInformation and navigator
        objects.

        Tests: fast/dom/registerContentHandler.html
               fast/dom/registerProtocolHandler.html

        * page/Chrome.cpp:
        (WebCore::Chrome::registerProtocolHandler):
        (WebCore::Chrome::registerContentHandler):
        * page/Chrome.h:
        * page/ChromeClient.h:
        (WebCore::ChromeClient::registerProtocolHandler):
        (WebCore::ChromeClient::registerContentHandler):
        * page/Navigator.cpp:
        (WebCore::verifyCustomHandlerURL):
        (WebCore::verifyProtocolHandlerScheme):
        (WebCore::Navigator::registerProtocolHandler):
        (WebCore::verifyProtocolHandlerMimeType):
        (WebCore::Navigator::registerContentHandler):
        * page/Navigator.h:
        * page/Navigator.idl:

2009-11-03  Brady Eidson  <beidson@apple.com>

        Reviewed by Darin Adler.

        https://bugs.webkit.org/show_bug.cgi?id=31079 - Remove #include "Page.h" from Document.h

        No new tests. (No change in functionality)

        * dom/Document.cpp:
        (WebCore::Document::inspectorTimelineAgent): Moved from Document.h
        * dom/Document.h:

        Include "Page.h" directly:
        * html/HTMLVideoElement.cpp:
        * loader/RedirectScheduler.cpp:
        * page/History.cpp:
        * rendering/MediaControlElements.cpp:
        * storage/StorageAreaImpl.cpp:

2009-11-03  Keishi Hattori  <casey.hattori@gmail.com>

        Reviewed by Timothy Hatcher.

        Web Inspector: hover over JS "things" in source and see their values
        https://bugs.webkit.org/show_bug.cgi?id=30913

        * inspector/front-end/SourceFrame.js:

2009-11-03  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: update timeline content boundaries on timer.

        https://bugs.webkit.org/show_bug.cgi?id=31072

        * inspector/front-end/TimelinePanel.js:
        (WebInspector.TimelinePanel.prototype.refresh):
        (WebInspector.TimelinePanel.prototype._setWindowPosition):

2009-11-03  Dan Bernstein  <mitz@apple.com>

        Reviewed by Anders Carlsson and Beth Dakin.

        https://bugs.webkit.org/show_bug.cgi?id=31070
        Fix <rdar://problem/7194735> Crashes at RenderText::RenderText()
        Fix <rdar://problem/6937089> Crashes at RenderWidget::destroy()

        Tests: plugins/attach-during-destroy.html
               plugins/destroy-reentry.html

        These crashes were caused by plug-in code running during detach(),
        causing re-entry into RenderWidget::destroy() in one case and a call
        into attach() in the other. The fix is to prevent plug-in code from
        being called at certain unsafe times (during attach(), detach(), and
        recalcStyle()) by deferring changes to the widget hierarchy.

        * dom/Document.cpp:
        (WebCore::Document::recalcStyle): Suspend widget hierarchy updates
            during style recalculation.

        * dom/Element.cpp:
        (WebCore::Element::attach): Suspend widget hierarchy updates during
            attach().
        (WebCore::Element::detach): Suspend widget hierarchy updates during
            detach().

        * rendering/RenderWidget.cpp:
        (WebCore::widgetNewParentMap): Returns a static map of pending changes
            to the widget hierarchy.
        (WebCore::RenderWidget::suspendWidgetHierarchyUpdates): Increments the
            suspend count.
        (WebCore::RenderWidget::resumeWidgetHierarchyUpdates): Decrements the
            suspend count. If the count is going to be zero, updates the widget
            hierarchy by executing the pending changes stored in the map.
        (WebCore::moveWidgetToParentSoon): Updates the widget hierarchy
            immediately or makes or updates an entry in the map, depending on
            whether updates are suspended.
        (WebCore::RenderWidget::destroy): Removed earlier bandaid fix for
            <rdar://problem/6937089>.
        (WebCore::RenderWidget::setWidgetGeometry): Assert that widget updates
            are not suspended, because this function updates the widget’s
            bounds, which can result in arbitrary native and JavaScript code
            execution. I think this assertion is true thanks to some deferred-
            update mechanisms that have already been deployed in other places
            in the code.
        (WebCore::RenderWidget::setWidget): Call moveWidgetToParentSoon instead
            of changing the widget hierarchy directly.
        * rendering/RenderWidget.h: Declared suspendWidgetHierarchyUpdates()
            and resumeWidgetHierarchyUpdates().

2009-11-03  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: only show timeline records that contribute
        to the current window.

        https://bugs.webkit.org/show_bug.cgi?id=31069

        * inspector/front-end/TimelinePanel.js:
        (WebInspector.TimelinePanel.prototype.refresh):
        (WebInspector.TimelineGraph):
        (WebInspector.TimelineGraph.prototype.refresh):

2009-11-03  Patrick Mueller  <Patrick_Mueller@us.ibm.com>

        Reviewed by Timothy Hatcher.

        Watch expression editor should stay open after Add button was clicked
        https://bugs.webkit.org/show_bug.cgi?id=31049

        No new tests, was a regression, use existing manual test.

        * inspector/front-end/WatchExpressionsSidebarPane.js:
        (WebInspector.WatchExpressionsSection.prototype.update):
        (WebInspector.WatchExpressionsSection.prototype.addExpression):

2009-11-03  Evan Martin  <evan@chromium.org>

        Reviewed by Darin Adler.

        Fix an off-by-one in the CSS lexer that causes memory corruption in
        hard-to-trigger circumstances.

        https://bugs.webkit.org/show_bug.cgi?id=30827

        Test: fast/css/end-of-buffer-crash.html

        * css/maketokenizer: Add comments, fix off-by-one.

2009-11-02  Darin Adler  <darin@apple.com>

        Reviewed by Dan Bernstein.

        Crash due to double-destroy related to CSS run-in property
        https://bugs.webkit.org/show_bug.cgi?id=31034
        rdar://problem/7328458

        Test: fast/css/run-in-crash.html

        * rendering/RenderBlock.cpp:
        (WebCore::RenderBlock::destroy): Reorder destruction so the
        continuation is destroyed after anonymous children. See comment
        in the code for more details of why this is right.
        * rendering/RenderInline.cpp:
        (WebCore::RenderInline::destroy): Ditto.

2009-11-03  Alexander Pavlov  <apavlov@chromium.org>

        Reviewed by Pavel Feldman.

        Fix exception in ElementsPanel.js when moving pointer out of crumbs and window

        There might be no new node under mouse if the pointer is moved out of the window
        in which case we get an exception.
        https://bugs.webkit.org/show_bug.cgi?id=31061

        * inspector/front-end/ElementsPanel.js:
        (WebInspector.ElementsPanel.prototype._mouseMovedOutOfCrumbs):

2009-11-03  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Darin Adler.

        Allow custom memory allocation control for the dom directory of WebCore
        https://bugs.webkit.org/show_bug.cgi?id=31053

        Inherits the following classes from Noncopyable because these are
        instantiated by 'new' and these are no need to be copyable:

        class EventNames - 'new' call: WebCore/platform/ThreadGlobalData.cpp:73
        struct PerformTaskContext - 'new' call: WebCore/dom/Document.cpp:4581
        class EventData - 'new' call: WebCore/dom/MessagePortChannel.cpp:38
        struct NodeListsNodeData - 'new' call: WebCore/dom/NodeRareData.h:51 
        struct EventTargetData - 'new' call: WebCore/dom/NodeRareData.h:100
        class NodeRareData - 'new' call: WebCore/dom/Node.cpp:552

        Inherits QualifiedName class from FastAllocBase because it is
        instantiated by 'new' in WebCore/editing/markup.cpp:319

        * dom/Document.cpp:
        * dom/EventNames.h:
        * dom/EventTarget.h:
        * dom/MessagePortChannel.h:
        * dom/NodeRareData.h:
        * dom/QualifiedName.h:

2009-11-03  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Implement timeline summary panel.

        https://bugs.webkit.org/show_bug.cgi?id=31064

        * inspector/front-end/TimelinePanel.js:
        (WebInspector.TimelinePanel.prototype._createOverview):
        (WebInspector.TimelinePanel.prototype.refresh):
        (WebInspector.TimelineCategoryGraph):
        (WebInspector.TimelineCategoryGraph.prototype.get graphElement):
        (WebInspector.TimelineCategoryGraph.prototype.addChunk):
        (WebInspector.TimelineCategoryGraph.prototype.clearChunks):
        (WebInspector.TimelineGraph.prototype.refresh):
        * inspector/front-end/inspector.css:

2009-11-03  Alexander Pavlov  <apavlov@chromium.org>

        Reviewed by Timothy Hatcher.

        Toggle off 'Search for node' when the Inspector window is closing

        Searching for node should be toggled off when the Inspector window is closed,
        in a platform-independent manner.
        https://bugs.webkit.org/show_bug.cgi?id=31059

        * inspector/InspectorController.cpp:
        (WebCore::InspectorController::setWindowVisible):

2009-11-03  Mikhail Naganov  <mnaganov@chromium.org>

        Reviewed by Timothy Hatcher.

        Prepare for heap profiles upstreaming:
        - pass profile type id from InspectorController;
        - this makes WebInspector.CPUProfile redundant---removed;
        - support multiple profile types when populating profiles.

        https://bugs.webkit.org/show_bug.cgi?id=31052

        * inspector/InspectorController.cpp:
        (WebCore::InspectorController::createProfileHeader):
        * inspector/front-end/ProfileView.js:
        (WebInspector.CPUProfileView.profileCallback):
        (WebInspector.CPUProfileView):
        (WebInspector.CPUProfileView.prototype._sortData):
        * inspector/front-end/ProfilesPanel.js:
        (WebInspector.ProfilesPanel.prototype.addProfileHeader):
        * inspector/front-end/inspector.js:
        (WebInspector.addProfileHeader):

2009-11-03  Dan Kegel  <dank@chromium.org>

        Reviewed by Dimitri Glazkov.

        UMR in WebCore::AccessibilityRenderObject::children(); m_childrenDirty uninitialized in constructor
        https://bugs.webkit.org/show_bug.cgi?id=31063

        * accessibility/AccessibilityRenderObject.cpp:
        (WebCore::AccessibilityRenderObject::AccessibilityRenderObject):

2009-11-03  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Implement Timeline Window, wire it to the bottom timeline.

        https://bugs.webkit.org/show_bug.cgi?id=31056

        * English.lproj/localizedStrings.js:
        * inspector/front-end/AbstractTimelinePanel.js:
        (WebInspector.AbstractTimelinePanel.prototype.get items):
        (WebInspector.AbstractTimelinePanel.prototype.createInterface):
        (WebInspector.AbstractTimelinePanel.prototype.updateGraphDividersIfNeeded):
        (WebInspector.AbstractTimelinePanel.prototype._updateDividersLabelBarPosition):
        (WebInspector.AbstractTimelinePanel.prototype.invalidateAllItems):
        (WebInspector.AbstractTimelinePanel.prototype.refresh):
        (WebInspector.AbstractTimelinePanel.prototype.adjustScrollPosition):
        (WebInspector.AbstractTimelinePanel.prototype.addExtraDivider):
        (WebInspector.TimelineGrid):
        (WebInspector.TimelineGrid.prototype.get itemsGraphsElement):
        (WebInspector.TimelineGrid.prototype.updateDividers):
        (WebInspector.TimelineGrid.prototype.addExtraDivider):
        (WebInspector.TimelineGrid.prototype.setScrollAndDividerTop):
        * inspector/front-end/ResourcesPanel.js:
        (WebInspector.ResourcesPanel):
        (WebInspector.ResourcesPanel.prototype.updateGraphDividersIfNeeded):
        (WebInspector.ResourcesPanel.prototype.get _resources):
        * inspector/front-end/TimelinePanel.js:
        (WebInspector.TimelinePanel):
        (WebInspector.TimelinePanel.prototype.get categories):
        (WebInspector.TimelinePanel.prototype._formatRecord):
        (WebInspector.TimelinePanel.prototype.reset):
        (WebInspector.TimelinePanel.prototype._createOverview):
        (WebInspector.TimelinePanel.prototype.setSidebarWidth):
        (WebInspector.TimelinePanel.prototype.updateMainViewWidth):
        (WebInspector.TimelinePanel.prototype.updateGraphDividersIfNeeded):
        (WebInspector.TimelinePanel.prototype.refresh):
        (WebInspector.TimelinePanel.prototype._resizeWindow):
        (WebInspector.TimelinePanel.prototype._windowResizeDragging):
        (WebInspector.TimelinePanel.prototype._dragWindow):
        (WebInspector.TimelinePanel.prototype._windowDragging):
        (WebInspector.TimelinePanel.prototype._resizeWindowLeft):
        (WebInspector.TimelinePanel.prototype._resizeWindowRight):
        (WebInspector.TimelinePanel.prototype._setWindowPosition):
        (WebInspector.TimelinePanel.prototype._endWindowDragging):
        (WebInspector.TimelineCategoryTreeElement):
        (WebInspector.TimelineCategoryTreeElement.prototype.onattach):
        (WebInspector.TimelineCalculator.prototype.computeBarGraphPercentages):
        (WebInspector.TimelineCalculator.prototype.get minimumBoundary):
        (WebInspector.TimelineCalculator.prototype.get maximumBoundary):
        (WebInspector.TimelineCalculator.prototype.reset):
        (WebInspector.TimelineCalculator.prototype.updateBoundaries):
        (WebInspector.TimelineCalculator.prototype.formatValue):
        * inspector/front-end/inspector.css:

2009-11-03  Simon Hausmann  <hausmann@webkit.org>

        Reviewed by Tor Arne Vestbø.

        Make QWebPluginDatabase private API for now.

        https://bugs.webkit.org/show_bug.cgi?id=30775

        * WebCore.pro:

2009-11-03  Simon Hausmann  <hausmann@webkit.org>

        Reviewed by Tor Arne Vestbø.

        Extended the conversion of the WebCore ResourceRequest to the
        QNetworkRequest with a mandatory originating object argument,
        which is meant to be the QWebFrame the request belongs to.

        https://bugs.webkit.org/show_bug.cgi?id=29975

        * platform/network/qt/QNetworkReplyHandler.cpp:
        (WebCore::QNetworkReplyHandler::QNetworkReplyHandler):
        (WebCore::QNetworkReplyHandler::sendResponseIfNeeded):
        (WebCore::QNetworkReplyHandler::start):
        * platform/network/qt/ResourceRequest.h:
        * platform/network/qt/ResourceRequestQt.cpp:
        (WebCore::ResourceRequest::toNetworkRequest):

2009-11-03  Keishi Hattori  <casey.hattori@gmail.com>

        Reviewed by Pavel Feldman.

        Web Inspector: monitorEvent should be monitorEvents
        https://bugs.webkit.org/show_bug.cgi?id=31042

        * inspector/front-end/InjectedScript.js:
        (InjectedScript._ensureCommandLineAPIInstalled):

2009-11-02  Tor Arne Vestbø  <tor.arne.vestbo@nokia.com>

        Rubber-stamped by Antti Koivisto.

        [Qt] Build fix for Windows CE

        * plugins/PluginDatabase.cpp:

2009-11-02  Chris Fleizach  <cfleizach@apple.com>

        Reviewed by David Levin.

        fix accessibility webkit-style-check errors
        https://bugs.webkit.org/show_bug.cgi?id=29672

        * accessibility/AXObjectCache.cpp:
        (WebCore::AXObjectCache::getOrCreate):
        (WebCore::AXObjectCache::remove):
        (WebCore::AXObjectCache::platformGenerateAXID):
        (WebCore::AXObjectCache::removeAXID):
        * accessibility/AXObjectCache.h:
        (WebCore::AXObjectCache::enableAccessibility):
        (WebCore::AXObjectCache::enableEnhancedUserInterfaceAccessibility):
        (WebCore::AXObjectCache::accessibilityEnabled):
        (WebCore::AXObjectCache::accessibilityEnhancedUserInterfaceEnabled):
        (WebCore::AXObjectCache::isIDinUse):
        (WebCore::AXObjectCache::objectFromAXID):
        (WebCore::AXObjectCache::):
        (WebCore::AXObjectCache::handleActiveDescendantChanged):
        (WebCore::AXObjectCache::handleAriaRoleChanged):
        (WebCore::AXObjectCache::detachWrapper):
        (WebCore::AXObjectCache::attachWrapper):
        (WebCore::AXObjectCache::selectedChildrenChanged):
        (WebCore::AXObjectCache::postNotification):
        (WebCore::AXObjectCache::postPlatformNotification):
        (WebCore::AXObjectCache::handleFocusedUIElementChanged):
        (WebCore::AXObjectCache::handleScrolledToAnchor):
        * accessibility/AccessibilityARIAGrid.cpp:
        (WebCore::AccessibilityARIAGrid::cellForColumnAndRow):
        * accessibility/AccessibilityAllInOne.cpp:
        * accessibility/AccessibilityImageMapLink.cpp:
        * accessibility/AccessibilityList.h:
        (WebCore::AccessibilityList::isList):
        * accessibility/AccessibilityListBox.cpp:
        * accessibility/AccessibilityListBox.h:
        (WebCore::AccessibilityListBox::isListBox):
        * accessibility/AccessibilityListBoxOption.cpp:
        * accessibility/AccessibilityListBoxOption.h:
        (WebCore::AccessibilityListBoxOption::isListBoxOption):
        * accessibility/AccessibilityMediaControls.h:
        (WebCore::AccessibilityMediaControl::~AccessibilityMediaControl):
        (WebCore::AccessibilityMediaTimeline::~AccessibilityMediaTimeline):
        (WebCore::AccessibilityMediaTimeline::isMediaTimeline):
        (WebCore::AccessibilityMediaControlsContainer::~AccessibilityMediaControlsContainer):
        (WebCore::AccessibilityMediaControlsContainer::roleValue):
        (WebCore::AccessibilityMediaControlsContainer::accessibilityIsIgnored):
        (WebCore::AccessibilityMediaTimeDisplay::~AccessibilityMediaTimeDisplay):
        (WebCore::AccessibilityMediaTimeDisplay::roleValue):
        * accessibility/AccessibilityObject.cpp:
        (WebCore::AccessibilityObject::parentObjectUnignored):
        (WebCore::AccessibilityObject::rightLineVisiblePositionRange):
        (WebCore::replacedNodeNeedsCharacter):
        (WebCore::AccessibilityObject::stringForVisiblePositionRange):
        (WebCore::AccessibilityObject::lengthForVisiblePositionRange):
        (WebCore::AccessibilityObject::actionVerb):
        * accessibility/AccessibilityObject.h:
        (WebCore::PlainTextRange::isNull):
        (WebCore::AccessibilityObject::isAccessibilityRenderObject):
        (WebCore::AccessibilityObject::isAnchor):
        (WebCore::AccessibilityObject::isAttachment):
        (WebCore::AccessibilityObject::isHeading):
        (WebCore::AccessibilityObject::isLink):
        (WebCore::AccessibilityObject::isImage):
        (WebCore::AccessibilityObject::isNativeImage):
        (WebCore::AccessibilityObject::isImageButton):
        (WebCore::AccessibilityObject::isPasswordField):
        (WebCore::AccessibilityObject::isTextControl):
        (WebCore::AccessibilityObject::isNativeTextControl):
        (WebCore::AccessibilityObject::isWebArea):
        (WebCore::AccessibilityObject::isCheckboxOrRadio):
        (WebCore::AccessibilityObject::isListBox):
        (WebCore::AccessibilityObject::isFileUploadButton):
        (WebCore::AccessibilityObject::isProgressIndicator):
        (WebCore::AccessibilityObject::isSlider):
        (WebCore::AccessibilityObject::isControl):
        (WebCore::AccessibilityObject::isList):
        (WebCore::AccessibilityObject::isDataTable):
        (WebCore::AccessibilityObject::isTableRow):
        (WebCore::AccessibilityObject::isTableColumn):
        (WebCore::AccessibilityObject::isTableCell):
        (WebCore::AccessibilityObject::isFieldset):
        (WebCore::AccessibilityObject::isGroup):
        (WebCore::AccessibilityObject::isChecked):
        (WebCore::AccessibilityObject::isEnabled):
        (WebCore::AccessibilityObject::isSelected):
        (WebCore::AccessibilityObject::isFocused):
        (WebCore::AccessibilityObject::isHovered):
        (WebCore::AccessibilityObject::isIndeterminate):
        (WebCore::AccessibilityObject::isLoaded):
        (WebCore::AccessibilityObject::isMultiSelect):
        (WebCore::AccessibilityObject::isOffScreen):
        (WebCore::AccessibilityObject::isPressed):
        (WebCore::AccessibilityObject::isReadOnly):
        (WebCore::AccessibilityObject::isVisited):
        (WebCore::AccessibilityObject::isRequired):
        (WebCore::AccessibilityObject::canSetFocusAttribute):
        (WebCore::AccessibilityObject::canSetTextRangeAttributes):
        (WebCore::AccessibilityObject::canSetValueAttribute):
        (WebCore::AccessibilityObject::hasIntValue):
        (WebCore::AccessibilityObject::accessibilityShouldUseUniqueId):
        (WebCore::AccessibilityObject::accessibilityIsIgnored):
        * accessibility/AccessibilityRenderObject.cpp:
        (WebCore::AccessibilityRenderObject::parentObjectIfExists):
        (WebCore::AccessibilityRenderObject::parentObject):
        (WebCore::AccessibilityRenderObject::isMenuRelated):
        (WebCore::AccessibilityRenderObject::accessibilityDescription):
        (WebCore::AccessibilityRenderObject::accessibilityIsIgnored):
        (WebCore::AccessibilityRenderObject::isFocused):
        (WebCore::AccessibilityRenderObject::visiblePositionRangeForLine):
        (WebCore::AccessibilityRenderObject::setSelectedVisiblePositionRange):
        (WebCore::AccessibilityRenderObject::doAXRangeForLine):
        (WebCore::AccessibilityRenderObject::doAXStringForRange):
        (WebCore::AccessibilityRenderObject::accessibilityImageMapHitTest):
        (WebCore::AccessibilityRenderObject::determineAriaRoleAttribute):
        (WebCore::AccessibilityRenderObject::determineAccessibilityRole):
        (WebCore::AccessibilityRenderObject::isPresentationalChildOfAriaRole):
        (WebCore::AccessibilityRenderObject::canSetFocusAttribute):
        (WebCore::AccessibilityRenderObject::canHaveChildren):
        (WebCore::AccessibilityRenderObject::actionVerb):
        (WebCore::shouldReturnTagNameAsRoleForMSAA):
        * accessibility/AccessibilityRenderObject.h:
        (WebCore::AccessibilityRenderObject::isAccessibilityRenderObject):
        * accessibility/AccessibilitySlider.cpp:
        (WebCore::AccessibilitySlider::orientation):
        * accessibility/AccessibilitySlider.h:
        (WebCore::AccessibilitySlider::~AccessibilitySlider):
        (WebCore::AccessibilitySlider::roleValue):
        (WebCore::AccessibilitySlider::accessibilityIsIgnored):
        (WebCore::AccessibilitySlider::isSlider):
        (WebCore::AccessibilitySlider::canSetValueAttribute):
        (WebCore::AccessibilitySliderThumb::~AccessibilitySliderThumb):
        (WebCore::AccessibilitySliderThumb::roleValue):
        (WebCore::AccessibilitySliderThumb::accessibilityIsIgnored):
        (WebCore::AccessibilitySliderThumb::setParentObject):
        (WebCore::AccessibilitySliderThumb::parentObject):
        * accessibility/AccessibilityTable.cpp:
        (WebCore::AccessibilityTable::isTableExposableThroughAccessibility):
        * accessibility/AccessibilityTableColumn.cpp:
        * accessibility/AccessibilityTableHeaderContainer.cpp:
        (WebCore::AccessibilityTableHeaderContainer::addChildren):
        * accessibility/AccessibilityTableRow.cpp:
        * accessibility/mac/AccessibilityObjectWrapper.h:

2009-11-02  Darin Fisher  <darin@chromium.org>

        Fixing JSC build bustage.

        * bindings/js/ScriptController.cpp: Added missing #include

2009-10-30  Darin Fisher  <darin@chromium.org>

        Reviewed by Adam Barth.

        Give the FrameLoaderClient the ability to override Settings::isJavaScriptEnabled.
        https://bugs.webkit.org/show_bug.cgi?id=30967

        * bindings/js/ScriptController.cpp:
        (WebCore::ScriptController::isEnabled):
        * bindings/v8/ScriptController.cpp:
        (WebCore::ScriptController::isEnabled):
        * bindings/v8/V8Proxy.cpp: Move implementation of isEnabled to ScriptController
        * bindings/v8/V8Proxy.h: Ditto
        * loader/FrameLoaderClient.h:
        (WebCore::FrameLoaderClient::allowJavaScript):
        * platform/chromium/ChromiumBridge.h: Delete uiResourceProtocol function

2009-11-02  Brady Eidson  <beidson@apple.com>

        Rubberstamped by Mark Rowe.

        Fix a typo in Mark's last commit.

        * loader/archive/ArchiveFactory.cpp:
        (WebCore::archiveMIMETypes):

2009-11-02  Mark Rowe  <mrowe@apple.com>

        Rubber-stamped by Brady Eidson.

        Re-enable support for web archives on Windows.  It was mistakenly disabled in r50438.

        * loader/archive/ArchiveFactory.cpp:
        (WebCore::archiveMIMETypes):

2009-11-02  Laszlo Gombos  <laszlo.1.gombos@nokia.com>

        Reviewed by Darin Adler.

        PLATFORM(CF) should be set when building for Qt on Darwin
        https://bugs.webkit.org/show_bug.cgi?id=23671

        * WebCore.pro: Add SharedBufferCF.cpp and SmartReplaceCF.cpp
        to the Darwin build.
        * loader/archive/ArchiveFactory.cpp: Change the support for 
        legacy WebArchive from all CF platforms to Mac and Chromium 
        CF platforms.
        (WebCore::archiveMIMETypes):
        * platform/text/AtomicString.h: Remove PLATFORM(QT) &&
        PLATFORM(DARWIN) test as it is redundant now.
        * platform/text/PlatformString.h: Ditto.
        * platform/text/StringImpl.h: Ditto.
        * platform/text/cf/StringCF.cpp: Ditto.
        * platform/text/cf/StringImplCF.cpp: Ditto.

2009-11-02  Adam Barth  <abarth@webkit.org>

        Reviewed by David Levin.

        [Chromium] Actually declare getPluginMimeTypeFromExtension in a header.
        https://bugs.webkit.org/show_bug.cgi?id=30985

        Our current code does not conform to our style guide.

        * WebCore.gyp/WebCore.gyp:
        * WebCore.gypi:
        * platform/chromium/MIMETypeRegistryChromium.cpp:
        * plugins/chromium/PluginDataChromium.cpp:
        * plugins/chromium/PluginDataChromium.h: Added.

2009-11-02  Adele Peterson  <adele@apple.com>

        Reviewed by Darin Adler.

        Fix for <rdar://problem/7038305> REGRESSION (Safari 4.0.2 - ToT): After navigating back to a known phishy page, the "Ignore warning" button appears highlighted (along with the "Go Back" button)

        This bug is timing dependent, and not always reproducible.  I could not think of a way to add a 
        layout test that would demonstrate the problem and fix.

        * platform/mac/ThemeMac.mm:
        (WebCore::checkbox): Update style.
        (WebCore::paintCheckbox): ditto.
        (WebCore::radio): ditto.
        (WebCore::paintRadio): ditto.
        (WebCore::setupButtonCell): Added convenience method.
        (WebCore::button): Use a separate NSButtonCell for defaultButtons and regular buttons.
        (WebCore::paintButton): Don't check for the key window here.  Consider that when deciding if the button should have the default style in RenderTheme.
        * rendering/RenderTheme.cpp: (WebCore::RenderTheme::isDefault): Only consider a button to be default if the page is active.  This fixes 
        a problem I noticed where the button would flicker crazily if the page with the default button was in the background.

2009-11-02  Dan Bernstein  <mitz@apple.com>

        Reviewed by Anders Carlsson.

        Minor RenderWidget clean-up in preparation for deferring widget tree
        mutation when it is not safe.

        * rendering/RenderWidget.cpp:
        (WebCore::RenderWidget::RenderWidget): Initialize m_refCount to 1
        instead of calling ref().
        (WebCore::RenderWidget::destroy): Call setWidget(0) instead of
        repeating what it does.
        (WebCore::RenderWidget::setWidgetGeometry): Now returns a boolean
        indicating whether the bounds have changed.
        (WebCore::RenderWidget::setWidget): Replaced all-encompassing if
        statement with an early return.
        (WebCore::RenderWidget::updateWidgetPosition): Call setWidgetGeometry().
        * rendering/RenderWidget.h:

2009-11-02  Dumitru Daniliuc  <dumi@chromium.org>

        Reviewed by Dimitri Glazkov.

        Adding Chromium's DatabaseTracker and SQLTransactionClient
        implementations.

        https://bugs.webkit.org/show_bug.cgi?id=30701

        * storage/chromium: Added.
        * storage/chromium/DatabaseObserver.h: Added.
        * storage/chromium/DatabaseTrackerChromium.cpp: Added.
        * storage/chromium/QuotaTracker.cpp: Added.
        * storage/chromium/QuotaTracker.h: Added.
        * storage/chromium/SQLTransactionClientChromium.cpp: Added.

2009-11-02  Enrica Casucci  <enrica@apple.com>

        Reviewed by Adele Peterson and Dan Bernstein.

        Safari crashes when calling execCommand on formatted html in special case
        <rdar://problem/7318656>
        https://bugs.webkit.org/show_bug.cgi?id=31023

        Test: editing/execCommand/align-in-span.html

        * rendering/RenderObject.cpp:
        (WebCore::RenderObject::containingBlock): Modified comment on containingBlock returning NULL.
        * rendering/RenderText.cpp:
        (WebCore::RenderText::setSelectionState): Added check for NULL return from containingBlock,
        since it is possible when dealing with orphaned trees.

2009-11-02  Chris Marrin  <cmarrin@apple.com>

        Reviewed by Oliver Hunt.

        Exception checks were being too aggressive
        https://bugs.webkit.org/show_bug.cgi?id=31005

        Several calls in CanvasRenderingContext3D are allowed to
        have a null value passed, which indicated that the 
        object is being unbound. Handle this case and the corresponding
        null handling in GraphicsContext3DMac.

        * html/canvas/CanvasRenderingContext3D.cpp:
        (WebCore::CanvasRenderingContext3D::bindBuffer):
        (WebCore::CanvasRenderingContext3D::bindFramebuffer):
        (WebCore::CanvasRenderingContext3D::bindRenderbuffer):
        (WebCore::CanvasRenderingContext3D::bindTexture):
        (WebCore::CanvasRenderingContext3D::framebufferRenderbuffer):
        (WebCore::CanvasRenderingContext3D::framebufferTexture2D):
        * platform/graphics/mac/GraphicsContext3DMac.cpp:
        (WebCore::GraphicsContext3D::framebufferRenderbuffer):
        (WebCore::GraphicsContext3D::framebufferTexture2D):

2009-11-02  Patrick Mueller  <Patrick_Mueller@us.ibm.com>

        Reviewed by Timothy Hatcher.

        Each JS execution in console adds extra item into "scripts" combo
        https://bugs.webkit.org/show_bug.cgi?id=30212

        Added manual test

        * inspector/front-end/ScriptsPanel.js:
        (WebInspector.ScriptsPanel.prototype._showScriptOrResource):
        * manual-tests/inspector/hidden-evals.html: Added.

2009-11-02  Kelly Norton  <knorton@google.com>

        Reviewed by Timothy Hatcher.

        Adds a missed case for InspectorTimeline, DOMWindow dispatch of DOM events.
        https://bugs.webkit.org/show_bug.cgi?id=31030

        * dom/Node.cpp:
        (WebCore::eventHasListeners): Checks DOMWindow for listeners.
        (WebCore::Node::dispatchGenericEvent):

2009-11-02  Dmitry Titov  <dimich@chromium.org>

        Reviewed by David Levin.

        Remove threadsafe refcounting from tasks used with WTF::MessageQueue.
        https://bugs.webkit.org/show_bug.cgi?id=30612

        No new tests since no new functionality. Storage, MessagePorts and Workers tests cover this.

        There are a lot of files but most changes are simply replace RefPtr and PassRefPtr with
        OwnPtr and PassOwnPtr when dealing with Tasks.

        ScriptExecutionContext::Task, DatabaseTask and WorkerRunLoop::Task are no longer
        threadsafe refcounted, but simply Noncopyable.

        * dom/Document.cpp:
        (WebCore::ScriptExecutionContextTaskTimer::ScriptExecutionContextTaskTimer):
        (WebCore::PerformTaskContext::PerformTaskContext):
        (WebCore::Document::postTask):
        * dom/Document.h:
        * dom/ScriptExecutionContext.cpp:
        (WebCore::ProcessMessagesSoonTask::create):
        * dom/ScriptExecutionContext.h:
        * dom/default/PlatformMessagePortChannel.cpp:
        (WebCore::PlatformMessagePortChannel::tryGetMessageFromRemote):
        * dom/default/PlatformMessagePortChannel.h:
        (WebCore::PlatformMessagePortChannel::MessagePortQueue::tryGetMessage):
        (WebCore::PlatformMessagePortChannel::MessagePortQueue::appendAndCheckEmpty):
        * loader/FrameLoader.cpp:
        (WebCore::HashChangeEventTask::create):
        * loader/appcache/ApplicationCacheGroup.cpp:
        (WebCore::CallCacheListenerTask::create):
        * storage/Database.cpp:
        (WebCore::Database::openAndVerifyVersion):
        (WebCore::Database::markAsDeletedAndClose):
        (WebCore::Database::scheduleTransaction):
        (WebCore::Database::scheduleTransactionStep):
        (WebCore::Database::tableNames):
        * storage/DatabaseTask.h:
        (WebCore::DatabaseOpenTask::create):
        (WebCore::DatabaseCloseTask::create):
        (WebCore::DatabaseTransactionTask::create):
        (WebCore::DatabaseTableNamesTask::create):
        * storage/DatabaseThread.cpp:
        (WebCore::DatabaseThread::databaseThread):
        (WebCore::DatabaseThread::scheduleTask):
        (WebCore::DatabaseThread::scheduleImmediateTask):
        (WebCore::SameDatabasePredicate::operator()):
        * storage/DatabaseThread.h:
        * storage/LocalStorageTask.h:
        (WebCore::LocalStorageTask::createImport):
        (WebCore::LocalStorageTask::createSync):
        (WebCore::LocalStorageTask::createTerminate):
        * storage/LocalStorageThread.cpp:
        (WebCore::LocalStorageThread::localStorageThread):
        * storage/LocalStorageThread.h:
        * websockets/WebSocket.cpp:
        (WebCore::ProcessWebSocketEventTask::create):
        * workers/DefaultSharedWorkerRepository.cpp:
        (WebCore::SharedWorkerProxy::postTaskToLoader):
        (WebCore::SharedWorkerProxy::postTaskForModeToWorkerContext):
        (WebCore::SharedWorkerConnectTask::create):
        * workers/GenericWorkerTask.h:
        (WebCore::GenericWorkerTask1::create):
        (WebCore::GenericWorkerTask2::create):
        (WebCore::GenericWorkerTask3::create):
        (WebCore::GenericWorkerTask4::create):
        (WebCore::GenericWorkerTask5::create):
        (WebCore::GenericWorkerTask6::create):
        (WebCore::GenericWorkerTask7::create):
        (WebCore::GenericWorkerTask8::create):
        (WebCore::createCallbackTask):
        * workers/WorkerContext.cpp:
        (WebCore::WorkerContext::postTask):
        * workers/WorkerContext.h:
        * workers/WorkerLoaderProxy.h:
        * workers/WorkerMessagingProxy.cpp:
        (WebCore::MessageWorkerContextTask::create):
        (WebCore::MessageWorkerTask::create):
        (WebCore::WorkerExceptionTask::create):
        (WebCore::WorkerContextDestroyedTask::create):
        (WebCore::WorkerTerminateTask::create):
        (WebCore::WorkerThreadActivityReportTask::create):
        (WebCore::WorkerMessagingProxy::postTaskForModeToWorkerContext):
        (WebCore::WorkerMessagingProxy::postTaskToLoader):
        (WebCore::WorkerMessagingProxy::workerThreadCreated):
        * workers/WorkerMessagingProxy.h:
        * workers/WorkerRunLoop.cpp:
        (WebCore::ModePredicate::operator()):
        (WebCore::WorkerRunLoop::runInMode):
        (WebCore::WorkerRunLoop::postTask):
        (WebCore::WorkerRunLoop::postTaskForMode):
        (WebCore::WorkerRunLoop::Task::create):
        (WebCore::WorkerRunLoop::Task::performTask):
        (WebCore::WorkerRunLoop::Task::Task):
        * workers/WorkerRunLoop.h:
        (WebCore::WorkerRunLoop::Task::~Task):
        (WebCore::WorkerRunLoop::Task::mode):

2009-11-02  Philippe Normand  <pnormand@igalia.com>

        Reviewed by Jan Alonzo.

        [GTK] Failing media/video-played-reset.html
        https://bugs.webkit.org/show_bug.cgi?id=30589

        new m_seekTime attribute to keep track of the seek position

        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.cpp:
        (WebCore::MediaPlayerPrivate::currentTime):
        (WebCore::MediaPlayerPrivate::seek):
        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.h:

2009-11-02  Xan Lopez  <xlopez@igalia.com>

        Reviewed by Jan Alonzo.

        [GTK] Remove Referer when redirecting to non-secure site
        https://bugs.webkit.org/show_bug.cgi?id=31021

        Remove referer from HTTP headers when redirecting to a non-secure
        site.

        * platform/network/soup/ResourceHandleSoup.cpp:
        (WebCore::restartedCallback):

2009-11-02  Alexey Proskuryakov  <ap@apple.com>

        Reviewed by Dan Bernstein.

        https://bugs.webkit.org/show_bug.cgi?id=18539
        multipart/form-data not being parsed correctly on server due to '+' in boundary string

        No test - the characters that the boundary is made of are not deterministic.

        * platform/network/FormDataBuilder.cpp: (WebCore::FormDataBuilder::generateUniqueBoundaryString):
        Don't ever put a '+' in boundary string, either. Removed a FIXME to bring '/' back once
        GMail is fixed - I don't think we'll ever want to allow non-alphanumeric characters, as
        they cause problems on many web sites.

2009-10-30  Alexey Proskuryakov  <ap@apple.com>

        Reviewed by Darin Adler.

        https://bugs.webkit.org/show_bug.cgi?id=30969
        A no-prefix XPath node test should not match no-namespace elements in HTML document

        Test: fast/xpath/null-namespace-in-html.html

        * xml/XPathStep.cpp: (WebCore::XPath::nodeMatchesBasicTest): Special case non-HTML elements
        in HTML documents (as these are the ones that can have null namespace).

2009-11-02  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: [REGRESSION] No timeline marks on resources panel.

        https://bugs.webkit.org/show_bug.cgi?id=31013

        * inspector/front-end/AbstractTimelinePanel.js:
        (WebInspector.AbstractTimelinePanel.prototype.updateGraphDividersIfNeeded):

2009-11-02  David Levin  <levin@chromium.org>

        Reviewed by Dan Bernstein.

        Possible crash in RenderSlider::layout.
        https://bugs.webkit.org/show_bug.cgi?id=31016

        Fix out of place line of code.

        Test: scrollbars/overflow-scrollbar-combinations.html
        This crash only seems to repro when WebKit draws the play controls,
        so the crash repros in chromium running this test but not WebKit
        nightlies which use QuickTime to draw the controls.

        * rendering/RenderSlider.cpp:
        (WebCore::RenderSlider::layout):

2009-11-02  Jocelyn Turcotte  <jocelyn.turcotte@nokia.com>

        Reviewed by Tor Arne Vestbø.

        [Qt] Fix Qt build on Windows.
        https://bugs.webkit.org/show_bug.cgi?id=30905

        * WebCore.pro:
        * platform/graphics/BitmapImage.h:
        * platform/graphics/qt/ImageQt.cpp:
        (WebCore::BitmapImage::BitmapImage):
        (WebCore::BitmapImage::create):

2009-11-02  Jedrzej Nowacki  <jedrzej.nowacki@nokia.com>

        Reviewed by Adam Barth.

        QWebView crash fix.

        The QWebView should not crash if the stop() method is called from
        a function triggered by the loadProgress signal.

        A null pointer protection was added in the ProgressTracker::incrementProgress.

        New autotest was created.

        https://bugs.webkit.org/show_bug.cgi?id=29425

        * loader/ProgressTracker.cpp:
        (WebCore::ProgressTracker::incrementProgress):

2009-11-02  Mikhail Naganov  <mnaganov@chromium.org>

        Reviewed by Pavel Feldman.

        Fix a leftover from profiles panel generalization.

        https://bugs.webkit.org/show_bug.cgi?id=31010

        * inspector/front-end/ProfilesPanel.js:
        (WebInspector.ProfilesPanel.prototype.get searchableViews):

2009-11-02  Kai Koehne  <kai.koehne@nokia.com>

        Reviewed by Holger Freyther.

        Remove implementation of ImageDecocerQt::clearFrameBufferCache.
        The implementation was buggy, and will visually break repeating
        animations anyway.

        https://bugs.webkit.org/show_bug.cgi?id=31009

        * platform/graphics/qt/ImageDecoderQt.cpp:
        (WebCore::ImageDecoderQt::clearFrameBufferCache):

2009-11-02  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Jan Alonzo.

        https://bugs.webkit.org/show_bug.cgi?id=30964
        [Gtk] Implemment AtkDocument

        Provides access to the reported content language.

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (webkit_accessible_document_get_locale):

2009-11-02  Keishi Hattori  <casey.hattori@gmail.com>

        Reviewed by Timothy Hatcher.

        Web Inspector: Rewrite CSSSourceSyntaxHighlighter so it shares more code
        https://bugs.webkit.org/show_bug.cgi?id=30907

        Test: inspector/css-syntax-highlight.html

        * inspector/front-end/ElementsTreeOutline.js:
        * inspector/front-end/SourceFrame.js:
        (WebInspector.SourceFrame.prototype.syntaxHighlightCSS):
        (WebInspector.SourceSyntaxHighlighter):
        (WebInspector.SourceSyntaxHighlighter.prototype.process.processChunk):
        (WebInspector.SourceSyntaxHighlighter.prototype.process.moveToNextLine):
        (WebInspector.SourceSyntaxHighlighter.prototype.process):
        (WebInspector.SourceSyntaxHighlighter.prototype.lex):
        (WebInspector.SourceSyntaxHighlighter.prototype.appendNonToken):
        (WebInspector.SourceSyntaxHighlighter.prototype.syntaxHighlightNode):
        (WebInspector.CSSSourceSyntaxHighlighter):
        * inspector/front-end/inspectorSyntaxHighlight.css:

2009-11-02  Chris Fleizach  <cfleizach@apple.com>

        Reviewed by Beth Dakin.

        Support ARIA "tab" roles
        https://bugs.webkit.org/show_bug.cgi?id=30842

        Implement support for ARIA "tab", "tabpanel" and "tablist".
        As a consequence, we also needed to implement aria-selected
        and aria-controls.

        Tests: accessibility/aria-controls-with-tabs.html
               accessibility/aria-tab-roles.html

        * accessibility/AXObjectCache.cpp:
        * accessibility/AccessibilityObject.h:
        * accessibility/AccessibilityRenderObject.cpp:
        * accessibility/AccessibilityRenderObject.h:
        * accessibility/mac/AccessibilityObjectWrapper.mm:
        * html/HTMLAttributeNames.in:

2009-10-27  Stephen White  <senorblanco@chromium.org>

        Reviewed by Dmitry Titov.

        This is the WebKit-side change needed to fix canvas.getImageData() for
        Chromium.  The unpremultiply code in Skia assumes that unpremultiplied
        values should be rounded, while CG does not.  In addition, the fixed
        point inversion used by Skia introduces slight inaccuracies that make
        us fail this test.  This change brings Chromium in line with
        the CG path.
        https://bugs.webkit.org/show_bug.cgi?id=30825

        Covered by LayoutTests/fast/canvas/canvas-getImageData.html

        * platform/graphics/skia/ImageBufferSkia.cpp:
        (WebCore::getImageData):

2009-11-01  Kelly Norton  <knorton@google.com>

        Reviewed by Timothy Hatcher.

        Adds window event dispatches to InspectorTimelineAgent.
        https://bugs.webkit.org/show_bug.cgi?id=31002

        * English.lproj/localizedStrings.js:
        * dom/Node.cpp: Updated call site to willDispatchEvent and didDispatchEvent.
        (WebCore::Node::dispatchGenericEvent):
        * inspector/InspectorTimelineAgent.cpp:
        (WebCore::InspectorTimelineAgent::willDispatchEvent): Renamed.
        (WebCore::InspectorTimelineAgent::didDispatchEvent): Renamed.
        * inspector/InspectorTimelineAgent.h:
        (WebCore::):
        * inspector/TimelineRecordFactory.cpp:
        (WebCore::TimelineRecordFactory::createEventDispatchRecord): Renamed.
        * inspector/TimelineRecordFactory.h:
        * inspector/front-end/TimelineAgent.js:
        * inspector/front-end/TimelinePanel.js:
        (WebInspector.TimelinePanel.prototype._formatRecord):
        (WebInspector.TimelinePanel.prototype._getRecordDetails):
        * page/DOMWindow.cpp:
        (WebCore::DOMWindow::dispatchEvent):

2009-11-01  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Convert script tag event into a more generic
        script eval event in timeline.

        https://bugs.webkit.org/show_bug.cgi?id=30999

        * bindings/js/ScriptController.cpp:
        (WebCore::ScriptController::evaluateInWorld):
        * bindings/v8/V8Proxy.cpp:
        (WebCore::V8Proxy::evaluate):
        * html/HTMLTokenizer.cpp:
        (WebCore::HTMLTokenizer::scriptExecution):
        * inspector/InspectorTimelineAgent.cpp:
        (WebCore::InspectorTimelineAgent::willEvaluateScript):
        (WebCore::InspectorTimelineAgent::didEvaluateScript):
        * inspector/InspectorTimelineAgent.h:
        (WebCore::):
        * inspector/TimelineRecordFactory.cpp:
        (WebCore::TimelineRecordFactory::createEvaluateScriptTimelineRecord):
        * inspector/TimelineRecordFactory.h:
        * inspector/front-end/TimelineAgent.js:
        * inspector/front-end/TimelinePanel.js:
        (WebInspector.TimelinePanel.prototype._formatRecord):
        (WebInspector.TimelinePanel.prototype._getRecordDetails):

2009-11-01  Brian Weinstein  <bweinstein@apple.com>

        Rubber-stamped by Mark Rowe.

        Fix for loop to use an size_t instead of unsigned and some spacing
        style fixes.

        * dom/Node.cpp:
        (WebCore::eventHasListeners):

2009-11-01  Kelly Norton  <knorton@google.com>

        Reviewed by Timothy Hatcher.

        Does not send DOM dispatches to the InspectorTimelineAgent if there
        are no event listeners.
        https://bugs.webkit.org/show_bug.cgi?id=30995

        * dom/Node.cpp:
        (WebCore::eventHasListeners):
        (WebCore::Node::dispatchGenericEvent):
        * xml/XMLHttpRequest.cpp:
        (WebCore::XMLHttpRequest::callReadyStateChangeListener):

2009-11-01  Roland Steiner  <rolandsteiner@chromium.org>

        No review (build fix).

        Add missing files for Ruby implementation to WebCore.vcproj
        (Fix build break after 50397)
        https://bugs.webkit.org/show_bug.cgi?id=31001

        No new tests. (No functional change)

        * WebCore.vcproj/WebCore.vcproj:

2009-11-02  Roland Steiner  <rolandsteiner@chromium.org>

        Reviewed by Dave Hyatt.

        Bug 28420 -  Implement HTML5 <ruby> rendering
        (https://bugs.webkit.org/show_bug.cgi?id=28420)

        First rudimentary implementation of HTML5 ruby rendering support.

        Following the HTML 5 spec, the box object model for a <ruby> element allows several runs of ruby
        bases with their respective ruby texts looks as follows:

        1 RenderRuby object, corresponding to the whole <ruby> HTML element
             1+ RenderRubyRun (anonymous)
                 0 or 1 RenderRubyText - shuffled to the front in order to re-use existing block layouting
                     0-n inline object(s)
                 0 or 1 RenderRubyBase - contains the inline objects that make up the ruby base
                     1-n inline object(s)

        Note: <rp> elements are defined as having 'display:none' and thus normally are not assigned a renderer.
        
        New layout tests will be committed in a follow-up patch under fast/ruby.

        Makefiles, etc.
        * GNUmakefile.am:
        * WebCore.gypi:
        * WebCore.pro:
        * WebCore.xcodeproj/project.pbxproj:

        CSS
        * css/html.css: Added <ruby> and <rt>

        Existing render files:
        * rendering/RenderBlock.cpp: make moveChild a member function moveChildTo
        (WebCore::RenderBlock::moveChildTo):
        (WebCore::RenderBlock::makeChildrenNonInline):
        (WebCore::RenderBlock::removeChild):
        * rendering/RenderBlock.h:
        * rendering/RenderObject.cpp:
        (WebCore::RenderObject::createObject): instantiate ruby renderers based on element name
        * rendering/RenderObject.h: add query methods for ruby renderers
        (WebCore::RenderObject::isRuby):
        (WebCore::RenderObject::isRubyBase):
        (WebCore::RenderObject::isRubyRun):
        (WebCore::RenderObject::isRubyText):

        New ruby renderers:
        * rendering/RenderRuby.cpp: Added.
        (WebCore::lastRubyRun):
        (WebCore::findRubyRunParent):
        (WebCore::RenderRubyAsInline::RenderRubyAsInline):
        (WebCore::RenderRubyAsInline::~RenderRubyAsInline):
        (WebCore::RenderRubyAsInline::isChildAllowed):
        (WebCore::RenderRubyAsInline::addChild):
        (WebCore::RenderRubyAsInline::removeChild):
        (WebCore::RenderRubyAsBlock::RenderRubyAsBlock):
        (WebCore::RenderRubyAsBlock::~RenderRubyAsBlock):
        (WebCore::RenderRubyAsBlock::isChildAllowed):
        (WebCore::RenderRubyAsBlock::addChild):
        (WebCore::RenderRubyAsBlock::removeChild):
        * rendering/RenderRuby.h: Added.
        (WebCore::RenderRubyAsInline::renderName):
        (WebCore::RenderRubyAsInline::isRuby):
        (WebCore::RenderRubyAsBlock::renderName):
        (WebCore::RenderRubyAsBlock::isRuby):
        * rendering/RenderRubyBase.cpp: Added.
        (WebCore::RenderRubyBase::RenderRubyBase):
        (WebCore::RenderRubyBase::~RenderRubyBase):
        (WebCore::RenderRubyBase::isChildAllowed):
        (WebCore::RenderRubyBase::splitToLeft):
        (WebCore::RenderRubyBase::mergeWithRight):
        * rendering/RenderRubyBase.h: Added.
        (WebCore::RenderRubyBase::renderName):
        (WebCore::RenderRubyBase::isRubyBase):
        * rendering/RenderRubyRun.cpp: Added.
        (WebCore::RenderRubyRun::RenderRubyRun):
        (WebCore::RenderRubyRun::~RenderRubyRun):
        (WebCore::RenderRubyRun::hasRubyText):
        (WebCore::RenderRubyRun::hasRubyBase):
        (WebCore::RenderRubyRun::isEmpty):
        (WebCore::RenderRubyRun::rubyText):
        (WebCore::RenderRubyRun::rubyBase):
        (WebCore::RenderRubyRun::rubyBaseSafe):
        (WebCore::RenderRubyRun::firstLineBlock):
        (WebCore::RenderRubyRun::updateFirstLetter):
        (WebCore::RenderRubyRun::isChildAllowed):
        (WebCore::RenderRubyRun::addChild):
        (WebCore::RenderRubyRun::removeChild):
        (WebCore::RenderRubyRun::createRubyBase):
        (WebCore::RenderRubyRun::staticCreateRubyRun):
        * rendering/RenderRubyRun.h: Added.
        (WebCore::RenderRubyRun::renderName):
        (WebCore::RenderRubyRun::isRubyRun):
        * rendering/RenderRubyText.cpp: Added.
        (WebCore::RenderRubyText::RenderRubyText):
        (WebCore::RenderRubyText::~RenderRubyText):
        (WebCore::RenderRubyText::isChildAllowed):
        * rendering/RenderRubyText.h: Added.
        (WebCore::RenderRubyText::renderName):
        (WebCore::RenderRubyText::isRubyText):

2009-11-01  Alexey Proskuryakov  <ap@apple.com>

        Reviewed by Dan Bernstein.

        https://bugs.webkit.org/show_bug.cgi?id=30992
        Node.isDefaultNamespace doesn't convert empty strings to null

        Test: fast/dom/Node/default-namespace-empty-argument.html

        * dom/Node.cpp: (WebCore::Node::isDefaultNamespace): Per DOM 3 Core, treat empty input
        as null.

2009-11-01  Yael Aharon  <yael.aharon@nokia.com>

        Reviewed by Darin Adler.

        Don't add '/' to the URL path if the it does not include '/' after the protocol component
        https://bugs.webkit.org/show_bug.cgi?id=30971

        Match IE8 behaviour, that does not add '/' if there is none after the protocol component.

        * platform/KURL.cpp:
        (WebCore::KURL::parse):

2009-10-31  Oliver Hunt  <oliver@apple.com>

        Reviewed by Darin Adler.

        Fix layering violations in GraphicsContext3D
        https://bugs.webkit.org/show_bug.cgi?id=30986

        Remove uses of HTMLImageElement and HTMLCanvasElement

        * html/canvas/CanvasRenderingContext3D.cpp:
        (WebCore::CanvasRenderingContext3D::texImage2D):
        (WebCore::CanvasRenderingContext3D::texSubImage2D):
        * platform/graphics/GraphicsContext3D.h:
        * platform/graphics/mac/GraphicsContext3DMac.cpp:
        (WebCore::GraphicsContext3D::texImage2D):
        (WebCore::GraphicsContext3D::texSubImage2D):

2009-11-01  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Jan Alonzo.

        https://bugs.webkit.org/show_bug.cgi?id=30964
        [Gtk] Implemment AtkDocument

        Provides access to expected document attributes.

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (documentAttributeValue):
        (webkit_accessible_document_get_document_attribute_value):
        (webkit_accessible_document_get_document_attributes):

2009-11-03  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Jan Alonzo.

        https://bugs.webkit.org/show_bug.cgi?id=30964
        [Gtk] Implemment AtkDocument

        Implements what has been implemented in AT-SPI.

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (GetAtkInterfaceTypeFromWAIType):
        (getInterfaceMaskFromObject):
        (atk_document_interface_init):
        (webkit_accessible_document_get_document_attribute_value):
        (webkit_accessible_document_get_document_attributes):
        (webkit_accessible_document_get_locale):

2009-11-01  Laszlo Gombos  <laszlo.1.gombos@nokia.com>

        Reviewed by Eric Seidel.

        Turn on warnings for QtWebKit for gcc
        https://bugs.webkit.org/show_bug.cgi?id=30958

        No new tests as there is no functional change.

        * platform/image-decoders/qt/RGBA32BufferQt.cpp:
        (WebCore::RGBA32Buffer::RGBA32Buffer): Reorder 
        initialization list to fix compiler warnings.


2009-11-01  Keishi Hattori  <casey.hattori@gmail.com>

        Reviewed by Pavel Feldman.

        [Regression] monitorEvent doesn't work

        * inspector/front-end/InjectedScript.js:
        (InjectedScript._ensureCommandLineAPIInstalled):

2009-11-01  Keishi Hattori  <casey.hattori@gmail.com>

        Reviewed by Pavel Feldman.

        Fix Web Inspector: Bug with Message Bubble in Syntax Highlighter
        https://bugs.webkit.org/show_bug.cgi?id=30990

        * inspector/front-end/SourceFrame.js:

2009-10-31  Alexey Proskuryakov  <ap@apple.com>

        Reviewed by John Sullivan.

        https://bugs.webkit.org/show_bug.cgi?id=30982
        createHTMLDocument doesn't escape ampersand and less-than in title

        Test: fast/dom/DOMImplementation/createHTMLDocument-title.html

        * dom/DOMImplementation.cpp: (WebCore::DOMImplementation::createHTMLDocument):
        Set document title after creating the document, avoiding parser intricacies.

2009-11-01  Keishi Hattori  <casey.hattori@gmail.com>

        Reviewed by Timothy Hatcher.

        Web Inspector: Double clicking on a breakpoints should not select text
        https://bugs.webkit.org/show_bug.cgi?id=30950

        * inspector/front-end/SourceFrame.js:
        (WebInspector.SourceFrame.prototype._documentMouseDown):

2009-11-01  Yuta Kitamura  <yutak@chromium.org>

        Reviewed by Darin Adler.

        Fix assertion falure in RenderObjectChildList::updateBeforeAfterContent().

        [Crash (debug)] Combination of list-item and :after causes assertion failure
        https://bugs.webkit.org/show_bug.cgi?id=30944

        Test: fast/css/list-item-pseudo-nocrash.html

        * rendering/RenderObjectChildList.cpp:
        (WebCore::RenderObjectChildList::updateBeforeAfterContent):

2009-11-01  Philippe Normand  <pnormand@igalia.com>

        Reviewed by Eric Seidel.

        https://bugs.webkit.org/show_bug.cgi?id=30586
        [GTK] Failing test media/video-src-empty.html

        Correctly set network/ready state depending on GStreamer errors
        received on the bus.

        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.cpp:
        (WebCore::mediaPlayerPrivateMessageCallback):

2009-10-31  Oliver Hunt  <oliver@apple.com>

        Build fix

        * platform/graphics/mac/GraphicsContext3DMac.cpp:
        (WebCore::GraphicsContext3D::attachShader):

2009-10-31  Oliver Hunt  <oliver@apple.com>

        Reviewed by Darin Adler.

        Remove obsolete null checks from CanvasRenderingContext3DMac
        https://bugs.webkit.org/show_bug.cgi?id=30983

        * platform/graphics/mac/GraphicsContext3DMac.cpp:
        (WebCore::GraphicsContext3D::attachShader):
        (WebCore::GraphicsContext3D::bindAttribLocation):
        (WebCore::GraphicsContext3D::compileShader):
        (WebCore::GraphicsContext3D::detachShader):
        (WebCore::GraphicsContext3D::framebufferRenderbuffer):
        (WebCore::GraphicsContext3D::framebufferTexture2D):
        (WebCore::GraphicsContext3D::linkProgram):
        (WebCore::GraphicsContext3D::shaderSource):
        (WebCore::GraphicsContext3D::useProgram):
        (WebCore::GraphicsContext3D::validateProgram):
        (WebCore::GraphicsContext3D::getProgramInfoLog):
        (WebCore::GraphicsContext3D::getShaderi):
        (WebCore::GraphicsContext3D::getShaderiv):
        (WebCore::GraphicsContext3D::getShaderInfoLog):
        (WebCore::GraphicsContext3D::getShaderSource):
        (WebCore::GraphicsContext3D::getUniformLocation):

2009-10-31  Oliver Hunt  <oliver@apple.com>

        Reviewed by Jon Honeycutt.

        WebGL allows objects to be used with the wrong context
        https://bugs.webkit.org/show_bug.cgi?id=30981

        Simply add null checks and a few context guards to ensure we don't
        deref null or attempt to use an object from a different context.

        Tests: fast/canvas/webgl/incorrect-context-object-behaviour.html
               fast/canvas/webgl/null-object-behaviour.html

        * html/canvas/CanvasRenderingContext3D.cpp:
        (WebCore::CanvasRenderingContext3D::attachShader):
        (WebCore::CanvasRenderingContext3D::bindAttribLocation):
        (WebCore::CanvasRenderingContext3D::bindBuffer):
        (WebCore::CanvasRenderingContext3D::bindFramebuffer):
        (WebCore::CanvasRenderingContext3D::bindRenderbuffer):
        (WebCore::CanvasRenderingContext3D::bindTexture):
        (WebCore::CanvasRenderingContext3D::compileShader):
        (WebCore::CanvasRenderingContext3D::detachShader):
        (WebCore::CanvasRenderingContext3D::framebufferRenderbuffer):
        (WebCore::CanvasRenderingContext3D::framebufferTexture2D):
        (WebCore::CanvasRenderingContext3D::getProgrami):
        (WebCore::CanvasRenderingContext3D::getProgramiv):
        (WebCore::CanvasRenderingContext3D::getProgramInfoLog):
        (WebCore::CanvasRenderingContext3D::getShaderi):
        (WebCore::CanvasRenderingContext3D::getShaderiv):
        (WebCore::CanvasRenderingContext3D::getShaderInfoLog):
        (WebCore::CanvasRenderingContext3D::getShaderSource):
        (WebCore::CanvasRenderingContext3D::getUniformf):
        (WebCore::CanvasRenderingContext3D::getUniformfv):
        (WebCore::CanvasRenderingContext3D::getUniformi):
        (WebCore::CanvasRenderingContext3D::getUniformiv):
        (WebCore::CanvasRenderingContext3D::getUniformLocation):
        (WebCore::CanvasRenderingContext3D::isBuffer):
        (WebCore::CanvasRenderingContext3D::linkProgram):
        (WebCore::CanvasRenderingContext3D::shaderSource):
        * html/canvas/CanvasRenderingContext3D.h:
        * html/canvas/CanvasRenderingContext3D.idl:

2009-10-30  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Darin Adler.

        Allow custom memory allocation control for WebCore's MediaQueryResult
        https://bugs.webkit.org/show_bug.cgi?id=30857

        Inherits MediaQueryResult class from Noncopyable because it is
        instantiated by 'new' in WebCore/css/CSSStyleSelector.cpp:5984 and
        it is no need to be copyable.

        * css/CSSStyleSelector.h:

2009-10-30  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Darin Adler.

        Allow custom memory allocation control for WebCore's MediaQueryEvaluator
        https://bugs.webkit.org/show_bug.cgi?id=30854

        Inherits MediaQueryEvaluator class from Noncopyable because it is
        instantiated by 'new' in WebCore/css/CSSStyleSelector.cpp:401 and   
        it is no need to be copyable.

        * css/MediaQueryEvaluator.h:

2009-10-30  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Darin Adler.

        Allow custom memory allocation control for WebCore's CSSRuleSet
        https://bugs.webkit.org/show_bug.cgi?id=30852

        Inherits CSSRuleSet class from Noncopyable because it is
        instantiated by 'new' in WebCore/css/CSSStyleSelector.cpp:455 and
        it is no need to be copyable.

        * css/CSSStyleSelector.cpp:

2009-10-30  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Darin Adler.

        Allow custom memory allocation control for WebCore's CSSRuleData
        https://bugs.webkit.org/show_bug.cgi?id=30851

        Inherits CSSRuleData class from Noncopyable because it is
        instantiated by 'new' in WebCore/css/CSSStyleSelector.h:320 and
        it is no need to be copyable.

        * css/CSSStyleSelector.h:

2009-10-30  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Darin Adler.

        Allow custom memory allocation control for WebCore's CSSRuleDataList
        https://bugs.webkit.org/show_bug.cgi?id=30850

        Inherits CSSRuleDataList class from Noncopyable because it has been
        instantiated by 'new' in WebCore/css/CSSStyleSelector.cpp:2715 and
        it is no need to be copyable.

        * css/CSSStyleSelector.h:

2009-10-30  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Darin Adler.

        Allow custom memory allocation control for WebCore's CSSNamespace
        https://bugs.webkit.org/show_bug.cgi?id=30849

        Inherits CSSNamespace struct from Noncopyable because it is
        instantiated by 'new' in WebCore/css/CSSStyleSheet.cpp:141 and
        it is no need to be copyable.

        * css/CSSNamespace.h:

2009-10-30  Dmitry Titov  <dimich@chromium.org>

        Reviewed by David Levin.

        Refactor DatabaseTask in preparation for removing threadsafe refcounting from it.
        Move the synchronizer object out of the DatabaseTask so there is no need to keep
        the pointer to Databasetask around after passing it to MessageQueue.
        Also pass the references to return parameters to the task so it can update them.
        https://bugs.webkit.org/show_bug.cgi?id=30941

        No new tests, since this is just moving the code around, no change in functionality.

        * storage/Database.cpp:
        (WebCore::Database::Database):
        (WebCore::Database::openAndVerifyVersion): Use new DatabaseTaskSynchronizer to wait for task completion.
        (WebCore::Database::markAsDeletedAndClose): Ditto.
        (WebCore::Database::tableNames): Ditto.
        (WebCore::Database::stop): Use the boolean flag rather then 'killed' flag built into MessageQueue.
        (WebCore::Database::scheduleTransaction): Transaction queue is a Deque now, change the way to fetch the transaction.
        * storage/Database.h: Change the SQLTransaction queue to be a Deque rather then a MessageQueue.
        * storage/DatabaseTask.cpp:
        (WebCore::DatabaseTaskSynchronizer::DatabaseTaskSynchronizer):
        (WebCore::DatabaseTaskSynchronizer::waitForTaskCompletion):
        (WebCore::DatabaseTaskSynchronizer::taskCompleted):
        (WebCore::DatabaseTask::DatabaseTask): Ctor takes DatabaseTaskSynchronizer which can be 0.
        (WebCore::DatabaseTask::performTask): Signal completion. m_synchronizer should still be around since main thread is waiting on it.
        (WebCore::DatabaseOpenTask::DatabaseOpenTask): Pass synchronizer and return parameters via constructor.
        (WebCore::DatabaseCloseTask::DatabaseCloseTask): Ditto.
        (WebCore::DatabaseTransactionTask::DatabaseTransactionTask): Ditto.
        (WebCore::DatabaseTableNamesTask::DatabaseTableNamesTask): Ditto.
        * storage/DatabaseTask.h:
        (WebCore::DatabaseOpenTask::create):
        (WebCore::DatabaseCloseTask::create):
        (WebCore::DatabaseTransactionTask::create):
        (WebCore::DatabaseTableNamesTask::create):

2009-10-30  Enrica Casucci  <enrica@apple.com>

        Reviewed by Darin Adler.

        REGRESSION: In Mail, Undo does not restore some characters I have deleted at the end of a line
        https://bugs.webkit.org/show_bug.cgi?id=30955
        <rdar://problem/7067033>
        
        When the command is deleteWordBackward or deleteWordForward
        we should not add to the open typing command, but
        create a new one.
        
        Test: editing/undo/undo-deleteWord.html

        * editing/TypingCommand.cpp:
        (WebCore::TypingCommand::deleteKeyPressed): Always start a new command if the granularity is
        not CharacterGranularity. 
        (WebCore::TypingCommand::forwardDeleteKeyPressed): Always start a new command if the granularity is
        not CharacterGranularity. 

2009-10-30  Eric Carlson  <eric.carlson@apple.com>

        Reviewed by Darin Adler.

        Make MediaPlayer constructor private
        https://bugs.webkit.org/show_bug.cgi?id=30965

        * html/HTMLMediaElement.cpp:
        (WebCore::HTMLMediaElement::loadResource): 
        (WebCore::HTMLMediaElement::finishParsingChildren): Use MediaPlayer::create.

        * platform/graphics/MediaPlayer.h:
        (WebCore::MediaPlayer::create): New.

2009-10-29  Jon Honeycutt  <jhoneycutt@apple.com>

        MSAA: Accessibility of headings is not correct

        https://bugs.webkit.org/show_bug.cgi?id=30937

        Reviewed by Alice Liu.

        * accessibility/AccessibilityObject.h:
        (WebCore::AccessibilityObject::stringRoleForMSAA):
        (WebCore::AccessibilityObject::descriptionForMSAA):

        * accessibility/AccessibilityRenderObject.cpp:
        (WebCore::shouldReturnTagNameAsRoleForMSAA):
        If the element's tag name is one of h1, h2, h3, h4, h5, h6, return
        true.
        (WebCore::AccessibilityRenderObject::stringRoleForMSAA):
        If the element should return its tag name as the role, return the tag
        name.
        (WebCore::AccessibilityRenderObject::positionalDescriptionForMSAA):
        If the object is a heading, return the string "L" followed by the
        heading level.
        (WebCore::AccessibilityRenderObject::descriptionForMSAA):
        If the object has a positional description, return it. Otherwise, get
        the accessibility description, and prefix it with "Description" so that
        MSAA clients know that it's not a positional description.

        * accessibility/AccessibilityRenderObject.h:

2009-10-29  Jon Honeycutt  <jhoneycutt@apple.com>

        MSAA: Accessibility of links is wrong

        https://bugs.webkit.org/show_bug.cgi?id=30928

        Reviewed by Darin Adler.

        * accessibility/AccessibilityImageMapLink.cpp:
        (WebCore::AccessibilityImageMapLink::stringValueForMSAA):
        Return the URL.
        (WebCore::AccessibilityImageMapLink::nameForMSAA):
        Return the alt text.

        * accessibility/AccessibilityImageMapLink.h:
        (WebCore::AccessibilityImageMapLink::isLinked):
        Return true.

        * accessibility/AccessibilityObject.h:
        (WebCore::AccessibilityObject::isLinked):
        (WebCore::AccessibilityObject::stringValueForMSAA):
        (WebCore::AccessibilityObject::nameForMSAA):

        * accessibility/AccessibilityRenderObject.cpp:
        (WebCore::isLinkable):
        Return true if the element is considered "linkable" with respect to
        accessibility.
        (WebCore::AccessibilityRenderObject::stringValueForMSAA):
        If the element is linkable, check whether it has a parent anchor
        element. If so, return the anchor element's href.
        (WebCore::AccessibilityRenderObject::isLinked):
        Return true if the element is linkable and if it's parent anchor tag's
        href is non-empty.
        (WebCore::AccessibilityRenderObject::nameForMSAA):
        For text nodes, return the text.

        * accessibility/AccessibilityRenderObject.h:

2009-10-30  Evan Stade  <estade@chromium.org>

        Reviewed by David Levin.

        Notify the chrome when the focused node has changed.
        https://bugs.webkit.org/show_bug.cgi?id=30832

        This is similar to AX code that is already in place, except that this also informs the
        chrome when there stops being a focused node. This is needed for a browser to show the
        anchor for links that have keyboard focus.

        * dom/Document.cpp:
        (WebCore::Document::setFocusedNode):
        * loader/EmptyClients.h:
        (WebCore::EmptyChromeClient::focusedNodeChanged):
        * page/Chrome.cpp:
        (WebCore::Chrome::focusedNodeChanged):
        * page/Chrome.h:
        * page/ChromeClient.h:

2009-10-30  Ben Murdoch  <benm@google.com>

        Reviewed by David Kilzer.

        openDatabase() with empty version sets db version up incorrectly
        https://bugs.webkit.org/show_bug.cgi?id=28417

        Test: storage/open-database-set-empty-version.html

        * storage/Database.cpp:
        (WebCore::Database::performOpenAndVerify): Raise an exception if the current database version does not match the expected version when the current version is the empty string.

2009-10-30  John Gregg  <johnnyg@google.com>

        Reviewed by David Levin.

        Need to turn off notifications properly at runtime
        https://bugs.webkit.org/show_bug.cgi?id=30409

        Moving the notificationsEnabled bit from NotificationCenter
        to the new V8 RuntimeEnabledFeatures object.

        Just moving a bit around, so no new tests.

        * bindings/v8/RuntimeEnabledFeatures.cpp:
        * bindings/v8/RuntimeEnabledFeatures.h:
        (WebCore::RuntimeEnabledFeatures::setNotificationsEnabled):
        (WebCore::RuntimeEnabledFeatures::notificationsEnabled):
        * bindings/v8/custom/V8DOMWindowCustom.cpp:
        (WebCore::ACCESSOR_RUNTIME_ENABLER):
        * bindings/v8/custom/V8WorkerContextCustom.cpp:
        (WebCore::ACCESSOR_RUNTIME_ENABLER):
        * notifications/NotificationCenter.cpp:
        * notifications/NotificationCenter.h:

2009-10-30  Dmitry Titov  <dimich@chromium.org>

        Reviewed by Dimitri Glazkov.

        [V8] More cleanup after r49949: remove ListenerGuard.
        ListenerGuard is no longer needed since EventListeners do not depend on frame or v8 context.
        https://bugs.webkit.org/show_bug.cgi?id=30943

        Covered by fast/events/add-event-without-document.html which will now pass in Chromium.

        * bindings/v8/V8AbstractEventListener.cpp:
        (WebCore::V8AbstractEventListener::V8AbstractEventListener):
        (WebCore::V8AbstractEventListener::handleEvent):
        * bindings/v8/V8AbstractEventListener.h:
        * bindings/v8/V8DOMWrapper.cpp:
        (WebCore::V8DOMWrapper::getEventListener):
        * bindings/v8/V8EventListenerList.h:
        (WebCore::V8EventListenerList::findOrCreateWrapper):
        * bindings/v8/V8LazyEventListener.cpp:
        (WebCore::V8LazyEventListener::V8LazyEventListener):
        * bindings/v8/V8Proxy.cpp:
        (WebCore::V8Proxy::V8Proxy):
        (WebCore::V8Proxy::disconnectFrame):
        (WebCore::V8Proxy::clearForNavigation):
        * bindings/v8/V8Proxy.h:
        * bindings/v8/V8WorkerContextEventListener.cpp:
        (WebCore::V8WorkerContextEventListener::V8WorkerContextEventListener):
        (WebCore::V8WorkerContextEventListener::handleEvent):
        (WebCore::V8WorkerContextEventListener::reportError):
        * bindings/v8/V8WorkerContextEventListener.h:
        (WebCore::V8WorkerContextEventListener::create):
        * bindings/v8/WorkerContextExecutionProxy.cpp:
        (WebCore::WorkerContextExecutionProxy::WorkerContextExecutionProxy):
        (WebCore::WorkerContextExecutionProxy::dispose):
        (WebCore::WorkerContextExecutionProxy::findOrCreateEventListener):
        * bindings/v8/WorkerContextExecutionProxy.h:
        * bindings/v8/custom/V8CustomEventListener.cpp:
        (WebCore::V8EventListener::V8EventListener):
        * bindings/v8/custom/V8CustomEventListener.h:
        (WebCore::V8EventListener::create):

2009-10-30  Shinichiro Hamaji  <hamaji@chromium.org>

        Reviewed by Darin Adler.

        counterValueForElementById should return space-separated string for multiple counters
        https://bugs.webkit.org/show_bug.cgi?id=30939

        Test: fast/css/counters/counterValueForElementById.html

        * rendering/RenderTreeAsText.cpp:
        (WebCore::writeCounterValuesFromChildren):
        (WebCore::counterValueForElement):

2009-10-30  Sebastian Dröge  <sebastian.droege@collabora.co.uk>

        Reviewed by Gustavo Noronha.

        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.cpp:
        (WebCore::MediaPlayerPrivate::paint):
        Add some comments to explain what is happening here.

2009-10-30  Alexander Pavlov  <apavlov@chromium.org>

        Reviewed by Timothy Hatcher.

        Fix Web Inspector crash on the errors/warnings counter click

        RenderObject::createVisiblePosition(const Position& position)
        understands "null Positions", so we can construct such a Position manually.

        https://bugs.webkit.org/show_bug.cgi?id=30499

        * rendering/RenderBox.cpp:
        (WebCore::RenderBox::positionForPoint):

2009-10-30  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Xan Lopez.

        https://bugs.webkit.org/show_bug.cgi?id=25534
        [GTK] Objects of ROLE_TABLE should implement the accessible table interface

        Third part of the implementation of AtkTable.

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (nameFromChildren):
        (webkit_accessible_get_name):
        New convenience function to construct an object's name using the name(s) of
        any children it has.

        (atk_table_interface_init):
        (webkit_accessible_table_get_column_description):
        (webkit_accessible_table_get_row_description):
        Implemented.

        (webkit_accessible_table_get_column_header):
        Stub function added so that webkit_accessible_table_get_column_description
        could be implemented in the meantime.

2009-10-30  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Xan Lopez.

        https://bugs.webkit.org/show_bug.cgi?id=25534
        [GTK] Objects of ROLE_TABLE should implement the accessible table interface

        Second part of the implementation of AtkTable.

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (cellAtIndex):
        (webkit_accessible_table_get_column_at_index):
        (webkit_accessible_table_get_row_at_index):
        (webkit_accessible_table_get_caption):
        (atk_table_interface_init):

2009-10-30  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Add TimelinePanel into the panels enum.

        https://bugs.webkit.org/show_bug.cgi?id=30915

        * inspector/InspectorFrontend.cpp:
        (WebCore::InspectorFrontend::showPanel):
        * inspector/front-end/inspector.js:
        (WebInspector.showTimelinePanel):

2009-10-30  Kenneth Rohde Christiansen  <kenneth@webkit.org>

        Reviewed by Holger Hans Peter Freyther.

        If the owner widget of the page has a palette set, we
        should use that one. This was only working when the
        owner was a QWebView. This patch fixes that.

        * platform/qt/RenderThemeQt.cpp:
        (WebCore::RenderThemeQt::applyTheme):

2009-10-30  Pavel Feldman  <pfeldman@chromium.org>

        Not reviewed: Wire CookieJarChromium to the cookies
        backend. This is a final step of a 3-steps raw cookies
        access implementation in Chromium.

        * platform/network/chromium/CookieJarChromium.cpp:
        (WebCore::getRawCookies):
        (WebCore::deleteCookie):

2009-10-30  Yury Semikhatsky  <yurys@chromium.org>

        Reviewed by Pavel Feldman.

        Fix Chromium crash in console.log in "deeply recursive" function 

        Check that result of 'frameSourceName' is not null handle
        before casting it to String. 
      
        Allow V8Proxy::sourceName/sourceLineNumber() to report
        that they have failed due to JavaScript stack overflow.

        https://bugs.webkit.org/show_bug.cgi?id=30904

        * bindings/scripts/CodeGeneratorV8.pm:
        * bindings/v8/ScriptCallStack.cpp:
        (WebCore::ScriptCallStack::create):
        (WebCore::ScriptCallStack::ScriptCallStack):
        * bindings/v8/ScriptCallStack.h:
        * bindings/v8/V8Proxy.cpp:
        (WebCore::V8Proxy::sourceLineNumber):
        (WebCore::V8Proxy::sourceName):
        * bindings/v8/V8Proxy.h:
        * bindings/v8/custom/V8WorkerContextCustom.cpp:
        (WebCore::CALLBACK_FUNC_DECL):

2009-10-30  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Darin Adler.

        Allow custom memory allocation control for WebCore's MediaQuery
        https://bugs.webkit.org/show_bug.cgi?id=30856

        Inherits MediaQuery class from Noncopyable because it is
        instantiated by 'new' in WebCore/css/CSSParser.cpp:4905 and
        it is no need to be copyable.

        * css/CSSStyleSelector.h:

2009-10-30  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Darin Adler.

        Allow custom memory allocation control for WebCore's MediaQueryExp
        https://bugs.webkit.org/show_bug.cgi?id=30855

        Inherits MediaQueryExp class from FastAllocBase because it is
        instantiated by 'new' in WebCore/css/CSSParser.cpp:4874.

        * css/MediaQueryExp.h:

2009-10-30  Roland Steiner  <rolandsteiner@chromium.org>

        Reviewed by Eric Seidel.

        Remove ENABLE_RUBY guards as discussed with Dave Hyatt and Maciej Stachowiak.

        Bug 28420 -  Implement HTML5 <ruby> rendering
        (https://bugs.webkit.org/show_bug.cgi?id=28420)

        No new tests (no functional change).

        * Configurations/FeatureDefines.xcconfig:
        * DerivedSources.make:
        * GNUmakefile.am:
        * WebCore.pro:
        * WebCore.vcproj/WebCoreCommon.vsprops:
        * WebCore.vcproj/build-generated-files.sh:

2009-10-30  Dan Bernstein  <mitz@apple.com>

        Reviewed by Adele Peterson.

        Removed test for an impossible condition (a glyph in a right-to-left run not having
        the RTL flag 0x800)

        * platform/graphics/mac/ComplexTextControllerATSUI.cpp:
        (WebCore::ComplexTextController::ComplexTextRun::overrideLayoutOperation):

2009-10-29  Adam Barth  <abarth@webkit.org>

        Reviewed by Dimitri Glazkov.

        [V8] Out-of-memory crash in isolated worlds
        https://bugs.webkit.org/show_bug.cgi?id=30906

        We need to handle the fact that creating a V8:Context might fail.  I
        don't know how to test this change because creating a context usually
        only fails when V8 decides it's using too much memory.

        * bindings/v8/V8IsolatedWorld.cpp:
        (WebCore::V8IsolatedWorld::V8IsolatedWorld):
        * bindings/v8/V8Proxy.cpp:
        (WebCore::V8Proxy::evaluateInIsolatedWorld):
        (WebCore::V8Proxy::evaluateInNewContext):

2009-10-29  Erik Arvidsson  <arv@chromium.org>

        Reviewed by Eric Seidel.

        Make links mouse focusable only on GTK and QT.

        Links are now always mouse focusable on GTK and QT. On other platforms
        the link needs a tabIndex or it needs to be contentEditable.

        https://bugs.webkit.org/show_bug.cgi?id=26856

        * html/HTMLAnchorElement.cpp:
        (WebCore::HTMLAnchorElement::isMouseFocusable):

2009-10-29  Dan Bernstein  <mitz@apple.com>

        Reviewed by Sam Weinig.

        Complete the fix for hit-testing and selection highlighting in ligatures for the ATSUI
        code path.

        * platform/graphics/mac/ComplexTextController.h: Added m_ltr member to ComplexTextRun.
        * platform/graphics/mac/ComplexTextControllerATSUI.cpp:
        (WebCore::ComplexTextController::ComplexTextRun::overrideLayoutOperation): Skip over deleted
        glyphs, but update indexes and advances correctly.
        (WebCore::ComplexTextController::ComplexTextRun::ComplexTextRun): Initialize m_ltr.

2009-10-29  Enrica Casucci  <enrica@apple.com>

        Reviewed by Darin Adler.

        REGRESSION(3.2.3 - 4.0.2): Message composing: when I undo a color change to text in Mail, undo/redo behaves strangely
        <rdar://problem/7115041>
        https://bugs.webkit.org/show_bug.cgi?id=30892

        This problem shows in any scenario where it is necessary to split a text
        node to apply a style. SplitElementCommand and WrapContentsInDummySpanCommand both
        have member variables initialized in the constructor to keep reference to elements
        they need to operate upon. These reference are not updated when reapplying the command.
        For this reason it is necessary to guarantee that unapply doesn not delete the references
        and that these commands implement doReapply to correctly reuse the existing
        elements.

        Test: editing/undo/redo-style.html

        * editing/SplitElementCommand.cpp:
        (WebCore::SplitElementCommand::executeApply): Added.
        (WebCore::SplitElementCommand::doApply): Modified to call executeApply. 
        (WebCore::SplitElementCommand::doUnapply): Doesn't release m_element1.
        (WebCore::SplitElementCommand::doReapply): Added.
        * editing/SplitElementCommand.h: Added doReapply and executeApply.
        * editing/WrapContentsInDummySpanCommand.cpp:
        (WebCore::WrapContentsInDummySpanCommand::executeApply): Added.
        (WebCore::WrapContentsInDummySpanCommand::doApply): Modified to call executeApply.
        (WebCore::WrapContentsInDummySpanCommand::doUnapply): Doesn't release m_dummySpan.
        (WebCore::WrapContentsInDummySpanCommand::doReapply): Added.
        * editing/WrapContentsInDummySpanCommand.h: Added doReapply and executeApply.

2009-10-29  Jeremy Orlow  <jorlow@chromium.org>

        Reviewed by Darin Fisher.

        DOM Storage's condition variable needs to handle spurious wakeups
        https://bugs.webkit.org/show_bug.cgi?id=30920

        Add a boolean to keep track of whether it's been terminated.  Clean
        up the locking code a tiny bit to make it easier to read.  There's
        no way to reproduce this reliably in a LayoutTest.

        * storage/LocalStorageThread.cpp:
        (WebCore::LocalStorageThread::LocalStorageThread):
        (WebCore::LocalStorageThread::terminate):
        (WebCore::LocalStorageThread::performTerminate):
        * storage/LocalStorageThread.h:

2009-10-29  Dimitri Glazkov  <dglazkov@chromium.org>

        Unreviewed, build fix.

        [Chromium] Include ComplextTextController into Chromium Mac project.

        * WebCore.gyp/WebCore.gyp: Added include rule for ComplextText* files.

2009-10-29  Timothy Hatcher  <timothy@apple.com>

        Fix tabbing through element attributes in the Web Insector.

        https://bugs.webkit.org/show_bug.cgi?id=30429

        Reviewed by Pavel Feldman.

        * inspector/front-end/ElementsTreeOutline.js:
        (WebInspector.ElementsTreeElement.prototype._attributeEditingCommitted): Don't call _updateTitle,
        it is called for us when removeAttribute succeeds in the back-end.
        (WebInspector.ElementsTreeElement.prototype._textNodeEditingCommitted): Ditto except for nodeValue.
        (WebInspector.ElementsTreeElement.prototype._editingCancelled): Don't call _updateTitle, editing code reverts.
        (WebInspector.ElementsTreeElement.prototype._updateTitle): Return early if we are editing.

2009-10-29  Dan Bernstein  <mitz@apple.com>

        Reviewed by Sam Weinig.

        Problem editing or selecting text containing ligatures
        https://bugs.webkit.org/show_bug.cgi?id=30025

        Test: platform/mac/fast/text/ligature-subdivision.html

        * platform/graphics/mac/ComplexTextController.cpp:
        (WebCore::ComplexTextController::ComplexTextController): Initialize
        m_characterInCurrentGlyph.
        (WebCore::ComplexTextController::offsetForPosition): If the hit glyph spans multiple
        characters, compute the hit character based on dividing the glyph’s total advance into
        a number of equal intervals equal to the number of characters and assigning the hit to the
        character corresponding to the hit interval.
        (WebCore::ComplexTextController::advance): If the final offset occurs mid-glyph, advance
        by a fraction of the glyph’s total advance.
        * platform/graphics/mac/ComplexTextController.h: Added m_characterInCurrentGlyph.

2009-10-29  Brian Weinstein  <bweinstein@apple.com>

        Reviewed by Timothy Hatcher.

        Fixes <http://webkit.org/b/30918>.
        Web Inspector: Datagrid Rows on Windows not properly aligned.
        
        Use line-height for the table rows to make sure the height
        of our text and the height of the table rows are consistent.

        * inspector/front-end/inspector.css:

2009-10-29  Adam Barth  <abarth@webkit.org>

        No review, rolling out r50296.
        http://trac.webkit.org/changeset/50296

        * bindings/v8/V8IsolatedWorld.cpp:
        (WebCore::V8IsolatedWorld::V8IsolatedWorld):
        * bindings/v8/V8Proxy.cpp:
        (WebCore::V8Proxy::evaluateInIsolatedWorld):
        (WebCore::V8Proxy::evaluateInNewContext):

2009-10-29  Adam Barth  <abarth@webkit.org>

        Reviewed by Dimitri Glazkov.

        [V8] Out-of-memory crash in isolated worlds
        https://bugs.webkit.org/show_bug.cgi?id=30906

        We need to handle the fact that creating a V8:Context might fail.  I
        don't know how to test this change because creating a context usually
        only fails when V8 decides it's using too much memory.

        * bindings/v8/V8IsolatedWorld.cpp:
        (WebCore::V8IsolatedWorld::V8IsolatedWorld):
        * bindings/v8/V8Proxy.cpp:
        (WebCore::V8Proxy::evaluateInIsolatedWorld):
        (WebCore::V8Proxy::evaluateInNewContext):

2009-10-29  Gustavo Noronha Silva  <gustavo.noronha@collabora.co.uk>

        Reviewed by Xan Lopez.

        Remove build warning introduced by r50284.

        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.cpp:
        (WebCore::MediaPlayerPrivate::duration):

2009-10-29  Dimitri Glazkov  <dglazkov@chromium.org>

        Reviewed by Adam Barth.

        [V8] Remove random crashes by removing retrieval of V8 context during garbage collection.

        https://bugs.webkit.org/show_bug.cgi?id=30919

        Unfortunately, I haven't been able to trigger this crash explicitly, so no test :(.

        * bindings/v8/V8DOMWrapper.cpp:
        (WebCore::V8DOMWrapper::jsWrapperForDOMObject): Added new "assume-it's-there" getter.
        * bindings/v8/V8DOMWrapper.h: Added getter decl.
        * bindings/v8/V8GCController.cpp:
        (WebCore::GCPrologueVisitor::visitDOMWrapper): Changed to use explicit getter.

2009-10-29  Dimitri Glazkov  <dglazkov@chromium.org>

        Unreviewed, build fix.

        [Chromium] Adjust the project files to sync up with
        http://trac.webkit.org/changeset/50259

        * WebCore.gypi: Renamed and added files.

2009-10-29  Laszlo Gombos  <laszlo.1.gombos@nokia.com>

        Reviewed by Tor Arne Vestbø.

        [Qt] Implement DELETE HTTP method for XmlHttpRequest
        https://bugs.webkit.org/show_bug.cgi?id=30894

        No new tests as this functionality is already tested by the 
        xmlhttprequest LayoutTests. As this patch depends on an unreleased
        version of the dependent QtNetwork library and the tests will be
        enabled later once the dependent library is released (and the
        buildbot is updated).

        * platform/network/qt/QNetworkReplyHandler.cpp:
        (WebCore::QNetworkReplyHandler::QNetworkReplyHandler):
        (WebCore::QNetworkReplyHandler::start):

2009-10-29  Brian Weinstein  <bweinstein@apple.com>

        Reviewed by Timothy Hatcher.

        Part of <http://webkit.org/b/30483>.
        Web Inspector: Always show the Local and Session Storage Views.
        
        Even if the length of the DOM Storage entry array is 0, still
        generate the Datagrid because users can add things storage items
        through the UI, so we should allow them to even if there isn't
        anything there currently.

        * English.lproj/localizedStrings.js: Removed "This Storage is Empty".
        * inspector/front-end/DOMStorageItemsView.js:
        (WebInspector.DOMStorageItemsView.prototype._showDOMStorageEntries):

2009-10-29  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Add TimelinePanel into the panels enum.

        https://bugs.webkit.org/show_bug.cgi?id=30915

        * inspector/InspectorController.cpp:
        (WebCore::InspectorController::specialPanelForJSName):
        * inspector/InspectorController.h:
        (WebCore::InspectorController::):

2009-10-29  Xan Lopez  <xlopez@igalia.com>

        Reviewed by Oliver Hunt.

        [GTK] Threading problems with some of the tests
        https://bugs.webkit.org/show_bug.cgi?id=30814

        Create strings shared among threads with crossThreadString
        constructor method.

        * storage/Database.cpp:
        (WebCore::Database::Database):

2009-10-29  Sebastian Dröge  <sebastian.droege@collabora.co.uk>

        Reviewed by Gustavo Noronha.

        https://bugs.webkit.org/show_bug.cgi?id=30308
        
        Add support for ARGB videos.

        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.cpp:
        (WebCore::MediaPlayerPrivate::paint):
        Create the Cairo image surface for ARGB32 or RGB24
        depending on the buffer's caps.
        
        * platform/graphics/gtk/VideoSinkGStreamer.cpp:
        (webkit_video_sink_timeout_func):
        (webkit_video_sink_render):
        Handle ARGB video and convert GStreamer's ARGB to
        Cairo's for displaying.

2009-10-29  Anton Muhin  <antonm@chromium.org>

        Reviewed by David Levin.

        [chromium] expose a method to access memory usage information in ChromiumBridge
        Declare a static method to be implemented by http://codereview.chromium.org/332010/
        https://bugs.webkit.org/show_bug.cgi?id=30829

        * platform/chromium/ChromiumBridge.h:

2009-10-29  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Xan Lopez.

        https://bugs.webkit.org/show_bug.cgi?id=25679
        [Gtk] Improve accessibility of focusable lists

        Implements the AtkSelection interface and enables the corresponding
        (and expected) object:selection-changed event.

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (optionFromList):
        (optionFromSelection):
        (atk_selection_interface_init):
        (webkit_accessible_selection_add_selection):
        (webkit_accessible_selection_clear_selection):
        (webkit_accessible_selection_ref_selection):
        (webkit_accessible_selection_get_selection_count):
        (webkit_accessible_selection_is_child_selected):
        (webkit_accessible_selection_remove_selection):
        (webkit_accessible_selection_select_all_selection):
        (GetAtkInterfaceTypeFromWAIType):
        * accessibility/gtk/AXObjectCacheAtk.cpp:
        (AXObjectCache::postPlatformNotification):

2009-10-29  Jian Li  <jianli@chromium.org>

        Reviewed by Darin Adler.

        Bug 30655 - Only plain text should be copied to clipboard for TextArea.
        https://bugs.webkit.org/show_bug.cgi?id=30655

        * editing/Editor.cpp:
        (WebCore::nodeIsInTextFormControl):
        (WebCore::Editor::cut):
        (WebCore::Editor::copy):

2009-10-29  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: hide timeline for now - not yet ready.

        https://bugs.webkit.org/show_bug.cgi?id=30912

        * inspector/front-end/inspector.js:
        (WebInspector._createPanels):

2009-10-29  Pavel Feldman  <pfeldman@chromium.org>

        Not reviewed: deploy Web Inspector's images in WebCore.gypi.

        * WebCore.gypi:

2009-10-29  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: get rid of timelineProfilerEnabled method.

        https://bugs.webkit.org/show_bug.cgi?id=30911

        * inspector/InspectorBackend.cpp:
        * inspector/InspectorBackend.h:
        * inspector/InspectorBackend.idl:
        * inspector/InspectorController.cpp:
        (WebCore::InspectorController::setWindowVisible):
        * inspector/InspectorController.h:
        * inspector/front-end/TimelinePanel.js:
        (WebInspector.TimelinePanel.prototype._toggleTimelineButtonClicked):

2009-10-29  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Darin Fisher.

        Create stub methods for raw cookies access in ChromiumBridge.h

        https://bugs.webkit.org/show_bug.cgi?id=30910

        * platform/chromium/ChromiumBridge.h:

2009-10-29  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Darin Adler.

        Allow custom memory allocation control for WebCore's RareData
        https://bugs.webkit.org/show_bug.cgi?id=30858

        Inherits RareData struct from Noncopyable because it is
        instantiated by 'new' in WebCore/css/CSSSelector.h:259 and 
        it is no need to be copyable.

        * css/CSSSelector.h:

2009-10-29  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Darin Adler.

        Allow custom memory allocation control for WebCore's ShorthandScope
        https://bugs.webkit.org/show_bug.cgi?id=30859

        Inherits ShorthandScope class from FastAllocBase because it is 
        instantiated by 'new' in WebCore/css/CSSParser.cpp:902 and 
        it is no need to be copyable.        

        * css/CSSParser.h:

2009-10-29  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Darin Adler.

        Allow custom memory allocation control for WebCore's AXObjectCache
        https://bugs.webkit.org/show_bug.cgi?id=30848

        Inherits AXObjectCache class from FastAllocBase because it is
        instantiated by 'new' in WebCore/dom/Document.cpp:1537 and                                
        it is no need to be copyable.

        * accessibility/AXObjectCache.h:

2009-10-28  Adam Barth  <abarth@webkit.org>

        Reviewed by Eric Seidel.

        Don't run JavaScript URLs in view source mode
        https://bugs.webkit.org/show_bug.cgi?id=30881

        Just say no.

        Test: http/tests/security/view-source-no-javascript-url.html

        * bindings/ScriptControllerBase.cpp:
        (WebCore::ScriptController::executeIfJavaScriptURL):

2009-10-29  Gustavo Noronha Silva  <gustavo.noronha@collabora.co.uk>

        Unreviewed. Fixes style problems pointed out by Evan Martin.

        * platform/gtk/Language.cpp:
        (WebCore::defaultLanguage):

2009-10-29  Dan Bernstein  <mitz@apple.com>

        Rubber-stamped by Mark Rowe.

        64-bit Leopard build fix after r50259
        
        * platform/graphics/mac/ComplexTextControllerATSUI.cpp:
        Declared ATSUTextInserted in 64-bit.
        (WebCore::fontHasMirroringInfo): Use %d format and cast to int.
        (WebCore::disableLigatures): Ditto.
        (WebCore::initializeATSUStyle): Ditto.
        (WebCore::ComplexTextController::collectComplexTextRunsForCharacters): Ditto.

2009-10-29  Dan Bernstein  <mitz@apple.com>

        Tiger build fix after r50259

        * platform/graphics/mac/ComplexTextController.h:
        * platform/graphics/mac/ComplexTextControllerATSUI.cpp:

2009-10-29  Dan Bernstein  <mitz@apple.com>

        Attempted Tiger build fix after r50259

        * platform/graphics/mac/ComplexTextControllerATSUI.cpp:

2009-10-28  Steve Falkenburg  <sfalken@apple.com>

        Rubber stamped by Mark Rowe.

        https://bugs.webkit.org/show_bug.cgi?id=30899
        WebKit fails to build release on 32-bit Windows systems

        * WebCore.vcproj/WebCore.vcproj: Excluded files from project.
        * bindings/js/JSBindingsAllInOne.cpp: Added.

2009-10-28  Dan Bernstein  <mitz@apple.com>

        Reviewed by Jon Honeycutt.

        Fixed typos in color names.

        * inspector/front-end/Color.js:

2009-10-28  Dan Bernstein  <mitz@apple.com>

        Reviewed by Sam Weinig.

        Share code between the ATSUI- and Core Text-based Font implementations by doing the
        following:
        - Generalize CoreTextController as ComplexTextController, keeping the Core Text-specific
          parts in ComplexTextControllerCoreText.cpp.
        - Generalize FontMacCoreText as FontComplexTextMac using ComplexTextController
        - Implement ATSUI-specific parts of ComplexTextController in ComplexTextControllerATSUI.
        - Remove FontMacATSUI.

        * WebCore.xcodeproj/project.pbxproj: Removed CoreTextController.{cpp,h}, FontMacATSUI.mm,
        and FontMacCoreText.cpp, and added ComplexTextController.{cpp,h},
        ComplexTextControllerATSUI.cpp, ComplexTextControllerCoreText.cpp, and
        FontComplexTextMac.cpp.

        * platform/graphics/mac/ComplexTextController.cpp: Copied from CoreTextController.cpp and
        kept the non-Core Text-specific bits.
        (WebCore::ComplexTextController::ComplexTextController): Updated for renames, including
        its own.
        (WebCore::ComplexTextController::offsetForPosition): Updated for renames and for
        m_complexTextRuns holding references instead of objects.
        (WebCore::ComplexTextController::collectComplexTextRuns): Updated for renames, including
        its own.
        (WebCore::ComplexTextController::advance): Updated for renames.
        (WebCore::ComplexTextController::adjustGlyphsAndAdvances): Updated for renames and for
        m_complexTextRuns holding references instead of objects, and changed to use the glyphs()
        and advances() accessors.

        * platform/graphics/mac/ComplexTextController.h: Copied from CoreTextController.h and
        renamed CoreTextController to ComplexTextController and CoreTextRun to ComplexTextRun. Made
        the latter RefCounted, added ATSUI-specific members to it, and made some other members
        Core Text-specific. Renamed m_coreTextRuns to m_complexTextRuns and made it hold references
        rather than objects.
        (WebCore::ComplexTextController::ComplexTextRun::create):
        (WebCore::ComplexTextController::ComplexTextRun::glyphs):
        (WebCore::ComplexTextController::ComplexTextRun::advances):

        * platform/graphics/mac/ComplexTextControllerATSUI.cpp: Added. Includes ATSUI-specific
        parts of the ComplexTextController implementation. 
        (WebCore::ComplexTextController::ComplexTextRun::overrideLayoutOperation): This ATSUI
        callback populates the ComplexTextRun’s glyphs, advances and indices vectors. It is invoked
        when the ComplexTextRun constructor calls ATSUGetGlyphBounds().
        (WebCore::isArabicLamWithAlefLigature): Helper function, copied from FontMacATSUI.mm.
        (WebCore::shapeArabic): Helper function, adapted from FontMacATSUI.mm.
        (WebCore::ComplexTextController::ComplexTextRun::ComplexTextRun): Sets up the
        ATSUTextLayout, substituting the text buffer if necessary for things like shaping Arabic,
        mirroring glyphs or directionality overrides, then calls ATSUGetGlyphBounds() in order to
        get the glyphs, advances and indices vectors populated.
        (WebCore::fontHasMirroringInfo): Helper function, copied from FontMacATSUI.mm.
        (WebCore::disableLigatures): Ditto.
        (WebCore::initializeATSUStyle): Ditto, somewhat cleaned up and simplified.
        (WebCore::ComplexTextController::collectComplexTextRunsForCharacters): Constructs
        ComplexTextRuns, either missing-glyphs ones or ATSUTextLayout-based ones.

        * platform/graphics/mac/ComplexTextControllerCoreText.cpp: Copied from
        CoreTextController.cpp and kept the Core Text-specific bits.
        (WebCore::ComplexTextController::ComplexTextRun::ComplexTextRun): Updated for renames,
        including its own, and moved the code to initialize m_glyphs and m_advances here. Previously
        this was done in adjustGlyphsAndAdvances().
        (WebCore::ComplexTextController::collectComplexTextRunsForCharacters): Updated for renames,
        including its own.
        * platform/graphics/mac/CoreTextController.cpp: Removed.
        * platform/graphics/mac/CoreTextController.h: Removed.
        * platform/graphics/mac/FontComplexTextMac.cpp: Renamed FontMacCoreText.cpp to this.
        (WebCore::Font::selectionRectForComplexText): Changed to use ComplexTextController instead
        of CoreTextController.
        (WebCore::Font::drawComplexText): Ditto.
        (WebCore::Font::floatWidthForComplexText): Ditto.
        (WebCore::Font::offsetForPositionForComplexText): Ditto.
        * platform/graphics/mac/FontMacATSUI.mm: Removed.
        * platform/graphics/mac/FontMacCoreText.cpp: Removed.

2009-10-27  Chris Fleizach  <cfleizach@apple.com>

        Reviewed by Darin Adler.

        WAI-ARIA: add support for 'option' role
        https://bugs.webkit.org/show_bug.cgi?id=30843

        Test: accessibility/aria-option-role.html

        * accessibility/AccessibilityListBoxOption.h:
        (WebCore::AccessibilityListBoxOption::canHaveChildren):
        * accessibility/AccessibilityRenderObject.cpp:
        (WebCore::RoleEntry::):
        (WebCore::AccessibilityRenderObject::canHaveChildren):

2009-10-28  Jens Alfke  <snej@chromium.org>

        Reviewed by Eric Seidel.

        Fix GCC compiler warnings in WebCore, and enable -Wall and -Werror for Chromium build.
        https://bugs.webkit.org/show_bug.cgi?id=30716

        * WebCore.gyp/WebCore.gyp:  Enable "chromium_code" flag, just on Mac build for now.
        * accessibility/AccessibilityRenderObject.cpp:
        (WebCore::createARIARoleMap):  Fix struct visibiity warning.
        * bindings/v8/ScriptCallStack.h:  Fix out-of-order member initialization warning.
        * bindings/v8/V8Collection.h:
        (WebCore::getV8Object):  Function in header should not be 'static' (fixes unused-static warning.)
        * bindings/v8/V8DOMWrapper.cpp:
        (WebCore::V8DOMWrapper::convertNewNodeToV8Object):  Fix signed/unsigned comparison warning.
        * bindings/v8/V8GCController.cpp:
        (WebCore::ObjectGrouperVisitor::applyGrouping):  Fix unused-variable warning.
        * css/CSSPrimitiveValueMappings.h:
        (WebCore::CSSPrimitiveValue::CSSPrimitiveValue):  Enable ListButtonPart case to avoid
            warning about missing cases in 'switch' statement.
        * editing/EditorCommand.cpp:
        (WebCore::createCommandMap):  Fix struct visibiity warning.
        * platform/graphics/skia/PlatformContextSkia.cpp:
        (PlatformContextSkia::State::State):  Fix out-of-order member initialization warning.
        * rendering/RenderMediaControlsChromium.cpp:
        (WebCore::RenderMediaControlsChromium::shouldRenderMediaControlPart):  Add empty 'default' case in
            'switch' statement to avoid missing-case warning.
        (WebCore::RenderMediaControlsChromium::paintMediaControlsPart):  Ditto.
        * xml/XPathFunctions.cpp:
        (WebCore::XPath::createFunctionMap):  Fix struct visibiity warning.

2009-10-29  Adam Barth  <abarth@webkit.org>

        Reviewed by Darin Adler.

        REGRESSION: crashes in WebCore::RedirectScheduler::timerFired(WebCore::Timer<WebCore::RedirectScheduler>*)
        https://bugs.webkit.org/show_bug.cgi?id=30839

        Added null check for the case when the frame is detached from the page.

        * loader/RedirectScheduler.cpp:
        (WebCore::RedirectScheduler::timerFired):

2009-10-28  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Xan Lopez.

        https://bugs.webkit.org/show_bug.cgi?id=30817
        Use parentObjectUnignored instead of parentObject in webkit_accessible_get_parent

        Also removes the hack I had originally added to solve bug 25411, because
        the fix here is what I should have done in the first place.

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (webkit_accessible_get_parent):

2009-10-28  Dmitry Titov  <dimich@chromium.org>

        Reviewed by David Levin.

        https://bugs.webkit.org/show_bug.cgi?id=30805
        Add MessageQueue::removeIf(Predicate&) to remove certain tasks without pulling them from the queue.
        Existing Database tests cover this, no change in functionality.

        * storage/DatabaseThread.cpp:
        (WebCore::SameDatabasePredicate::SameDatabasePredicate): Added predicate that flags the tasks belonging to a specified database.
        (WebCore::SameDatabasePredicate::operator()):
        (WebCore::DatabaseThread::unscheduleDatabaseTasks): changed to use the new removeIf method.

2009-10-28  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Glue subsequent timeline records with same category
        and title together.

        https://bugs.webkit.org/show_bug.cgi?id=30885

        * English.lproj/localizedStrings.js:
        * inspector/front-end/TimelinePanel.js:
        (WebInspector.TimelinePanel.prototype.addRecordToTimeline):
        (WebInspector.TimelinePanel.prototype._formatRecord):
        (WebInspector.TimelineRecordTreeElement.prototype.onattach):
        (WebInspector.TimelineRecordTreeElement.prototype.refresh):

2009-10-28  Gustavo Noronha Silva  <gustavo.noronha@collabora.co.uk>

        Reviewed by Xan Lopez.

        [GTK] Fails new test fast/js/navigator-language.html
        https://bugs.webkit.org/show_bug.cgi?id=30440

        Reimplement WebCore::defaultLanguage to account for changes in
        locale done by setLocale.

        Already existing test: fast/js/navigator-language.html

        * platform/gtk/Language.cpp:
        (WebCore::defaultLanguage):

2009-10-28  Eric Carlson  <eric.carlson@apple.com>

        Reviewed by Simon Fraser.

        <rdar://problem/7303145> 
        Can't exit full screen mode or restart movie after pressing command -R.

        * html/HTMLMediaElement.cpp:
        (WebCore::HTMLMediaElement::removedFromDocument):
        (WebCore::HTMLMediaElement::documentWillBecomeInactive):
            Exit from fullscreen if necessary.
        * html/HTMLMediaElement.h:

2009-10-28  Alexey Proskuryakov  <ap@apple.com>

        Unreviewed - a trivial fix to get Windows bots running.

        https://bugs.webkit.org/show_bug.cgi?id=30841
        <rdar://problem/7342730> WebKit should not pass Referer header through a redirect to a non-secure site

        * platform/network/cf/ResourceRequestCFNet.cpp: (WebCore::setHeaderFields): Don't try to
        access empty vector's data.

2009-10-28  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Xan Lopez.

        https://bugs.webkit.org/show_bug.cgi?id=25897
        [Gtk] Extraneous object of ROLE_PANEL in hierarchy for entries

        Remove the extraneous object of ROLE_PANEL.

        * accessibility/gtk/AccessibilityObjectAtk.cpp:
        (AccessibilityObject::accessibilityPlatformIncludesObject):

2009-10-28  Jonathan Dixon  <joth@chromium.org>

        Reviewed by Eric Seidel.

        Bug 30547: (Chromium) searchbox not rendered properly due to the css property -webkit-border-radius
        https://bugs.webkit.org/show_bug.cgi?id=30547

        Test: fast/css/text-input-with-webkit-border-radius.html

        * rendering/RenderThemeChromiumWin.cpp:
        (WebCore::RenderThemeChromiumWin::paintTextFieldInternal):
          Implemented rounded border rendering in Chromium Windows theme renderer.

2009-10-28  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Pull items collections from resources panel and
        timeline panel into AbstractTimelinePanel.

        https://bugs.webkit.org/show_bug.cgi?id=30875

        * inspector/front-end/AbstractTimelinePanel.js:
        (WebInspector.AbstractTimelinePanel):
        (WebInspector.AbstractTimelinePanel.prototype.populateSidebar):
        (WebInspector.AbstractTimelinePanel.prototype.createItemTreeElement):
        (WebInspector.AbstractTimelinePanel.prototype.createItemGraph):
        (WebInspector.AbstractTimelinePanel.prototype._showCategory):
        (WebInspector.AbstractTimelinePanel.prototype._hideCategory):
        (WebInspector.AbstractTimelinePanel.prototype.filter):
        (WebInspector.AbstractTimelinePanel.prototype._createGraph):
        (WebInspector.AbstractTimelinePanel.prototype.updateMainViewWidth):
        (WebInspector.AbstractTimelinePanel.prototype.refresh):
        (WebInspector.AbstractTimelinePanel.prototype.reset):
        (WebInspector.AbstractTimelinePanel.prototype.get calculator):
        (WebInspector.AbstractTimelinePanel.prototype.set calculator):
        (WebInspector.AbstractTimelinePanel.prototype.addItem):
        (WebInspector.AbstractTimelinePanel.prototype.removeItem):
        (WebInspector.AbstractTimelinePanel.prototype.refreshItem):
        (WebInspector.AbstractTimelinePanel.prototype.revealAndSelectItem):
        (WebInspector.AbstractTimelinePanel.prototype.sortItems):
        (WebInspector.AbstractTimelinePanel.prototype.adjustScrollPosition):
        (WebInspector.AbstractTimelineCategory):
        (WebInspector.AbstractTimelineCategory.prototype.toString):
        * inspector/front-end/ResourceCategory.js:
        (WebInspector.ResourceCategory):
        * inspector/front-end/ResourcesPanel.js:
        (WebInspector.ResourcesPanel):
        (WebInspector.ResourcesPanel.prototype.createItemTreeElement):
        (WebInspector.ResourcesPanel.prototype.createItemGraph):
        (WebInspector.ResourcesPanel.prototype.isCategoryVisible):
        (WebInspector.ResourcesPanel.prototype.populateSidebar):
        (WebInspector.ResourcesPanel.prototype.get searchableViews):
        (WebInspector.ResourcesPanel.prototype.get searchResultsSortFunction.sortFuction):
        (WebInspector.ResourcesPanel.prototype.get searchResultsSortFunction):
        (WebInspector.ResourcesPanel.prototype.searchMatchFound):
        (WebInspector.ResourcesPanel.prototype.searchCanceled):
        (WebInspector.ResourcesPanel.prototype.performSearch):
        (WebInspector.ResourcesPanel.prototype.refresh):
        (WebInspector.ResourcesPanel.prototype.reset):
        (WebInspector.ResourcesPanel.prototype.removeResource):
        (WebInspector.ResourcesPanel.prototype.addMessageToResource):
        (WebInspector.ResourcesPanel.prototype.clearMessages):
        (WebInspector.ResourcesPanel.prototype.refreshResource):
        (WebInspector.ResourcesPanel.prototype.recreateViewForResourceIfNeeded):
        (WebInspector.ResourcesPanel.prototype.showResource):
        (WebInspector.ResourcesPanel.prototype._sortResourcesIfNeeded):
        (WebInspector.ResourcesPanel.prototype._toggleLargerResources):
        (WebInspector.ResourcesPanel.prototype._toggleResourceTracking):
        (WebInspector.ResourcesPanel.prototype.get _resources):
        (WebInspector.ResourceTimeCalculator.prototype._upperBound):
        * inspector/front-end/TimelinePanel.js:
        (WebInspector.TimelinePanel):
        (WebInspector.TimelinePanel.prototype.get categories):
        (WebInspector.TimelinePanel.prototype.populateSidebar):
        (WebInspector.TimelinePanel.prototype.addRecordToTimeline):
        (WebInspector.TimelinePanel.prototype.createItemTreeElement):
        (WebInspector.TimelinePanel.prototype.createItemGraph):
        (WebInspector.TimelinePanel.prototype._formatRecord):
        (WebInspector.TimelineCategory):
        * inspector/front-end/inspector.css:
        * inspector/front-end/inspector.html:

2009-10-28  Kelly Norton  <knorton@google.com>

        Reviewed by Pavel Feldman.

        Resets InspectorFrontend in InspectorTimelineAgent instead of removing it so
        that it remains active on refreshs and page transitions.
        https://bugs.webkit.org/show_bug.cgi?id=30874

        * inspector/InspectorController.cpp:
        (WebCore::InspectorController::setFrontendProxyObject):
        * inspector/InspectorTimelineAgent.cpp:
        (WebCore::InspectorTimelineAgent::resetFrontendProxyObject):
        * inspector/InspectorTimelineAgent.h:

2009-10-27  Shinichiro Hamaji  <hamaji@chromium.org>

        Reviewed by Darin Adler.

        Provide a way to get counter values with layoutTestContoller
        https://bugs.webkit.org/show_bug.cgi?id=30555

        Expose WebCore::counterValueForElement as a WebCore API.

        * WebCore.base.exp:
        * rendering/RenderTreeAsText.cpp:
        (WebCore::writeCounterValuesFromChildren):
        (WebCore::counterValueForElement):
        * rendering/RenderTreeAsText.h:

2009-10-28  Nate Chapin  <japhet@chromium.org>

        Unreviewed, Chromium build fix for r50225.

        * loader/FrameLoader.cpp:
        (WebCore::FrameLoader::defaultObjectContentType):

2009-10-28  Eric Z. Ayers  <zundel@google.com>

        Reviewed by Pavel Feldman.

        Adds InspectorTimelineAgent  instrumentation for encountering a
        <SCRIPT> tag when parsing an HTML document. 

        https://bugs.webkit.org/show_bug.cgi?id=30861

        * bindings/js/ScriptSourceCode.h:
        (WebCore::ScriptSourceCode::ScriptSourceCode):
        (WebCore::ScriptSourceCode::startLine):
        (WebCore::ScriptSourceCode::url):
        * html/HTMLTokenizer.cpp:
        (WebCore::HTMLTokenizer::scriptHandler):
        (WebCore::HTMLTokenizer::scriptExecution):
        * inspector/InspectorTimelineAgent.cpp:
        (WebCore::InspectorTimelineAgent::willLoadXHR):
        (WebCore::InspectorTimelineAgent::willScriptTag):
        (WebCore::InspectorTimelineAgent::didScriptTag):
        * inspector/InspectorTimelineAgent.h:
        (WebCore::):
        * inspector/TimelineRecordFactory.cpp:
        (WebCore::TimelineRecordFactory::createScriptTagTimelineRecord):
        * inspector/TimelineRecordFactory.h:
        * inspector/front-end/TimelineAgent.js:

2009-10-28  Steve Block  <steveblock@google.com>

        Reviewed by Darin Adler.

        Makes sure that Geolocation watch IDs remain positive on overflow.
        https://bugs.webkit.org/show_bug.cgi?id=30122

        No new tests possible.

        * page/Geolocation.cpp: Modified.
        (WebCore::Geolocation::watchPosition): Modified. Reset the watch ID to 1 on overflow.

2009-10-28  George Staikos  <george.staikos@torchmobile.com>

        Attempt to fix the Mac debug build after 50225.

        * loader/FrameLoader.cpp:
        (WebCore::FrameLoader::defaultObjectContentType):

2009-10-28  Alexey Proskuryakov  <ap@apple.com>

        Reviewed by Darin Adler.

        https://bugs.webkit.org/show_bug.cgi?id=30841
        <rdar://problem/7342730> WebKit should not pass Referer header through a redirect to a non-secure site

        Tests: http/tests/ssl/referer-301.html
               http/tests/ssl/referer-303.html

        * platform/network/mac/ResourceHandleMac.mm:
        (-[WebCoreResourceHandleAsDelegate connection:willSendRequest:redirectResponse:]):
        Remove Referer header if redirecting from https to another protocol.

        * platform/network/ResourceRequestBase.cpp:
        (WebCore::ResourceRequestBase::clearHTTPReferrer): Update request counterparts, as it is
        always done when changing or adding header fields.
        (WebCore::ResourceRequestBase::clearHTTPOrigin): Ditto.

        * platform/network/ResourceRequestBase.h: clearHTTPReferrer() and clearHTTPOrigin() are
        no longer inline, since they have non-trivial implementations.

        * platform/network/mac/ResourceRequestMac.mm:
        (WebCore::ResourceRequest::doUpdatePlatformRequest): Fixed to synchronize header field removals.
        (WebCore::ResourceRequest::doUpdateResourceRequest): Ditto.

        * platform/network/cf/ResourceHandleCFNet.cpp:
        (WebCore::willSendRequest):
        * platform/network/cf/ResourceRequestCFNet.cpp:
        (WebCore::setHeaderFields):
        (WebCore::ResourceRequest::doUpdatePlatformRequest):
        (WebCore::ResourceRequest::doUpdateResourceRequest):
        Match Mac changes.
        
2009-10-28  Joe Mason  <jmason@rim.com>

        Reviewed by Adam Treat.

        Add FrameLoader::defaultObjectContentType, containing common code for
        implementing FrameLoaderClient::objectContentType.  (Currently the gtk
        and win ports have copied this code, and the qt port uses similar code
        with a few extra clauses.  Moving this to a utility function cuts down
        on copied code.)   This causes no behavioural change.

        https://bugs.webkit.org/show_bug.cgi?id=30868

        * loader/FrameLoader.cpp:
        (WebCore::FrameLoader::defaultObjectContentType):
        * loader/FrameLoader.h:

2009-10-28  Kenneth Rohde Christiansen  <kenneth@webkit.org>

        Reviewed by Tor Arne Vestbø.

        [Qt] QWebHistory::saveState() is inconsistent with the Qt API
        https://bugs.webkit.org/show_bug.cgi?id=30710

        Enforce the versioning, by ignoring any version different
        from 1.

        * history/qt/HistoryItemQt.cpp:
        (WebCore::HistoryItem::restoreState):
        (WebCore::HistoryItem::saveState):

2009-10-28  Pavel Feldman  <pfeldman@chromium.org>

        Not reviewed: follow up fix to InspectorControllerStub.
        Define it after inspector.js due to namespace

        https://bugs.webkit.org/show_bug.cgi?id=30866

        * inspector/front-end/inspector.html:

2009-10-28  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Add InspectorController stub in order to
        support opening in standalone mode.

        https://bugs.webkit.org/show_bug.cgi?id=30866

        * WebCore.gypi:
        * WebCore.vcproj/WebCore.vcproj:
        * inspector/front-end/InspectorControllerStub.js: Added.
        (.WebInspector.InspectorControllerStub):
        (.WebInspector.InspectorControllerStub.prototype.wrapCallback):
        (.WebInspector.InspectorControllerStub.prototype.isWindowVisible):
        (.WebInspector.InspectorControllerStub.prototype.platform):
        (.WebInspector.InspectorControllerStub.prototype.closeWindow):
        (.WebInspector.InspectorControllerStub.prototype.attach):
        (.WebInspector.InspectorControllerStub.prototype.detach):
        (.WebInspector.InspectorControllerStub.prototype.storeLastActivePanel):
        (.WebInspector.InspectorControllerStub.prototype.clearMessages):
        (.WebInspector.InspectorControllerStub.prototype.searchingForNode):
        (.WebInspector.InspectorControllerStub.prototype.search):
        (.WebInspector.InspectorControllerStub.prototype.toggleNodeSearch):
        (.WebInspector.InspectorControllerStub.prototype.setAttachedWindowHeight):
        (.WebInspector.InspectorControllerStub.prototype.moveByUnrestricted):
        (.WebInspector.InspectorControllerStub.prototype.addResourceSourceToFrame):
        (.WebInspector.InspectorControllerStub.prototype.addSourceToFrame):
        (.WebInspector.InspectorControllerStub.prototype.getResourceDocumentNode):
        (.WebInspector.InspectorControllerStub.prototype.highlightDOMNode):
        (.WebInspector.InspectorControllerStub.prototype.hideDOMNodeHighlight):
        (.WebInspector.InspectorControllerStub.prototype.inspectedWindow):
        (.WebInspector.InspectorControllerStub.prototype.loaded):
        (.WebInspector.InspectorControllerStub.prototype.localizedStringsURL):
        (.WebInspector.InspectorControllerStub.prototype.windowUnloading):
        (.WebInspector.InspectorControllerStub.prototype.hiddenPanels):
        (.WebInspector.InspectorControllerStub.prototype.debuggerEnabled):
        (.WebInspector.InspectorControllerStub.prototype.enableResourceTracking):
        (.WebInspector.InspectorControllerStub.prototype.disableResourceTracking):
        (.WebInspector.InspectorControllerStub.prototype.resourceTrackingEnabled):
        (.WebInspector.InspectorControllerStub.prototype.enableDebugger):
        (.WebInspector.InspectorControllerStub.prototype.disableDebugger):
        (.WebInspector.InspectorControllerStub.prototype.addBreakpoint):
        (.WebInspector.InspectorControllerStub.prototype.removeBreakpoint):
        (.WebInspector.InspectorControllerStub.prototype.updateBreakpoint):
        (.WebInspector.InspectorControllerStub.prototype.pauseInDebugger):
        (.WebInspector.InspectorControllerStub.prototype.pauseOnExceptions):
        (.WebInspector.InspectorControllerStub.prototype.setPauseOnExceptions):
        (.WebInspector.InspectorControllerStub.prototype.resumeDebugger):
        (.WebInspector.InspectorControllerStub.prototype.profilerEnabled):
        (.WebInspector.InspectorControllerStub.prototype.enableProfiler):
        (.WebInspector.InspectorControllerStub.prototype.disableProfiler):
        (.WebInspector.InspectorControllerStub.prototype.startProfiling):
        (.WebInspector.InspectorControllerStub.prototype.stopProfiling):
        (.WebInspector.InspectorControllerStub.prototype.getProfileHeaders):
        (.WebInspector.InspectorControllerStub.prototype.getProfile):
        (.WebInspector.InspectorControllerStub.prototype.takeHeapSnapshot):
        (.WebInspector.InspectorControllerStub.prototype.databaseTableNames):
        (.WebInspector.InspectorControllerStub.prototype.stepIntoStatementInDebugger):
        (.WebInspector.InspectorControllerStub.prototype.stepOutOfFunctionInDebugger):
        (.WebInspector.InspectorControllerStub.prototype.stepOverStatementInDebugger):
        (.WebInspector.InspectorControllerStub.prototype.setSetting):
        (.WebInspector.InspectorControllerStub.prototype.dispatchOnInjectedScript):
        (.WebInspector.InspectorControllerStub.prototype.releaseWrapperObjectGroup):
        (.WebInspector.InspectorControllerStub.prototype.setting):
        * inspector/front-end/inspector.html:
        * inspector/front-end/inspector.js:
        (WebInspector.UIString):

2009-10-28  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Jan Alonzo.

        https://bugs.webkit.org/show_bug.cgi?id=25897
        [Gtk] Extraneous object of ROLE_PANEL in hierarchy for entries

        Expands upon the new funtionality which allows platforms to indicate
        that a particular object should not be ignored, so that they can
        specify that an object should be ignored or that it should be left up
        to the default handling to decide.

        * accessibility/AccessibilityObject.h:
        * accessibility/chromium/AccessibilityObjectChromium.cpp:
        * accessibility/gtk/AccessibilityObjectAtk.cpp:
        * accessibility/mac/AccessibilityObjectMac.mm:
        * accessibility/qt/AccessibilityObjectQt.cpp:
        * accessibility/win/AccessibilityObjectWin.cpp:
        * accessibility/wx/AccessibilityObjectWx.cpp:
        (AccessibilityObject::accessibilityPlatformIncludesObject):
        * accessibility/AccessibilityRenderObject.cpp:
        (AccessibilityRenderObject::accessibilityIsIgnored):


2009-10-28  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Jan Alonzo.

        https://bugs.webkit.org/show_bug.cgi?id=25534
        [GTK] Objects of ROLE_TABLE should implement the accessible table interface

        Expose the table summary as the accessible description because there is no summary object.

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (webkit_accessible_get_description):

2009-10-28  Steve Block  <steveblock@google.com>

        Reviewed by Eric Seidel.

        Adds ScriptController::intializeThreading(), with both JSC and V8 implementations.
        https://bugs.webkit.org/show_bug.cgi?id=30678

        This new method is used from common code, rather than calling JSC::initializeThreading() (or the V8 equivalent) directly.

        Build fix, no new tests required.

        * bindings/js/ScriptController.cpp: Modified.
        (WebCore::ScriptController::initializeThreading): Added.
        * bindings/js/ScriptController.h: Modified. Adds ScriptController::initializeThreading().
        * bindings/v8/ScriptController.cpp: Modified.
        (WebCore::ScriptController::initializeThreading): Added.
        * bindings/v8/ScriptController.h: Modified. Adds ScriptController::initializeThreading().
        * loader/icon/IconDatabase.cpp: Modified.
        (WebCore::iconDatabase): Call ScriptController::initializeThreading(), rather than JSC::initializeThreading().
        * storage/Database.cpp: Modified.
        (WebCore::Database::Database): Call ScriptController::initializeThreading(), rather than JSC::initializeThreading().

2009-10-26  Holger Hans Peter Freyther  <zecke@selfish.org>

        Reviewed by Darin Adler.

        Document a feature of the m_liveDecodedResources list.
        https://bugs.webkit.org/show_bug.cgi?id=30209

        The code made the assumption that the list is sorted by
        the m_lastDecodedAccessTime property of the CachedResource.
        The above is not true when CachedResource::setDecodedSize
        is called and the item is inserted the first time. In this
        case the m_lastDecodedAccessTime is still zero and the
        m_liveDecodedResources list becomes unsorted.

        It is impossible that Cache::pruneLiveResources will
        stop to process the list too early due this feature and
        the alternatives of updating m_lastDecodedAccessTime in
        CachedResource::setDecodedSize or changing the insert
        to search the right position have a negative impact on
        performance. The best solution for now is to document
        this feature.

        * loader/Cache.cpp:
        (WebCore::Cache::pruneLiveResources):
        * loader/CachedResource.cpp:
        (WebCore::CachedResource::setDecodedSize):

2009-10-28  Xan Lopez  <xlopez@igalia.com>

        Reviewed by Jan Alonzo.

        [Gtk] Extraneous object of ROLE_PANEL in hierarchy for entries
        https://bugs.webkit.org/show_bug.cgi?id=25897

        Make text controls always implement the text interface, and the
        editable text interface when they are not read only. This is what
        ATK-users expect.

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (getInterfaceMaskFromObject):

2009-10-27  Holger Hans Peter Freyther  <zecke@selfish.org>

        Reviewed by Simon Fraser.

        Change HitTestResult methods to use (3d) transformation aware methods
        https://bugs.webkit.org/show_bug.cgi?id=27347

        The current HitTestResult methods are not using the (3d)
        transformation aware routines. This can lead to an assertion
        SVGRenderBase::mapLocalToContainer method.

        Change HitTestResult::imageRect to use the (3d) transformation
        aware RenderBox::absoluteContentQuad to avoid running into
        an assertion with SVG content.

        Remove HitTestResult::boundingBox() as it is only used in
        two places and conceptually doesn't belong into a HitTest
        which is operating on points.

        A classic test case is not possible as the methods are not excercised
        from within HTML/SVG but from the WebKit API Layer. A unittest
        for Qt/Gtk+/Mac would need to be written but Qt/Gtk+ currently
        do not support 3d transformations making it impossible to write
        a reliable test case and the Mac port is currently not doing
        unit testing.


        * rendering/HitTestResult.cpp: Remove boundingBox() method
        (WebCore::HitTestResult::imageRect): Use transformation aware method
        * rendering/HitTestResult.h: Remove boundingBox()

2009-10-26  Holger Hans Peter Freyther  <zecke@selfish.org>

        Reviewed by Eric Seidel.

        [Qt] Custom Cursor doesn't use hotspot.
        https://bugs.webkit.org/show_bug.cgi?id=30820

        Cursors loaded from a QPixmap didn't specifiy the
        hotspot. Take the hotspot values from the mac
        implementation.

        * platform/qt/CursorQt.cpp:

2009-10-27  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Initial revision of the Timeline grid.

        https://bugs.webkit.org/show_bug.cgi?id=30834

        * English.lproj/localizedStrings.js:
        * WebCore.gypi:
        * inspector/front-end/AbstractTimelinePanel.js:
        (WebInspector.AbstractTimelinePanel.prototype.populateSidebar):
        (WebInspector.AbstractTimelinePanel.prototype.refresh):
        (WebInspector.AbstractTimelineCalculator):
        * inspector/front-end/Images/timelineBarBlue.png: Added.
        * inspector/front-end/Images/timelineBarGray.png: Added.
        * inspector/front-end/Images/timelineBarGreen.png: Added.
        * inspector/front-end/Images/timelineBarOrange.png: Added.
        * inspector/front-end/Images/timelineBarPurple.png: Added.
        * inspector/front-end/Images/timelineBarRed.png: Added.
        * inspector/front-end/Images/timelineBarYellow.png: Added.
        * inspector/front-end/Images/timelineCheckmarks.png: Added.
        * inspector/front-end/Images/timelineDots.png: Added.
        * inspector/front-end/ResourcesPanel.js:
        (WebInspector.ResourceTimeCalculator):
        (WebInspector.ResourceTransferSizeCalculator):
        * inspector/front-end/TimelineAgent.js:
        * inspector/front-end/TimelinePanel.js:
        (WebInspector.TimelinePanel):
        (WebInspector.TimelinePanel.prototype.get statusBarItems):
        (WebInspector.TimelinePanel.prototype.get categories):
        (WebInspector.TimelinePanel.prototype.populateSidebar):
        (WebInspector.TimelinePanel.prototype._createStatusbarButtons):
        (WebInspector.TimelinePanel.prototype.addItemToTimeline):
        (WebInspector.TimelinePanel.prototype.refresh):
        (WebInspector.TimelinePanel.prototype._toggleTimelineButtonClick):
        (WebInspector.TimelinePanel.prototype.reset):
        (WebInspector.TimelinePanel.prototype._formatRecord):
        (WebInspector.TimelinePanel.prototype.showCategory):
        (WebInspector.TimelinePanel.prototype.hideCategory):
        (WebInspector.TimelineRecordTreeElement):
        (WebInspector.TimelineRecordTreeElement.prototype.onattach):
        (WebInspector.TimelineCalculator):
        (WebInspector.TimelineCalculator.prototype.computeBarGraphPercentages):
        (WebInspector.TimelineCalculator.prototype.computePercentageFromEventTime):
        (WebInspector.TimelineCalculator.prototype.computeBarGraphLabels):
        (WebInspector.TimelineCalculator.prototype.updateBoundaries):
        (WebInspector.TimelineCalculator.prototype.formatValue):
        (WebInspector.TimelineGraph):
        (WebInspector.TimelineGraph.prototype.get graphElement):
        (WebInspector.TimelineGraph.prototype.refreshLabelPositions):
        (WebInspector.TimelineGraph.prototype.refresh):
        * inspector/front-end/inspector.css:
        * inspector/front-end/inspector.js:
        (WebInspector._createPanels):

2009-10-27  Joseph Pecoraro  <joepeck@webkit.org>

        Reviewed by Pavel Feldman.

        Web Inspector: Move runAfterPendingDispatches to TestController for Clarity
        https://bugs.webkit.org/show_bug.cgi?id=30844

        * inspector/front-end/TestController.js:
        (WebInspector.TestController.prototype.runAfterPendingDispatches):
        * inspector/front-end/inspector.js: moved runAfterPendingDispatches

2009-10-27  Darin Fisher  <darin@chromium.org>

        Reviewed by Dimitri Glazkov.

        Add missing forward declaration of FramelessScrollView.
        https://bugs.webkit.org/show_bug.cgi?id=30824

        * platform/chromium/FramelessScrollViewClient.h:

2009-10-27  Chris Fleizach  <cfleizach@apple.com>

        Reviewed by Adele Peterson.

        WAI-ARIA: add support for 'presentation' role
        https://bugs.webkit.org/show_bug.cgi?id=30806

        Test: accessibility/aria-presentational-role.html

        * accessibility/AccessibilityObject.h:
        (WebCore::):
        * accessibility/AccessibilityRenderObject.cpp:
        (WebCore::AccessibilityRenderObject::accessibilityIsIgnored):
        (WebCore::RoleEntry::):

2009-10-27  Chris Fleizach  <cfleizach@apple.com>

        Reviewed by Darin Adler.

        ARIA menu/menu item need AXRoleDescription
        https://bugs.webkit.org/show_bug.cgi?id=30804

        Make sure that role descriptions will default to the system's first, before
        returning an unknown role.

        Test: platform/mac/accessibility/aria-menu-role-descriptions.html

        * accessibility/mac/AccessibilityObjectWrapper.mm:
        (-[AccessibilityObjectWrapper roleDescription]):

2009-10-27  Geoffrey Garen  <ggaren@apple.com>

        Qt build fix: migrated away from API that no longer exists.

        * bridge/qt/qt_runtime.cpp:
        (JSC::Bindings::convertQVariantToValue):

2009-10-27  Geoffrey Garen  <ggaren@apple.com>

        Qt build fix: migrated away from API that no longer exists.

        * bridge/qt/qt_runtime.cpp:
        (JSC::Bindings::convertValueToQVariant):

2009-10-27  Oliver Hunt  <oliver@apple.com>

        Fix wording in comment.

        * bridge/objc/objc_instance.mm:
        (allocateAutoReleasePool):

2009-10-27  Oliver Hunt  <oliver@apple.com>

        Reviewed by Darin Adler.

        Crash occurs after launching Newsfire 1.6 for the first time
        https://bugs.webkit.org/show_bug.cgi?id=30807

        We allocate an autorelease pool but then store it off the stack. In a
        GC environment this led to it being collected, and thus caused badness
        to ensue.  To work around this we simply avoid using a pool at all in
        a GC environment as it would be a no-op anyway.

        * bridge/objc/objc_instance.mm:
        (allocateAutoReleasePool):
        (ObjcInstance::virtualBegin):

2009-10-27  Steve Block  <steveblock@google.com>

        Reviewed by Darin Adler.

        When a Geolocation method is called, immediately calls the error calback asynchronously if permissions
        have already been denied.
        https://bugs.webkit.org/show_bug.cgi?id=27944.

        Tests: fast/dom/Geolocation/permission-denied-already-error.html
               fast/dom/Geolocation/permission-denied-already-success.html

        * page/Geolocation.cpp: Modified.
        (WebCore::Geolocation::GeoNotifier::GeoNotifier): Modified. GeoNotifier takes Geolocation object as constructor argument.
        (WebCore::Geolocation::GeoNotifier::setFatalError): Added. Sets a fatal error for this notifier, causing it to terminate immediately and call the error callback asynchronously.
        (WebCore::Geolocation::GeoNotifier::timerFired): Added. Used to call the error callback asynchronously on fatal error.
        (WebCore::Geolocation::getCurrentPosition): Modified. Calls startRequest.
        (WebCore::Geolocation::watchPosition): Modified. Calls startRequest.
        (WebCore::Geolocation::startRequest): Added. Common functionality for starting a one-shot or watch request. Sets a fatal error on the notifier if permissions have already been denied.
        (WebCore::Geolocation::fatalErrorOccurred): Added. Registers that a notifier has encountered a fatal error and should be destroyed.
        (WebCore::Geolocation::setIsAllowed): Modified. Uses a standard error message for the error callback when permissions are denied.
        * page/Geolocation.h: Modified.
        (WebCore::Geolocation::isDenied): Added. Determines whether permissions have been denied.

2009-10-27  Chris Marrin  <cmarrin@apple.com>

        Reviewed by Oliver Hunt.

        Fixed a bug where I was using the wrong Canvas pointer to do a cross-domain check
        https://bugs.webkit.org/show_bug.cgi?id=30840

        * html/canvas/CanvasRenderingContext2D.cpp:
        (WebCore::CanvasRenderingContext2D::drawImage):

2009-10-27  Eric Seidel  <eric@webkit.org>

        Reviewed by Nikolas Zimmermann.

        SVGStyledElement::getPresentationAttribute() can return a shared CSSValue (some SVG tests randomly fail on the bot, and in release builds)
        https://bugs.webkit.org/show_bug.cgi?id=29620

        SVG was modifying CSSValues cached of off CSSMappedAttributeDeclarations.
        This patch fixes the check to make sure that a new CSSMappedAttributeDeclaration is
        created before returning a CSSValue that JavaScript can modify.

        Test: svg/dom/getPresentationAttribute-cache-corruption.svg

        * svg/SVGStyledElement.cpp:
        (WebCore::SVGStyledElement::getPresentationAttribute):

2009-10-27  Dan Bernstein  <mitz@apple.com>

        Reviewed by Simon Fraser.

        Incomplete repaint of text field in relative positioned inline at imdb.com
        https://bugs.webkit.org/show_bug.cgi?id=30047

        Test: fast/repaint/inline-relative-positioned.html

        Implemented offsetFromContainer(), mapLocalToContainer() and
        mapAbsoluteToLocalPoint() in RenderInline.

        * rendering/RenderBox.h: Fixed argument names in the declaration of
        mapLocalToContainer().
        * rendering/RenderInline.cpp:
        (WebCore::RenderInline::offsetFromContainer):
        (WebCore::RenderInline::mapLocalToContainer):
        (WebCore::RenderInline::mapAbsoluteToLocalPoint):
        * rendering/RenderInline.h:

2009-10-27  Jeremy Orlow  <jorlow@chromium.org>

        Speculative build fix for Chromium.

        * platform/graphics/GraphicsContext3D.h:

2009-10-27  Chris Marrin  <cmarrin@apple.com>

        Reviewed by Simon Fraser.
        
        Make WebGL context failure more robust and make it succeed in more cases
        https://bugs.webkit.org/show_bug.cgi?id=30349

        Bubble a failure to get a CGLContext up to HTMLContextElement so it can
        return null from getContext. Also added a more robust pixel format choosing 
        mechanism and can render correctly when a SW renderer is chosen.

        * html/HTMLCanvasElement.cpp:
        (WebCore::HTMLCanvasElement::getContext):
        * html/canvas/CanvasRenderingContext.h:
        * html/canvas/CanvasRenderingContext2D.cpp:
        * html/canvas/CanvasRenderingContext3D.cpp:
        * html/canvas/CanvasRenderingContext3D.h:
        (WebCore::CanvasRenderingContext3D::graphicsContext3D):
        (WebCore::CanvasRenderingContext3D::cleanupAfterGraphicsCall):
        * platform/graphics/GraphicsContext3D.h:
        * platform/graphics/mac/Canvas3DLayer.mm:
        (-[Canvas3DLayer copyCGLPixelFormatForDisplayMask:]):
        * platform/graphics/mac/GraphicsContext3DMac.cpp:
        (WebCore::setPixelFormat):
        (WebCore::GraphicsContext3D::create):
        (WebCore::GraphicsContext3D::GraphicsContext3D):
        (WebCore::GraphicsContext3D::~GraphicsContext3D):
        (WebCore::GraphicsContext3D::reshape):
        (WebCore::ensureContext):

2009-10-27  Geoffrey Garen  <ggaren@apple.com>

        Mac build fix: a forwarding header.

        * ForwardingHeaders/wtf/DateInstanceCache.h: Added.

2009-10-27  Ryosuke Niwa  <rniwa@webkit.org>

        No Review.

        Making fontWeightIsBold static to fix Snow Leopard build.

        * editing/ApplyStyleCommand.cpp:
        (WebCore::fontWeightIsBold):

2009-10-27  Ryosuke Niwa  <rniwa@webkit.org>

        Reviewed by Eric Seidel.

        WebKit cannot remove nested bold tags
        https://bugs.webkit.org/show_bug.cgi?id=30784

        This patch modifies getPropertiesNotInComputedStyle so that it compares font-weight
        more flexibly. Instead of comparing cssText, it uses fontWeightIsBold which converts
        all font weights to either bold or unbold state.

        * editing/ApplyStyleCommand.cpp:
        (WebCore::fontWeightIsBold):
        (WebCore::getPropertiesNotInComputedStyle): Removes font-weight property
        if two style have the same value under getFontWeightValue

2009-10-27  Carol Szabo  <carol.szabo@nokia.com>

        Reviewed by Darin Adler.

        Give an ability to WebKit to free statically allocated pointers
        before quit.
        https://bugs.webkit.org/show_bug.cgi?id=27980

        No new tests for this as the change does not affect WebKit
        functionality, but only memory usage.

        * JavaScriptCore/wtf/StdLibExtras.h:
        Allowed for the override of DEFINE_STATIC_LOCAL via compiler 
        commandline options or elsewhere in the code. Useful for 
        implementing custom builds that free resources allocated via
        DEFINE_STATIC_LOCAL.

2009-10-27  Dumitru Daniliuc  <dumi@chromium.org>

        Build fix, no review needed.

        Fixing the BUILD. m_estimatedSize in Database.h should be of type
        'unsigned long' instead of 'unsigned long long'.

        No tests required.

        * storage/Database.h:

2009-10-27  Dumitru Daniliuc  <dumi@chromium.org>

        Reviewed by Adam Barth.

        Refactoring the Database class to not depend on
        OriginQuotaManager. Also, adding a SecurityOrigin copy to each
        Database instance, that is safe to use on the file
        thread. Finally, adding new simple fields and getters to the
        Database object for storing/getting the display name and estimated
        size specified by the user in the openDatabase() call.

        https://bugs.webkit.org/show_bug.cgi?id=30548

        * page/SecurityOrigin.h:
        * storage/Database.cpp:
        (WebCore::Database::openDatabase): Storing the display name and
        the estimated size in the Database object.
        (WebCore::Database::Database): Storing the display name and the
        estimated size in the Database object, as well as a SecurityOrigin
        instance that is safe to use on the DB thread.
        (WebCore::Database::maximumSize): Delegate the call to
        DatabaseTracker::getMaxSizeForDatabase().
        (WebCore::Database::databaseThreadSecurityOrigin): Return the
        SecurityOrigin instance that's safe to use on the DB thread.
        (WebCore::Database::threadSafeSecurityOrigin): Return the
        SecurityOrigin instance that's safe to use on the current thread.
        (WebCore::Database::displayName): Return the display name
        specified by the user in the openDatabase() call.
        (WebCore::Database::estimatedSize): Return the estimated size
        specified by the user in the openDatabase() call.
        (WebCore::Database::fileName): Return the name of the file where
        the current Database is tored.
        * storage/Database.h:
        * storage/DatabaseTracker.cpp:
        (WebCore::DatabaseTracker::getMaxSizeForDatabase): Returns the
        maximum size for a DB file based on the current size of that file
        and the space available for that origin.
        * storage/DatabaseTracker.h:
        * storage/SQLTransaction.cpp:
        * storage/SQLTransactionClient.cpp:
        (WebCore::SQLTransactionClient::didCommitTransaction): Use the
        correct SecurityOrigin instance.

2009-10-27  Joseph Pecoraro  <joepeck@webkit.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Pretty Print all HTML Collection Types like we do for NodeList
        https://bugs.webkit.org/show_bug.cgi?id=30709

        Test: inspector/console-format-collections.html

        * inspector/front-end/InjectedScript.js:
        (Object.type): check for instances of HTMLCollection like we do for NodeList
        * inspector/front-end/inspector.js: added WebInspector.pendingDispatches counter
        (WebInspector.dispatch): increment and decrement dispatch counter
        (WebInspector.runAfterPendingDispatches): run when there are no more dispatches

2009-10-27  Kelly Norton  <knorton@google.com>

        Reviewed by Timothy Hatcher.

        Adds XMLHttpRequest support to InspectorTimelineAgent.
        https://bugs.webkit.org/show_bug.cgi?id=30578

        * inspector/InspectorTimelineAgent.cpp:
        (WebCore::InspectorTimelineAgent::willChangeXHRReadyState):
        (WebCore::InspectorTimelineAgent::didChangeXHRReadyState):
        (WebCore::InspectorTimelineAgent::willLoadXHR):
        (WebCore::InspectorTimelineAgent::didLoadXHR):
        * inspector/InspectorTimelineAgent.h:
        (WebCore::):
        * inspector/TimelineRecordFactory.cpp:
        (WebCore::TimelineRecordFactory::createXHRReadyStateChangeTimelineRecord):
        (WebCore::TimelineRecordFactory::createXHRLoadTimelineRecord):
        * inspector/TimelineRecordFactory.h:
        * inspector/front-end/TimelineAgent.js:
        * xml/XMLHttpRequest.cpp:
        (WebCore::XMLHttpRequest::callReadyStateChangeListener):

2009-10-27  Enrica Casucci  <enrica@apple.com>

        Reviewed by Adele Peterson.

        REGRESSION (Safari 4.0.3-ToT): After pressing Shift-PageDown, pressing Shift-Up 
        extends the top of the selection upwards (but should shrink the selection instead)
        <rdar://problem/7269075>
        https://bugs.webkit.org/show_bug.cgi?id=29981

        * editing/SelectionController.cpp:
        (WebCore::SelectionController::modify): Added setting m_lastChangeWasHorizontalExtension.

2009-10-27  Brian Weinstein  <bweinstein@apple.com>

        Rubber-stamped by Tim Hatcher.
        
        Removed an extra console.log from ElementsTreeOutline.

        * inspector/front-end/ElementsTreeOutline.js:

2009-10-27  Keishi Hattori  <casey.hattori@gmail.com>

        Reviewed by Timothy Hatcher.

        Rewrote JavaScriptSourceSyntaxHighlighter to be more accurate
        https://bugs.webkit.org/show_bug.cgi?id=27147

        Tests: LayoutTests/inspector/javascript-syntax-highlight.html

        * inspector/front-end/ElementsTreeOutline.js:
        * inspector/front-end/SourceFrame.js:
        (WebInspector.JavaScriptSourceSyntaxHighlighter.process): Added. Processes 100 tokens at a time.
        (WebInspector.JavaScriptSourceSyntaxHighlighter.lex): Added. Scans for a token.
        (WebInspector.JavaScriptSourceSyntaxHighlighter.appendNonToken): Added. Appends the non-token characters that lex ignored.
        (WebInspector.JavaScriptSourceSyntaxHighlighter.syntaxHighlightNode): Added. To syntax highlight node in ElementsTreeOutline.

2009-10-27  Mads Ager  <ager@chromium.org>

        Reviewed by Adam Barth.

        [V8] Missing null check after string conversion in error reporting
        https://bugs.webkit.org/show_bug.cgi?id=30774

        Add null check after string conversion in error reporting code.
        ToString conversion can fail for instance when an exception is
        thrown during conversion.

        Test: fast/dom/error-to-string-stack-overflow.html

        * bindings/v8/V8Utilities.cpp:
        (WebCore::reportException):

2009-10-27  Steve Block  <steveblock@google.com>

        Reviewed by Darin Adler.

        Use a pair of maps to store Geolocation watchers.
        https://bugs.webkit.org/show_bug.cgi?id=29178

        The pair of maps allows us to look up a watcher either by its ID or by its GeoNotifier object.
        The ability to look up by a watcher by its GeoNotifier object will be required when implementing
        Geolocation::fatalErrorOccurred. See https://bugs.webkit.org/show_bug.cgi?id=27944

        * page/Geolocation.cpp: Modified.
        (WebCore::Geolocation::Watchers::set): Added. Adds a watcher with the given ID.
        (WebCore::Geolocation::Watchers::remove): Added. Removes a watcher by ID.
        (WebCore::Geolocation::Watchers::remove): Added. Removes a watcher by GeoNotifier object.
        (WebCore::Geolocation::Watchers::clear): Added. Removes all watchers.
        (WebCore::Geolocation::Watchers::isEmpty): Added. Determines if there are no watchers.
        (WebCore::Geolocation::Watchers::getNotifiersVector): Added. Gets a vector of the GeoNotifier objects.
        (WebCore::Geolocation::watchPosition): Modified. Rename watcher identifier static variable.
        (WebCore::Geolocation::stopTimersForWatchers): Modified. Use Watchers::getNotifiersVector.
        (WebCore::Geolocation::handleError): Modified. Use Watchers::getNotifiersVector.
        (WebCore::Geolocation::makeSuccessCallbacks): Modified. Use Watchers::getNotifiersVector.
        * page/Geolocation.h: Modified. Adds Geolocation::Watchers class.

2009-10-27  Jeremy Orlow  <jorlow@chromium.org>

        Reviewed by Dimitri Glazkov.

        [V8] DOM Storage runtime flag should default to on
        https://bugs.webkit.org/show_bug.cgi?id=30828

        The DOM Storage runtime flag was supposed to default to on.  I accidentally
        changed the logic to default to false when I moved the flag.

        * bindings/v8/RuntimeEnabledFeatures.cpp:

2009-10-27  Fumitoshi Ukai  <ukai@chromium.org>

        Reviewed by Dimitri Glazkov.

        Fix crash found in chromium test_shell.
        https://bugs.webkit.org/show_bug.cgi?id=30808

        When WebSocket is deleted without close, webkit would crash
        when it handles didClose.

        Check scriptExecutionContext before post task for event.
        Use WebSocketChannel::disconnect() instead of close() in WebSocket
        destructor, so that WebSocketChannel should not call deleted WebSocket
        back in didClose().
        To make sure WebSocketChannel alive while it is processing WebSocket
        protocol over SocketStreamHandle, ref() in connect() and deref() in
        didClose().

        * websockets/WebSocket.cpp:
        (WebCore::WebSocket::~WebSocket):
        (WebCore::WebSocket::didConnect):
        (WebCore::WebSocket::didReceiveMessage):
        (WebCore::WebSocket::didClose):
        * websockets/WebSocketChannel.cpp:
        (WebCore::WebSocketChannel::connect):
        (WebCore::WebSocketChannel::disconnect):
        (WebCore::WebSocketChannel::didClose):
        (WebCore::WebSocketChannel::didReceiveData):
        * websockets/WebSocketChannel.h:

2009-10-27  Dan Bernstein  <mitz@apple.com>

        Reviewed by Darin Adler.

        Updated Apple license

        * LICENSE-APPLE:

2009-10-27  Brady Eidson  <beidson@apple.com>

        Rubberstamped by Sam Weinig.

        Re-enable the check that disallows pages with unload handlers in the page cache.

        <rdar://problem/7196485> and http://webkit.org/b/29021 

        * loader/FrameLoader.cpp:
        (WebCore::FrameLoader::canCachePageContainingThisFrame):
        (WebCore::FrameLoader::logCanCacheFrameDecision):

2009-10-27  Timothy Hatcher  <timothy@apple.com>

        Remove more empty files that didn't get removed earlier.

        * inspector/DOMDispatchTimelineItem.cpp: Removed.
        * inspector/DOMDispatchTimelineItem.h: Removed.

2009-10-27  Andras Becsi  <becsi.andras@stud.u-szeged.hu>

        Reviewed by Tor Arne Vestbø.

        [Qt] Fix assertion crashes introduced by changes made in r50110.

        * dom/XMLTokenizerQt.cpp:
        (WebCore::XMLTokenizer::parseEndElement): only call popCurrentNode() if there are nodes left in the stack.

2009-10-27  Timothy Hatcher  <timothy@apple.com>

        Remove empty files that didn't get removed earlier.

        * inspector/TimelineItem.cpp: Removed.
        * inspector/TimelineItem.h: Removed.

2009-10-27  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Xan Lopez.

        https://bugs.webkit.org/show_bug.cgi?id=25534
        [GTK] Objects of ROLE_TABLE should implement the accessible table interface

        First part of the implementation of AtkTable.

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (getCell):
        (getCellIndex):
        (webkit_accessible_table_ref_at):
        (webkit_accessible_table_get_index_at):
        (webkit_accessible_table_get_n_columns):
        (webkit_accessible_table_get_n_rows):
        (webkit_accessible_table_get_column_extent_at):
        (webkit_accessible_table_get_row_extent_at):
        (webkit_accessible_table_get_row_header):
        (atk_table_interface_init):
        (AtkInterfacesInitFunctions):
        (GetAtkInterfaceTypeFromWAIType):

2009-10-27  Tor Arne Vestbø  <tor.arne.vestbo@nokia.com>

        Reviewed by Lars Knoll.

        [Qt] Don't lose remainder when computing wheel event deltas

        * platform/qt/WheelEventQt.cpp:

2009-10-27  Laszlo Gombos  <laszlo.1.gombos@nokia.com>

        Reviewed by Antti Koivisto.

        Fix QtWebKit build for WIN_OS if Netscape plug-in support
        is turned off and refactor some related code
        https://bugs.webkit.org/show_bug.cgi?id=30786

        No new tests as there is no new functionality introduced.

        * platform/FileSystem.h: Refactor to make sure that each different
        type definition is only repeated once.

        * plugins/PluginPackage.cpp:
        (WebCore::PluginPackage::compareFileVersion): Move it out from the
        ENABLE_PLUGIN_PACKAGE_SIMPLE_HASH guard and combine it with the
        function body from PluginPackageWin.

        * plugins/win/PluginPackageWin.cpp: Remove compareFileVersion as
        it is now in PluginPackage.cpp.

2009-10-26  Xan Lopez  <xlopez@igalia.com>

        Reviewed by Gustavo Noronha.

        https://bugs.webkit.org/show_bug.cgi?id=27011
        [Gtk] Implement support for get_index_in_parent

        Implement atk_object_get_index_in_parent.

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (webkit_accessible_get_index_in_parent):

2009-10-27  Eric Seidel  <eric@webkit.org>

        No review, rolling out r50131.
        http://trac.webkit.org/changeset/50131

        * bridge/objc/objc_instance.h:
        * bridge/objc/objc_instance.mm:
        (ObjcInstance::ObjcInstance):
        (ObjcInstance::virtualEnd):

2009-10-26  Daniel Bates  <dbates@webkit.org>

        Reviewed by Darin Adler.

        https://bugs.webkit.org/show_bug.cgi?id=30491

        Fixes an issue where pressing return/enter on the keyboard 
        in <isindex> does not submit it if is not within a <form>.

        According to the HTML 2.0 thru HTML 4.01 spec 
        (http://www.w3.org/MarkUp/html-spec/html-spec_7.html#SEC7.5), the 
        <isindex> element does not need to be within a <form> element in 
        order to submit it. It can submitted on its own. Also, if present,
        the href property of the <base> element will dictate where to submit
        the value of the <isindex> element (this is analogous to the action 
        property of the <form> element).

        Tests: http/tests/misc/isindex-with-no-form-base-href.html
               http/tests/misc/isindex-with-no-form.html

        * html/HTMLInputElement.cpp:
        (WebCore::HTMLInputElement::defaultEventHandler): Calls createTemporaryFormForIsIndex()
        to create a <form> if none is present and we are an <isindex> element.
        (WebCore::HTMLInputElement::createTemporaryFormForIsIndex): Added.
        * html/HTMLInputElement.h:

2009-10-26  Oliver Hunt  <oliver@apple.com>

        Reviewed by Maciej Stachowiak.

        Crash occurs after launching Newsfire 1.6 for the first time
        https://bugs.webkit.org/show_bug.cgi?id=30807

        Use a RetainPtr in ObjcBinding to ensure that we adequately
        protect the autorelease pool from GC in GC'd applications.

        * bridge/objc/objc_instance.h:
        * bridge/objc/objc_instance.mm:
        (ObjcInstance::ObjcInstance):
        (ObjcInstance::virtualEnd):

2009-10-26  Laszlo Gombos  <laszlo.1.gombos@nokia.com>

        Unreviewed.

        [Qt] Build fix for QtWebKit after r50125.

        * WebCore.pro: Rename TimelineItem to TimelineRecord.

2009-10-26  Matt Mueller  <mattm@chromium.org>

        Reviewed by Darin Adler.

        Refactor synchronizable property handling to store one shouldSynchronize flag per set of properties rather than one per property.

        Fixes reading uninitialized memory in SynchronizableProperty hash function as well as simplifying the code.

        https://bugs.webkit.org/show_bug.cgi?id=30658

        Covered by running various svg tests under valgrind, ex:
        LayoutTests/svg/custom/js-late-mask-and-object-creation.svg

        * svg/SynchronizablePropertyController.cpp:
        (WebCore::SynchronizableProperties::addProperty):
        (WebCore::SynchronizableProperties::synchronize):
        (WebCore::SynchronizableProperties::startAnimation):
        (WebCore::SynchronizableProperties::stopAnimation):
        (WebCore::SynchronizablePropertyController::registerProperty):
        (WebCore::SynchronizablePropertyController::setPropertyNeedsSynchronization):
        (WebCore::SynchronizablePropertyController::synchronizeProperty):
        (WebCore::SynchronizablePropertyController::synchronizeAllProperties):
        (WebCore::SynchronizablePropertyController::startAnimation):
        (WebCore::SynchronizablePropertyController::stopAnimation):
        * svg/SynchronizablePropertyController.h:
        (WebCore::SynchronizableProperties::SynchronizableProperties):
        (WebCore::SynchronizableProperties::setNeedsSynchronization):

2009-10-26  Kelly Norton  <knorton@google.com>

        Reviewed by Timothy Hatcher.

        Renames TimelineItem to TimelineRecord and updates all call sites.
        https://bugs.webkit.org/show_bug.cgi?id=30785

        * GNUmakefile.am: 
        * WebCore.gypi:
        * WebCore.vcproj/WebCore.vcproj:
        * WebCore.xcodeproj/project.pbxproj:
        * inspector/InspectorFrontend.cpp:
        (WebCore::InspectorFrontend::addRecordToTimeline):
        * inspector/InspectorFrontend.h:
        * inspector/InspectorTimelineAgent.cpp:
        (WebCore::InspectorTimelineAgent::willDispatchDOMEvent):
        (WebCore::InspectorTimelineAgent::didDispatchDOMEvent):
        (WebCore::InspectorTimelineAgent::willLayout):
        (WebCore::InspectorTimelineAgent::didLayout):
        (WebCore::InspectorTimelineAgent::willRecalculateStyle):
        (WebCore::InspectorTimelineAgent::didRecalculateStyle):
        (WebCore::InspectorTimelineAgent::willPaint):
        (WebCore::InspectorTimelineAgent::didPaint):
        (WebCore::InspectorTimelineAgent::willWriteHTML):
        (WebCore::InspectorTimelineAgent::didWriteHTML):
        (WebCore::InspectorTimelineAgent::didInstallTimer):
        (WebCore::InspectorTimelineAgent::didRemoveTimer):
        (WebCore::InspectorTimelineAgent::willFireTimer):
        (WebCore::InspectorTimelineAgent::didFireTimer):
        (WebCore::InspectorTimelineAgent::reset):
        (WebCore::InspectorTimelineAgent::addRecordToTimeline):
        (WebCore::InspectorTimelineAgent::didCompleteCurrentRecord):
        (WebCore::InspectorTimelineAgent::pushCurrentRecord):
        * inspector/InspectorTimelineAgent.h:
        (WebCore::):
        (WebCore::InspectorTimelineAgent::RecordEntry::RecordEntry):
        * inspector/TimelineItemFactory.cpp: Removed.
        * inspector/TimelineItemFactory.h: Removed.
        * inspector/TimelineRecordFactory.cpp: Added.
        (WebCore::TimelineRecordFactory::createGenericRecord):
        (WebCore::TimelineRecordFactory::createDOMDispatchRecord):
        (WebCore::TimelineRecordFactory::createGenericTimerRecord):
        (WebCore::TimelineRecordFactory::createTimerInstallRecord):
        * inspector/TimelineRecordFactory.h: Added.
        (WebCore::TimelineRecordFactory::TimelineRecordFactory):
        * inspector/front-end/TimelineAgent.js:
        (WebInspector.addRecordToTimeline):
        * inspector/front-end/TimelinePanel.js:
        (WebInspector.TimelinePanel.prototype.addRecordToTimeline):
        (WebInspector.TimelinePanel.prototype._innerAddRecordToTimeline):
        (WebInspector.TimelinePanel.prototype.getRecordTypeName):
        (WebInspector.TimelineRecordTreeElement.prototype.onattach):

2009-10-26  Girish Ramakrishnan  <girish@forwardbias.in>

        Reviewed by Antti Koivisto.

        [Qt] Windowless Plugins : Print preview shows only part of flash when view is scrolled
        
        When printing, QPrinter's preview mode uses a QPicture to capture the output. The
        QPicture holds a reference to the X Pixmap. As a result, the print preview would
        update itself when the X Pixmap changes. To prevent the print preview from updating
        whenever m_drawable is updated (i.e when the view updates), we create a copy.
        
        We require that a QPixmap::copy() result in a QPixmap backed by a XPixmap
        regardless of the graphicssystem. This is taken care of by
        commit d310f7c710ecb331a9689861f0551eabd38e946e in Qt (4.6)
        
        The beauty of this patch is that the newly created X Pixmap is managed by Qt and
        it will free the Pixmap whenever the user closes the print preview dialog and
        handles the case of displaying multiple preview dialogs nicely.
        
        All credit to Samuel Rødal for suggesting usage of QPixmap::copy().
        
        https://bugs.webkit.org/show_bug.cgi?id=30714

        * plugins/qt/PluginViewQt.cpp:
        (WebCore::PluginView::paint):

2009-10-26  Benjamin Otte  <otte@gnome.org>

        Reviewed by Gustavo Noronha.

        Don't store properties in the MediaPlayerPrivate class

        Access them via the MediaPlayer class instead.
        https://bugs.webkit.org/show_bug.cgi?id=30462

        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.cpp:
        (WebCore::MediaPlayerPrivate::MediaPlayerPrivate):
        (WebCore::MediaPlayerPrivate::seek):
        (WebCore::MediaPlayerPrivate::setVolume):
        (WebCore::MediaPlayerPrivate::setRate):
        (WebCore::MediaPlayerPrivate::setVisible):
        (WebCore::MediaPlayerPrivate::paint):
        (WebCore::MediaPlayerPrivate::createGSTPlayBin):
        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.h:

2009-10-26  Brian Weinstein  <bweinstein@apple.com>

        Reviewed by Timothy Hatcher.

        Fixes <http://webkit.org/b/30801>.
        Web Inspector: Control + ]/[ on Windows doesn't change Panels.
        
        In my testing, Windows uses "U+00DB" and "U+00DD" to represent
        [ and ], so we should honor those as well.

        * inspector/front-end/inspector.js:
        (WebInspector.documentKeyDown):

2009-10-26  Laszlo Gombos  <laszlo.1.gombos@nokia.com>

        Reviewed by Darin Adler.

        Make .rc files compile on Windows without depending on MFC headers
        https://bugs.webkit.org/show_bug.cgi?id=30750

        * WebCore.vcproj/QTMovieWin.rc: Use winresrc.h because it exists 
        even when MFC is not installed, and is all that's needed here.

2009-10-26  Brent Fulgham  <bfulgham@webkit.org>

        Reviewed by Darin Adler.

        Build corrections for ENABLE_FILTERS in Windows.
        https://bugs.webkit.org/show_bug.cgi?id=30797

        Build correction for ENABLE_FILTERS feature.  No new tests needed.

        * platform/graphics/filters/FEColorMatrix.cpp: Use MathExtras.h and
          its piDouble constant.
        * platform/graphics/filters/FEGaussianBlur.cpp: Use MathExtras.h and
          its piDouble constant.  Remove unnecessary call to floor used in
          the division of an unsigned, converting to int.
        * platform/graphics/win/SimpleFontDataCairoWin.cpp: Correct include
          style for MathExtras.h.

2009-10-26  Brady Eidson  <beidson@apple.com>

        Reviewed by Darin Adler.

        <rdar://problem/7289467> and http://webkit.org/b/30798 - REGRESSION (r48687): www.myuhc.com doesn't load.

        Test: fast/loader/grandparent-completion-starts-redirect.html

        * loader/FrameLoader.cpp:
        (WebCore::FrameLoader::completed): Notify all descendants that the load completed, not just direct children.

2009-10-26  Dan Bernstein  <mitz@apple.com>

        Reviewed by Beth Dakin.

        Re-add CSSPropertyWebkitBackgroundSize in one more place

        Fixes transitions/multiple-background-size-transitions.html, transitions/background-transitions.html

        * page/animation/AnimationBase.cpp:
        (WebCore::FillLayersPropertyWrapper::FillLayersPropertyWrapper):

2009-10-26  Jeremy Orlow  <jorlow@chromium.org>

        Reviewed by Dimitri Glazkov.

        [V8] Tidy up the DOM Storage runtime flag stuff
        https://bugs.webkit.org/show_bug.cgi?id=30794

        Clean up the DOM Storage runtime flag stuff to match the new way of doing
        things.  No behavioral changes.

        * bindings/v8/RuntimeEnabledFeatures.cpp:
        * bindings/v8/RuntimeEnabledFeatures.h:
        (WebCore::RuntimeEnabledFeatures::setDatabaseEnabled):
        (WebCore::RuntimeEnabledFeatures::databaseEnabled):
        (WebCore::RuntimeEnabledFeatures::setLocalStorageEnabled):
        (WebCore::RuntimeEnabledFeatures::localStorageEnabled):
        (WebCore::RuntimeEnabledFeatures::setSessionStorageEnabled):
        (WebCore::RuntimeEnabledFeatures::sessionStorageEnabled):
        * bindings/v8/custom/V8DOMWindowCustom.cpp:
        (WebCore::ACCESSOR_RUNTIME_ENABLER):
        * storage/Storage.cpp:
        * storage/Storage.h:

2009-10-26  Brady Eidson  <beidson@apple.com>

        Reviewed by Darin Adler.

        <rdar://problem/7308952> and http://webkit.org/b/30424 - REGRESSION (r48687): Pages on ucas.com appear blank.

        Test: fast/loader/history-forward-in-head.html

        * loader/RedirectScheduler.cpp:
        (WebCore::RedirectScheduler::scheduleHistoryNavigation): Restore the moved canGoBackOrForward() check.
          This restores the side effect of an invalid history navigation canceling previous scheduled redirects
          and also fixes the bug of scheduling an invalid history navigation canceling parsing of the current document.
        (WebCore::RedirectScheduler::timerFired): Removed the canGoBackOrForward() check as it is now made before
          the redirect is scheduled.

2009-10-26  Alexey Proskuryakov  <ap@apple.com>

        Reviewed by Darin Adler.

        https://bugs.webkit.org/show_bug.cgi?id=30049
        <rdar://problem/7286002> Manipulating DOM from a script while parsing XHTML can cause a crash

        Tests: fast/parser/remove-current-node-parent-x-2.xhtml
               fast/parser/remove-current-node-parent-x.xhtml

        * dom/XMLTokenizer.h: Store the whole stack of parent nodes - element.parentNode() is
        unreliable after DOM manipulation.

        * dom/XMLTokenizer.cpp:
        (WebCore::XMLTokenizer::pushCurrentNode): Push the new node onto stack.
        (WebCore::XMLTokenizer::popCurrentNode): This is now called instead of setCurrentNode when
        exiting a node.
        (WebCore::XMLTokenizer::clearCurrentNodeStack): We're aborting; or just done parsing. This
        replaces setCurrentNode(0).
        (WebCore::XMLTokenizer::enterText): Call pushCurrentNode().
        (WebCore::XMLTokenizer::exitText): Call popCurrentNode(), removing a long-standing FIXME
        (not sure if it was ever practical though - how can a parent become null while adding text?)

        * dom/XMLTokenizerLibxml2.cpp:
        (WebCore::XMLTokenizer::~XMLTokenizer): Call clearCurrentNodeStack().
        (WebCore::XMLTokenizer::startElementNs): Call pushCurrentNode().
        (WebCore::XMLTokenizer::endElementNs): Call popCurrentNode() to safely get to a parent. Also
        added a check fo script element still being in document - Firefox parses those that aren't,
        but doesn't execute them.

        * dom/XMLTokenizerQt.cpp:
        (WebCore::XMLTokenizer::~XMLTokenizer):
        (WebCore::XMLTokenizer::parseStartElement):
        (WebCore::XMLTokenizer::parseEndElement):
        Match libxml2 version changes.

2009-10-26  Dan Bernstein  <mitz@apple.com>

        Reviewed by Beth Dakin.

        background-size: X treated as background-size: X X, not background-size: X auto
        https://bugs.webkit.org/show_bug.cgi?id=28440

        Updated fast/backgrounds/size/resources/parsing-background-size-values.js
        and fast/backgrounds/size/resources/parsing-inherit.js

        Reinstated -webkit-background-size and kept its behavior of filling in
        the second value with the first one; and changed background-size to have
        the behavior of filling in the second value with 'auto'.

        * css/CSSComputedStyleDeclaration.cpp:
        (computedProperties): Re-added CSSPropertyWebkitBackgroundSize.
        (WebCore::CSSComputedStyleDeclaration::getPropertyCSSValue): Ditto.
        * css/CSSParser.cpp:
        (WebCore::CSSParser::parseValue): Ditto.
        (WebCore::CSSParser::parseFillSize): Adapted for the new parsing rule.
        (WebCore::CSSParser::parseFillProperty): Re-added
        CSSPropertyWebkitBackgroundSize.
        (WebCore::cssPropertyID): Removed mapping of -webkit-background-size to
        background-size.
        * css/CSSParser.h:
        * css/CSSPropertyNames.in: Re-added -webkit-background-size.
        * css/CSSStyleSelector.cpp:
        (WebCore::CSSStyleSelector::applyProperty): Re-added
        CSSPropertyWebkitBackgroundSize.

2009-10-26  Laszlo Gombos  <laszlo.1.gombos@nokia.com>

        Reviewed by Eric Seidel.

        [Qt] Use "%lli" to format "long long" on WIN_OS to fix HTML5 WebDB crash
        https://bugs.webkit.org/show_bug.cgi?id=30777

        No new tests as the crash can be reproduced by existing storage
        LayoutTests (by hitting an assert in debug mode Webkit on WIN_OS).

        * platform/text/String.cpp:
        (WebCore::String::number): Qt's QString::vsprintf does not
        understand the "%I64u" format string. Always use the "%lli"
        format string for Qt port.

2009-10-26  Tony Chang  <tony@chromium.org>

        Reviewed by Eric Seidel.

        Roll back r50073 because r50041-50043 were reverted.  r50073 was
        a chromium side fix for r50041.
        https://bugs.webkit.org/show_bug.cgi?id=30789

        * bindings/v8/V8Collection.h:
        * bindings/v8/custom/V8CustomBinding.h:
        * bindings/v8/custom/V8HTMLAllCollectionCustom.cpp:
        (WebCore::getNamedItems):
        (WebCore::getItem):
        (WebCore::NAMED_PROPERTY_GETTER):
        (WebCore::CALLBACK_FUNC_DECL):
        * bindings/v8/custom/V8HTMLCollectionCustom.cpp:
        (WebCore::getNamedItems):
        (WebCore::getItem):
        (WebCore::NAMED_PROPERTY_GETTER):
        (WebCore::CALLBACK_FUNC_DECL):
        * bindings/v8/custom/V8HTMLOptionsCollectionCustom.cpp:

2009-10-26  Geoffrey Garen  <ggaren@apple.com>

        Reviewed by Dimitri Glazkov.

        Fixed https://bugs.webkit.org/show_bug.cgi?id=30765
        REGRESSION (r48701): Removing an event listener causes the one added just after it not to fire
        
        and related bugs.

        If the event listener being removed is prior to the current firing event
        iterator, we need to decrement the current firing event iterator in
        addition to the endpoint. (Otherwise, shrinking the event listener vector
        by one implicity moves the current firing event iterator forward by one.
        It's like relativity, only without the planets.)
        
        Also took the opportunity to change some pointers to references, since
        they can't be null.

        * dom/EventTarget.cpp:
        (WebCore::EventTarget::removeEventListener):
        (WebCore::EventTarget::removeAllEventListeners): Update iterator in addition
        to end, if need be.
        (WebCore::EventTarget::fireEventListeners): Updated for interface changes.
        Added a comment to explain a behavior that was implicit enough to be
        confusing.

        * dom/EventTarget.h:
        (WebCore::FiringEventIterator::FiringEventIterator):
        (WebCore::EventTarget::isFiringEventListeners): Updated for interface changes.

2009-10-26  Brian Weinstein  <bweinstein@apple.com>

        Reviewed by Timothy Hatcher.

        Fixes <http://webkit.org/b/30792>.
        Web Inspector: When changing resource scope, resource graph can get in weird state.
        
        If the user was scrolled down while looking at All resources, and then just
        selects Fonts, or something that doesn't have many resources, then the graph
        will stay scrolled down, even when there is no content there.
        
        When the filter is updated, scroll to the top of the graph view, so this won't
        happen.

        * inspector/front-end/AbstractTimelinePanel.js:
        (WebInspector.AbstractTimelinePanel.prototype._updateFilter):

2009-10-26  Sam Weinig  <sam@webkit.org>

        Fix mac clean build.

        * html/HTMLOptionsCollection.idl:

2009-10-26  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Extract AbstractTimelinePanel that will be a base
        class for ResourcesPanel and TimelinePanel.

        https://bugs.webkit.org/show_bug.cgi?id=30776

        * WebCore.gypi:
        * WebCore.vcproj/WebCore.vcproj:
        * inspector/front-end/AbstractTimelinePanel.js: Added.
        (WebInspector.AbstractTimelinePanel):
        (WebInspector.AbstractTimelinePanel.prototype.get categories):
        (WebInspector.AbstractTimelinePanel.prototype.showCategory):
        (WebInspector.AbstractTimelinePanel.prototype.hideCategory):
        (WebInspector.AbstractTimelinePanel.prototype.createTimelinePanels):
        (WebInspector.AbstractTimelinePanel.prototype._createFilterPanel.createFilterElement):
        (WebInspector.AbstractTimelinePanel.prototype._createFilterPanel):
        (WebInspector.AbstractTimelinePanel.prototype.filter):
        (WebInspector.AbstractTimelinePanel.prototype._updateFilter):
        (WebInspector.AbstractTimelinePanel.prototype._createGraph):
        (WebInspector.AbstractTimelinePanel.prototype.updateGraphDividersIfNeeded):
        (WebInspector.AbstractTimelinePanel.prototype._updateSummaryGraph):
        (WebInspector.AbstractTimelinePanel.prototype._updateDividersLabelBarPosition):
        (WebInspector.AbstractTimelinePanel.prototype.get needsRefresh):
        (WebInspector.AbstractTimelinePanel.prototype.set needsRefresh):
        (WebInspector.AbstractTimelinePanel.prototype.refreshIfNeeded):
        (WebInspector.AbstractTimelinePanel.prototype.show):
        (WebInspector.AbstractTimelinePanel.prototype.resize):
        (WebInspector.AbstractTimelinePanel.prototype.updateMainViewWidth):
        (WebInspector.TimelineCalculator):
        (WebInspector.TimelineCalculator.prototype.computeSummaryValues):
        (WebInspector.TimelineCalculator.prototype.computeBarGraphPercentages):
        (WebInspector.TimelineCalculator.prototype.computeBarGraphLabels):
        (WebInspector.TimelineCalculator.prototype.get boundarySpan):
        (WebInspector.TimelineCalculator.prototype.updateBoundaries):
        (WebInspector.TimelineCalculator.prototype.reset):
        (WebInspector.TimelineCalculator.prototype._value):
        (WebInspector.TimelineCalculator.prototype.formatValue):
        * inspector/front-end/ResourceCategory.js:
        (WebInspector.ResourceCategory):
        * inspector/front-end/ResourcesPanel.js:
        (WebInspector.ResourcesPanel):
        (WebInspector.ResourcesPanel.prototype.toolbarItemClass.get toolbarItemLabel):
        (WebInspector.ResourcesPanel.prototype.get statusBarItems):
        (WebInspector.ResourcesPanel.prototype.get categories):
        (WebInspector.ResourcesPanel.prototype.showCategory):
        (WebInspector.ResourcesPanel.prototype.hideCategory):
        (WebInspector.ResourcesPanel.prototype.isCategoryVisible):
        (WebInspector.ResourcesPanel.prototype.populateSidebar):
        (WebInspector.ResourcesPanel.prototype.createPanelEnabler):
        (WebInspector.ResourcesPanel.prototype.createStatusbarButtons):
        (WebInspector.ResourcesPanel.prototype.set mainResourceLoadTime):
        (WebInspector.ResourcesPanel.prototype.set mainResourceDOMContentTime):
        (WebInspector.ResourcesPanel.prototype.show):
        (WebInspector.ResourcesPanel.prototype.resize):
        (WebInspector.ResourcesPanel.prototype.reset):
        (WebInspector.ResourcesPanel.prototype.updateGraphDividersIfNeeded):
        (WebInspector.ResourcesPanel.prototype.updateMainViewWidth):
        (WebInspector.ResourceTimeCalculator):
        (WebInspector.ResourceTransferSizeCalculator):
        (WebInspector.ResourceTransferSizeCalculator.prototype.computeBarGraphLabels):
        * inspector/front-end/SummaryBar.js:
        (WebInspector.SummaryBar.prototype.update):
        * inspector/front-end/WebKit.qrc:
        * inspector/front-end/inspector.html:
        * inspector/front-end/inspector.js:
        (WebInspector.loaded):

2009-10-26  Avi Drissman  <avi@google.com>

        Reviewed by Darin Adler.

        Use Helvetica in the Inspector as intended.
        https://bugs.webkit.org/show_bug.cgi?id=30787

        * inspector/front-end/inspector.css:

2009-10-26  Nate Chapin  <japhet@chromium.org>

        Reviewed by Alexey Proskuryakov.

        Don't set window.opener to 0 for the current FrameLoader if a noreferrer link was clicked, only suppress opener in a new frame.
        https://bugs.webkit.org/show_bug.cgi?id=30781

        * loader/FrameLoader.cpp:
        (WebCore::FrameLoader::urlSelected): Don't suppress opener in the current frame for noreferrer navigations.

2009-10-26  Ryosuke Niwa  <rniwa@webkit.org>

        Reviewed by Eric Seidel.

        Data loss occurs when unbolding nested bold tags.
        https://bugs.webkit.org/show_bug.cgi?id=30083

        Fixes the loop in swapInNodePreservingAttributesAndChildren by saving nextSibling() of child
        to a temporary valuable.  It was originally calling nextSibling() after appending the child
        to new parent, in which case, nextSibling is always 0.

        Test: editing/style/unbolding-nested-b.html

        * editing/ReplaceNodeWithSpanCommand.cpp:
        (WebCore::swapInNodePreservingAttributesAndChildren):

2009-10-21  Jeremy Orlow  <jorlow@chromium.org>

        Reviewed by Darin Adler.

        Storage events should use Document::url() rather than documentURI()
        https://bugs.webkit.org/show_bug.cgi?id=30535

        Storage events should use Document::url() rather than Document::documentURI()
        per http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2009-October/023703.html

        Test: storage/domstorage/documentURI.html

        * storage/StorageEventDispatcher.cpp:
        (WebCore::StorageEventDispatcher::dispatch):

2009-10-26  Sam Weinig  <sam@webkit.org>

        Rubber-stamped by Darin Adler.

        Rollout r50041-50043.  The HTML5 spec changed to make HTMLOptionsCollection
        inherit from HTMLCollection.

        * GNUmakefile.am:
        * WebCore.gypi:
        * WebCore.pro:
        * WebCore.vcproj/WebCore.vcproj:
        * WebCore.xcodeproj/project.pbxproj:
        * bindings/js/JSHTMLAllCollectionCustom.cpp:
        (WebCore::getNamedItems):
        (WebCore::callHTMLAllCollection):
        (WebCore::JSHTMLAllCollection::nameGetter):
        (WebCore::JSHTMLAllCollection::item):
        (WebCore::JSHTMLAllCollection::namedItem):
        * bindings/js/JSHTMLCollectionCustom.cpp:
        (WebCore::getNamedItems):
        (WebCore::callHTMLCollection):
        (WebCore::JSHTMLCollection::nameGetter):
        (WebCore::JSHTMLCollection::item):
        (WebCore::JSHTMLCollection::namedItem):
        (WebCore::toJS):
        * bindings/js/JSHTMLCollectionFunctions.h: Removed.
        * bindings/js/JSHTMLDocumentCustom.cpp:
        * bindings/js/JSHTMLOptionsCollectionCustom.cpp:
        (WebCore::JSHTMLOptionsCollection::length):
        (WebCore::JSHTMLOptionsCollection::indexSetter):
        * bindings/objc/DOMHTML.mm:
        (kitClass):
        * bindings/objc/DOMUtility.mm:
        (JSC::createDOMWrapper):
        * bindings/scripts/CodeGeneratorJS.pm:
        * html/HTMLCollection.idl:
        * html/HTMLOptionsCollection.idl:

2009-10-26  Brent Fulgham  <bfulgham@webkit.org>

        Reviewed by Adam Roben.

        Build fix for ENABLE_FILTERS under Windows.
        https://bugs.webkit.org/show_bug.cgi?id=30762

        Build correction for ENABLE_FILTERS feature.  No new tests needed.

        * WebCore.vcproj/WebCore.vcproj:  Make the following changes:
          (1) Create a new 'filters' sub-folder of the platform/graphics 
              folder to properly show the sources held in this directory.
          (2) Move the files that are currently shown in svn/graphics/filters
              to platform/graphics/filters (where they actually live on disk).
          (3) Add the missing SVGFilter, SVGFilterBuilder, and SVGFETile to
              the project so they are built.
          (4) Remove SVGFEFloodElement.cpp from the build, since it is already
              being compiled by SVGAllInOne.cpp.  Its presence as a separate
              entity is causing a linker warning for duplicate symbols.
          (5) Add ImageBuffer.cpp to the build to support color space
              calculations for non-CG builds.
        * WebCore.vcproj/WebCoreCommon.vsprops: Add the platform/graphics/filters
          path to the search paths in the project.

2009-10-26  Keishi Hattori  <casey.hattori@gmail.com>

        Reviewed by Timothy Hatcher.

        console.assert should prefix messages with "Assertion failed: "
        https://bugs.webkit.org/show_bug.cgi?id=19135

        * English.lproj/localizedStrings.js:
        * inspector/front-end/ConsoleView.js:
        (WebInspector.ConsoleMessage.prototype.toMessageElement): Append "Assertion failed: " for AssertMessageType.
        (WebInspector.ConsoleMessage.prototype.toString):
        * page/Console.cpp:
        (WebCore::Console::assertCondition): Use AssertMessageType.
        * page/Console.h:
        (WebCore::MessageType): Added AssertMessageType.

2009-10-26  Rahul Kuchhal  <kuchhal@chromium.org>

        Reviewed by Eric Seidel.

        Prevent crash when optgroup element is empty by adding a NULL check.

        https://bugs.webkit.org/show_bug.cgi?id=30365

        Test: fast/forms/select-empty-optgroup.html

        * dom/SelectElement.cpp:
        (WebCore::SelectElement::appendFormData):

2009-10-21  Steven Knight  <sgk@chromium.org>

        Reviewed by David Levin.

        Refactor gyp for separate webcore_bindings{,_sources} targets.

        https://bugs.webkit.org/show_bug.cgi?id=30447

        Handle long link lines by building .idl-generated bindings in a
        separate webcore_bindings library target.  Avoid Visual Studio
        dependency issues by building additional generated .cpp and .h files
        in a separate webcore_bindings_sources target.

        Chrome should still build and test successfully.

        * WebCore.gyp/WebCore.gyp:
        * WebCore.gypi:

2009-10-26  Mike Belshe  <mike@belshe.com>

        Reviewed by Darin Fisher.

        Make the number of connections for chromium controlled by
        chromium rather than by ResourceRequestBase.
        https://bugs.webkit.org/show_bug.cgi?id=30661

        * platform/network/ResourceRequestBase.cpp:
        * platform/network/chromium/ResourceRequest.cpp:

2009-10-26  Gustavo Noronha Silva  <gustavo.noronha@collabora.co.uk>

        Unreviewed. make distcheck build fixes.

        * GNUmakefile.am:

2009-10-26  Anton Muhin  <antonm@chromium.org>

        Reviewed by Dimitri Glazkov.

        Unbreak Chromium build: that requires adding custom implementations
        for HTMLOptionsCollection's item and namedItem.  Keep v8 binding
        close to JSC bindings as well.
        https://bugs.webkit.org/show_bug.cgi?id=30780

        * bindings/v8/V8Collection.h:
        (WebCore::getNamedItemsFromCollection):
        (WebCore::getItemFromCollection):
        * bindings/v8/custom/V8CustomBinding.h:
        * bindings/v8/custom/V8HTMLAllCollectionCustom.cpp:
        (WebCore::NAMED_PROPERTY_GETTER):
        (WebCore::CALLBACK_FUNC_DECL):
        * bindings/v8/custom/V8HTMLCollectionCustom.cpp:
        (WebCore::NAMED_PROPERTY_GETTER):
        (WebCore::CALLBACK_FUNC_DECL):
        * bindings/v8/custom/V8HTMLOptionsCollectionCustom.cpp:
        (WebCore::CALLBACK_FUNC_DECL):

2009-10-23  Alexey Proskuryakov  <ap@apple.com>

        Reviewed by Adam Barth and Darin Adler.

        https://bugs.webkit.org/show_bug.cgi?id=30723
        <rdar://problem/6189415> Input names added to multipart/form-data headers need to be escaped.

        Test: http/tests/security/escape-form-data-field-names.html

        * platform/network/FormDataBuilder.cpp:
        (WebCore::appendQuotedString):
        (WebCore::FormDataBuilder::beginMultiPartHeader):
        (WebCore::FormDataBuilder::addFilenameToMultiPartHeader):
        Percent-escape line breaks and quotation marks.

2009-10-26  Kelly Norton  <knorton@google.com>

        Reviewed by Pavel Feldman.

        Adds DOMTimer support to InspectorTimelineAgent.
        https://bugs.webkit.org/show_bug.cgi?id=30467

        * inspector/InspectorTimelineAgent.cpp: Added timer support and fixed some method names.
        (WebCore::InspectorTimelineAgent::didDispatchDOMEvent):
        (WebCore::InspectorTimelineAgent::didLayout):
        (WebCore::InspectorTimelineAgent::didRecalculateStyle):
        (WebCore::InspectorTimelineAgent::didPaint):
        (WebCore::InspectorTimelineAgent::didWriteHTML):
        (WebCore::InspectorTimelineAgent::didInstallTimer): Added.
        (WebCore::InspectorTimelineAgent::didRemoveTimer): Added.
        (WebCore::InspectorTimelineAgent::willFireTimer): Added.
        (WebCore::InspectorTimelineAgent::didFireTimer): Added.
        (WebCore::InspectorTimelineAgent::addItemToTimeline): Added.
        (WebCore::InspectorTimelineAgent::didCompleteCurrentTimelineItem): Renamed.
        * inspector/InspectorTimelineAgent.h:
        (WebCore::):
        * inspector/TimelineItemFactory.cpp: Add methods for timer-related ScriptObjects.
        (WebCore::TimelineItemFactory::createGenericTimerTimelineItem):
        (WebCore::TimelineItemFactory::createTimerInstallTimelineItem):
        * inspector/TimelineItemFactory.h:
        * page/DOMTimer.cpp: Added instrumentation points.
        (WebCore::DOMTimer::install):
        (WebCore::DOMTimer::removeById):
        (WebCore::DOMTimer::fired):

2009-10-26  Simon Fraser  <simon.fraser@apple.com>

        Reviewed by Sam Weinig.

        <rdar://problem/6988966> Hardware layers do not show up in page snapshots

        Add a method that gets called when snapshotting Canvas3DLayers for page snapshots,
        that allows the layer to return a CGImageRef of its contents.
        
        * platform/graphics/mac/Canvas3DLayer.h:
        * platform/graphics/mac/Canvas3DLayer.mm:
        (-[Canvas3DLayer copyImageSnapshotWithColorSpace:]):

2009-10-26  Yury Semikhatsky  <yurys@chromium.org>

        Reviewed by Pavel Feldman.

        Pass "console" as object group when evaluating selection.

        https://bugs.webkit.org/show_bug.cgi?id=30738

        * inspector/front-end/SourceFrame.js:
        (WebInspector.SourceFrame.prototype._evalSelectionInCallFrame):

2009-10-26  Keishi Hattori  <casey.hattori@gmail.com>

        Reviewed by Pavel Feldman.

        Fix for Console not showing repeat count when repeatedly logging an Event
        https://bugs.webkit.org/show_bug.cgi?id=30324

        * inspector/ConsoleMessage.cpp:
        (WebCore::ConsoleMessage::addToConsole):
        (WebCore::ConsoleMessage::updateRepeatCountInConsole): Added.
        * inspector/ConsoleMessage.h:
        * inspector/InspectorController.cpp:
        (WebCore::InspectorController::addConsoleMessage): Calls updateRepeatCountInConsole if it is a repeating message.
        * inspector/InspectorFrontend.cpp:
        (WebCore::InspectorFrontend::addConsoleMessage): Renamed WebCore::InspectorFrontend::addMessageToConsole
        (WebCore::InspectorFrontend::updateConsoleMessageRepeatCount): Added. Called when repeatCount is incremented.
        * inspector/InspectorFrontend.h:
        * inspector/front-end/ConsoleView.js:
        (WebInspector.ConsoleView.prototype.addMessage): Removed calls to msg.isEqual.
        (WebInspector.ConsoleView.prototype.updateMessageRepeatCount): Added.
        (WebInspector.ConsoleView.prototype._incrementErrorWarningCount): Added. Updates the error/warning count.
        (WebInspector.ConsoleView.prototype.clearMessages):
        (WebInspector.ConsoleMessage):
        (WebInspector.ConsoleMessage.prototype.toMessageElement): Use ConsoleMessage._updateRepeatCount
        (WebInspector.ConsoleMessage.prototype._updateRepeatCount):
        * inspector/front-end/inspector.js:
        (WebInspector.addConsoleMessage): Renamed WebInspector.addMessageToConsole.
        (WebInspector.updateConsoleMessageRepeatCount): Added.

2009-10-26  Chris Fleizach  <cfleizach@apple.com>

        Reviewed by Darin Adler.

        crash with AX on when an image map contains an anchor tag
        https://bugs.webkit.org/show_bug.cgi?id=30739

        Tests: accessibility/crashing-a-tag-in-map.html

        * accessibility/AccessibilityRenderObject.cpp:
        (WebCore::AccessibilityRenderObject::addChildren):

2009-10-26  Steve Block  <steveblock@google.com>

        Reviewed by Eric Seidel.

        Adds feature ENABLE guards to V8 bindings.
        https://bugs.webkit.org/show_bug.cgi?id=30697

        This adds guards for the following features to the V8 bindings,
        to allow builds with V8 to succeed when these features are not enabled.
        - DATABASE
        - WORKERS
        - SHARED_WORKERS
        - SVG
        - XPATH
        - XSLT
        - INSPECTOR

        This is a build fix only, no new tests required.

        * bindings/v8/DOMObjectsInclude.h: Modified.
        * bindings/v8/DerivedSourcesAllInOne.cpp: Modified.
        * bindings/v8/V8Index.cpp: Modified.
        * bindings/v8/V8Index.h: Modified.

2009-10-26  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Xan Lopez.

        https://bugs.webkit.org/show_bug.cgi?id=25679
        [Gtk] Improve accessibility of focusable lists

        Fixes the issues with the Atk states exposed for ListBoxOption

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (setAtkStateSetFromCoreObject):

2009-10-26  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Xan Lopez.

        https://bugs.webkit.org/show_bug.cgi?id=27085
        [Gtk] Incorrect rendering of list

        Adds a way for platforms to indicate that a particular object
        should not be ignored.

        * accessibility/AccessibilityObject.h:
        * accessibility/chromium/AccessibilityObjectChromium.cpp:
        * accessibility/gtk/AccessibilityObjectAtk.cpp:
        * accessibility/mac/AccessibilityObjectMac.mm:
        * accessibility/qt/AccessibilityObjectQt.cpp:
        * accessibility/win/AccessibilityObjectWin.cpp:
        * accessibility/wx/AccessibilityObjectWx.cpp:
        (AccessibilityObject::accessibilityPlatformIncludesObject):
        * accessibility/AccessibilityRenderObject.cpp:
        (AccessibilityRenderObject::accessibilityIsIgnored):

2009-10-26  Kinuko Yasuda  <kinuko@google.com>

        Reviewed by Jan Alonzo.

        Bug 30619: [Linux] Menu key doesn't work
        https://bugs.webkit.org/show_bug.cgi?id=30619

        Test: manual-tests/keyboard-menukey-event.html
        No new layout tests: testing this will require changes in the test
        controller in a platform-specific way.

        * platform/chromium/KeyCodeConversionGtk.cpp:
        (WebCore::windowsKeyCodeForKeyEvent): changed switch-case code for
        GDK_Menu to return VKEY_APPS instead of VKEY_MENU.
        * platform/gtk/KeyEventGtk.cpp:
        (WebCore::windowsKeyCodeForKeyEvent): changed switch-case code for
        GDK_Menu to return V_APPS instead of VK_MENU.

2009-10-25  Anton Muhin  <antonm@chromium.org>

        Reviewed by Adam Barth.

        Reuse already fetched proxy.
        https://bugs.webkit.org/show_bug.cgi?id=30747

        * bindings/v8/V8DOMWrapper.cpp:
        (WebCore::V8DOMWrapper::convertNewNodeToV8Object):

2009-10-25  Laszlo Gombos  <laszlo.1.gombos@nokia.com>

        Unreviewed build fix.

        Build fix for WIN_OS if Netscape plugin support is turned off
        https://bugs.webkit.org/show_bug.cgi?id=30753

        * plugins/PluginDatabase.cpp:

2009-10-25  Hironori Bono  <hbono@chromium.org>

        Reviewed by Darin Adler.

        A quick fix for Bug 29103.
        Since String::startsWith() cannot fold non-ASCII characters, this change folds the prefix string
        and the option string before calling String::startsWith().
        https://bugs.webkit.org/show_bug.cgi?id=29103

        Tests: fast/forms/listbox-typeahead-cyrillic.html
               fast/forms/listbox-typeahead-greek.html

        * dom/SelectElement.cpp:
        (WebCore::SelectElement::typeAheadFind):

2009-10-25  Keishi Hattori  <casey.hattori@gmail.com>

        Reviewed by Timothy Hatcher.

        Web Inspector: Expanding a node in the Console should not show the element in Elements panel
        https://bugs.webkit.org/show_bug.cgi?id=30749

        * inspector/front-end/ElementsTreeOutline.js:
        (WebInspector.ElementsTreeElement.prototype.onmousedown): Check if inside disclosure triangle.

2009-10-25  Sam Weinig  <sam@webkit.org>

        Reviewed by Dan Bernstein.

        Fix for https://bugs.webkit.org/show_bug.cgi?id=30751
        HTMLOptionsCollection should not inherit from HTMLCollection

        * GNUmakefile.am:
        * WebCore.gypi:
        * WebCore.pro:
        * WebCore.vcproj/WebCore.vcproj:
        * WebCore.xcodeproj/project.pbxproj:
        Added JSHTMLCollectionFunctions.h

        * bindings/js/JSHTMLAllCollectionCustom.cpp:
        (WebCore::callHTMLAllCollection):
        (WebCore::JSHTMLAllCollection::nameGetter):
        (WebCore::JSHTMLAllCollection::item):
        (WebCore::JSHTMLAllCollection::namedItem):
        * bindings/js/JSHTMLCollectionCustom.cpp:
        (WebCore::callHTMLCollection):
        (WebCore::JSHTMLCollection::nameGetter):
        (WebCore::JSHTMLCollection::item):
        (WebCore::JSHTMLCollection::namedItem):
        * bindings/js/JSHTMLOptionsCollectionCustom.cpp:
        (WebCore::callHTMLCollection):
        (WebCore::JSHTMLOptionsCollection::getCallData):
        (WebCore::JSHTMLOptionsCollection::canGetItemsForName):
        (WebCore::JSHTMLOptionsCollection::nameGetter):
        (WebCore::JSHTMLOptionsCollection::indexSetter):
        (WebCore::JSHTMLOptionsCollection::item):
        (WebCore::JSHTMLOptionsCollection::namedItem):
        Refactor to use generic implementation of HTMLCollection bindings functions
        from JSHTMLCollectionFunctions.h

        * bindings/js/JSHTMLCollectionFunctions.h: Added.
        (WebCore::getCollectionNamedItems):
        (WebCore::getCollectionItems):
        (WebCore::callHTMLCollectionGeneric):
        Added generic functions that JSHTMLCollection, JSHTMLAllCollection and
        JSHTMLOptionsCollection can all use.

        * bindings/js/JSHTMLDocumentCustom.cpp: Add include of JSHTMLAllCollection.h
        for toJS on document.all.

        * bindings/objc/DOMHTML.mm:
        * bindings/objc/DOMUtility.mm:
        (JSC::createDOMWrapper):
        Remove special cases for HTMLOptionsCollection.

        * bindings/scripts/CodeGeneratorJS.pm:
        * html/HTMLAllCollection.idl:
        * html/HTMLCollection.idl:
        * html/HTMLOptionsCollection.idl:

2009-10-24  Keishi Hattori  <casey.hattori@gmail.com>

        Reviewed by Timothy Hatcher.

        WebInspector: Fixed issue with IME inside console
        https://bugs.webkit.org/show_bug.cgi?id=30660

        * inspector/front-end/ConsoleView.js:
        (WebInspector.ConsoleView.prototype._promptKeyDown):
        * inspector/front-end/DatabaseQueryView.js:
        (WebInspector.DatabaseQueryView.prototype._promptKeyDown):
        * inspector/front-end/inspector.js:
        (WebInspector.loaded):
        (WebInspector.searchKeyDown): Moved performSearch here from WebInspector.searchKeyUp.
        (WebInspector.startEditing.element.handleKeyEvent):
        (WebInspector.startEditing):
        * inspector/front-end/utilities.js:
        (isEnterKey): Added. Check if in IME.

2009-10-24  Brian Weinstein  <bweinstein@apple.com>

        Reviewed by Timothy Hatcher.

        Fixes <https://bugs.webkit.org/show_bug.cgi?id=30752>.
        Web Inspector: Multiple Selection on Scope Bars by default Conflicts with other behavior on OSX.
        
        Have the scope bars select one scope by default, but if the multiple selection key
        is pressed, allow for multiple selection.

        * inspector/front-end/ConsoleView.js:
        (WebInspector.ConsoleView):
        (WebInspector.ConsoleView.prototype._updateFilter):
        (WebInspector.ConsoleView.prototype.filter):
        * inspector/front-end/ResourcesPanel.js:
        (WebInspector.ResourcesPanel):
        (WebInspector.ResourcesPanel.prototype.filter):
        (WebInspector.ResourcesPanel.prototype._updateFilter):

2009-10-24  Timothy Hatcher  <timothy@apple.com>

        Make the scope bars in the Web Inspector match other scope bars in Mac OS X.
        Also cleans up the CSS to use classes instead of ID selectors.

        https://bugs.webkit.org/show_bug.cgi?id=28186

        Reviewed by Dan Bernstein.

        * inspector/front-end/ResourcesPanel.js: Add the scope-bar class.
        * inspector/front-end/inspector.css: Lots of changes to make it look right.
        * inspector/front-end/inspector.html: Add the scope-bar class.

2009-10-24  Timothy Hatcher  <timothy@apple.com>

        Fix selecting Resources in the Web Inspector's Resources panel.

        https://bugs.webkit.org/show_bug.cgi?id=30743

        Reviewed by Pavel Feldman.

        * inspector/front-end/ResourcesPanel.js:
        (WebInspector.ResourcesPanel.prototype.isCategoryVisible): Added.
        (WebInspector.ResourceSidebarTreeElement.prototype.get selectable): Call
        isCategoryVisible on the ResourcesPanel.

2009-10-24  Timothy Hatcher  <timothy@apple.com>

        Fix the Scope Bar in the Web Inspector's Resource panel, so that selecting
        All will deselect the other filters.

        https://bugs.webkit.org/show_bug.cgi?id=30744

        Reviewed by Pavel Feldman.

        * inspector/front-end/ResourcesPanel.js:
        (WebInspector.ResourcesPanel.createFilterElement): Better syntax.
        (WebInspector.ResourcesPanel):
        (WebInspector.ResourcesPanel.prototype.filter): Use a normal for loop,
        and the child variable instead of target in the loop. Other clean up.

2009-10-24  Timothy Hatcher  <timothy@apple.com>

        Make resizing the Web Inspector's Elements panel sidebar work again.
        Also makes Resources panel use the sidebar code in Panel.

        https://bugs.webkit.org/show_bug.cgi?id=30742

        Reviewed by Pavel Feldman.

        * inspector/front-end/Panel.js:
        (WebInspector.Panel): Don't create the sidebar with an argument.
        (WebInspector.Panel.prototype.show): Call updateSidebarWidth.
        (WebInspector.Panel.prototype.handleKeyEvent): Call handleSidebarKeyEvent.
        (WebInspector.Panel.prototype.handleSidebarKeyEvent): Added.
        (WebInspector.Panel.prototype.createSidebar): Renamed from _createSidebar.
        (WebInspector.Panel.prototype._sidebarDragging): Call updateSidebarWidth.
        (WebInspector.Panel.prototype.updateSidebarWidth): Renamed from _updateSidebarWidth.
        (WebInspector.Panel.prototype.setSidebarWidth): Added. Called by updateSidebarWidth.
        (WebInspector.Panel.prototype.updateMainViewWidth): Renamed from setMainViewWidth.
        * inspector/front-end/ProfilesPanel.js:
        (WebInspector.ProfilesPanel): Call createSidebar.
        (WebInspector.ProfilesPanel.prototype.updateMainViewWidth): Renamed from setMainViewWidth.
        * inspector/front-end/ResourcesPanel.js:
        (WebInspector.ResourcesPanel.prototype.show): Remove call to _updateSidebarWidth.
        (WebInspector.ResourcesPanel.prototype.showResource): Call updateSidebarWidth
        (WebInspector.ResourcesPanel.prototype.closeVisibleResource): Ditto.
        (WebInspector.ResourcesPanel.prototype.setSidebarWidth): Added.
        (WebInspector.ResourcesPanel.prototype.updateMainViewWidth): Added.
        * inspector/front-end/StoragePanel.js:
        (WebInspector.StoragePanel): Call createSidebar.
        (WebInspector.StoragePanel.prototype.updateMainViewWidth): Renamed from setMainViewWidth.
        * inspector/front-end/TimelinePanel.js:
        (WebInspector.TimelinePanel): Call createSidebar.
        (WebInspector.TimelinePanel.prototype.updateMainViewWidth): Renamed from setMainViewWidth.

2009-10-24  Timothy Hatcher  <timothy@apple.com>

        Call updateSelection() in a few places so hovering in the Web Inspector's
        Elements panel always has the correct row selection height.

        https://bugs.webkit.org/show_bug.cgi?id=30735

        Reviewed by Pavel Feldman.

        * inspector/front-end/ElementsTreeOutline.js:
        (WebInspector.ElementsTreeElement.prototype.toggleNewAttributeButton): Call updateSelection().
        (WebInspector.ElementsTreeElement.prototype._insertInLastAttributePosition): Ditto.
        * inspector/front-end/inspector.css: Prevent text wrapping in the middle of the add attribute text.

2009-10-24  Timothy Hatcher  <timothy@apple.com>

        Remove the re-root tree feature from the Web Inspector's
        Elements panel. This feature wasn't super useful and gets
        in the way of double-click to edit.

        https://bugs.webkit.org/show_bug.cgi?id=30736

        Reviewed by Pavel Feldman.

        * inspector/front-end/ElementsTreeOutline.js:
        (WebInspector.ElementsTreeElement.prototype.ondblclick):

2009-10-24  Anton Muhin  <antonm@chromium.org>

        Reviewed by Adam Barth.

        Implements ReturnsNew hint for V8 bindings generation code.
        https://bugs.webkit.org/show_bug.cgi?id=30745

        * bindings/scripts/CodeGeneratorV8.pm:
        * bindings/v8/V8DOMWrapper.h:
        (WebCore::V8DOMWrapper::convertNewNodeToV8Object):

2009-10-24  Dan Bernstein  <mitz@apple.com>

        Reviewed by Sam Weinig.

        Missing images at 350.org due to wrong URLs
        https://bugs.webkit.org/show_bug.cgi?id=30748

        Test: fast/dom/HTMLImageElement/parse-src.html

        * dom/Element.cpp:
        (WebCore::Element::getURLAttribute): Pass the attribute value through deprecateParseURL().
        This matches what the Objective-C bindings do, as well as what HTMLImageLoader::sourceURI()
        and SVGImageLoader::sourceURI() do.

2009-10-24  Laszlo Gombos  <laszlo.1.gombos@nokia.com>

        Unreviewed.

        [Qt] Build fix for QtWebKit after r50013.

        * WebCore.pro:

2009-10-24  Dimitri Glazkov  <dglazkov@chromium.org>

        Unreviewed, build fix.

        [V8] Fix up to accommodate for HTMLAllCollection changes in
        http://trac.webkit.org/changeset/49998.

        * WebCore.gypi:
        * bindings/scripts/CodeGeneratorV8.pm:
        * bindings/v8/custom/V8CustomBinding.h:
        * bindings/v8/custom/V8HTMLDocumentCustom.cpp:

2009-10-23  Dan Bernstein  <mitz@apple.com>

        Reviewed by Alexey Proskuryakov.

        <rdar://problem/7294131> Assertion failure in AuthenticationMac at
        mac(const Credential&) after authenticating to MobileMe Gallery movie

        * platform/network/Credential.cpp:
        (WebCore::Credential::Credential): Initialize m_persistence.
        (WebCore::Credential::isEmpty): Made this method const.
        * platform/network/Credential.h:
        * platform/network/mac/AuthenticationMac.mm:
        (WebCore::mac): Return nil if the Credential is empty.

2009-10-23  Brian Weinstein  <bweinstein@apple.com>

        Reviewed by Timothy Hatcher.

        Fixes <https://bugs.webkit.org/show_bug.cgi?id=30617>.
        Web Inspector: Resources Scope Bar Should Allow Combinations.
        
        Refactor the filtering in ResourcePanel to make it match ConsoleView,
        and add a divider between All, and the other choices of Resource types.

        * inspector/front-end/ResourcesPanel.js:
        (WebInspector.ResourcesPanel):
        (WebInspector.ResourcesPanel.prototype.filter):
        (WebInspector.ResourcesPanel.prototype._updateFilter):
        * inspector/front-end/inspector.css:

2009-10-23  Chris Evans  <cevans@chromium.org>

        Reviewed by Adam Barth.

        Ignore the Refresh header if we're in view source mode.

        https://bugs.webkit.org/show_bug.cgi?id=27239

        Test: http/tests/security/view-source-no-refresh.html

        * loader/FrameLoader.cpp: ignore Refresh in view-source mode.

2009-10-23  Alexey Proskuryakov  <ap@apple.com>

        Reviewed by Sam Weinig.

        https://bugs.webkit.org/show_bug.cgi?id=30734
        Remove XMLTokenizer::m_currentNodeIsReferenced

        No change in behavior, no tests.

        * dom/XMLTokenizer.cpp:
        (WebCore::XMLTokenizer::setCurrentNode):
        * dom/XMLTokenizer.h:
        Don't store a boolean for the current node being the document - we can always check for that.

        * dom/XMLTokenizerLibxml2.cpp:
        (WebCore::XMLTokenizer::XMLTokenizer):
        * dom/XMLTokenizerQt.cpp:
        (WebCore::XMLTokenizer::XMLTokenizer):
        A fragment passed to XMLTokenizer is never null - in fact, the first thing we do is dereference
        it unconditionally, and then begin checking it for null, as if it could help.

2009-10-23  Beth Dakin  <bdakin@apple.com>

        No review since this is a build fix.

        Build fix for the Mac. (Build is only broken when SVG filters are 
        enabled.)

        Labelled these function static.
        * platform/graphics/filters/FEComponentTransfer.cpp:
        (WebCore::identity):
        (WebCore::table):
        (WebCore::discrete):
        (WebCore::linear):
        (WebCore::gamma):
        * platform/graphics/filters/FEGaussianBlur.cpp:
        (WebCore::boxBlur):

2009-10-23  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Implement a Timeline panel.

        https://bugs.webkit.org/show_bug.cgi?id=30725

        * WebCore.gypi:
        * WebCore.vcproj/WebCore.vcproj:
        * inspector/front-end/Images/timelineIcon.png: Added.
        * inspector/front-end/TimelineAgent.js:
        (WebInspector.addItemToTimeline):
        (WebInspector.timelineProfilerWasStarted):
        (WebInspector.timelineProfilerWasStopped):
        * inspector/front-end/TimelinePanel.js: Added.
        (WebInspector.TimelinePanel):
        (WebInspector.TimelinePanel.prototype.toolbarItemClass.get toolbarItemLabel):
        (WebInspector.TimelinePanel.prototype.get statusBarItems):
        (WebInspector.TimelinePanel.prototype.handleKeyEvent):
        (WebInspector.TimelinePanel.prototype.timelineWasStarted):
        (WebInspector.TimelinePanel.prototype.timelineWasStopped):
        (WebInspector.TimelinePanel.prototype.addItemToTimeline):
        (WebInspector.TimelinePanel.prototype._innerAddItemToTimeline):
        (WebInspector.TimelinePanel.prototype._toggleTimelineButton):
        (WebInspector.TimelinePanel.prototype.setMainViewWidth):
        (WebInspector.TimelinePanel.prototype.getItemTypeName):
        (WebInspector.TimelineRecordTreeElement):
        (WebInspector.TimelineRecordTreeElement.prototype.onattach):
        * inspector/front-end/WebKit.qrc:
        * inspector/front-end/inspector.css:
        * inspector/front-end/inspector.html:
        * inspector/front-end/inspector.js:
        (WebInspector._createPanels):

2009-10-23  Joseph Pecoraro  <joepeck@webkit.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Clash Between Search's onkeyup and incremental search events
        https://bugs.webkit.org/show_bug.cgi?id=30731

        * inspector/front-end/inspector.js:
        (WebInspector.performSearch): prevent incremental search event from clobbering a forced search

2009-10-23  Kelly Norton  <knorton@google.com>

        Reviewed by Pavel Feldman.

        Removes the need for C++ Timeline types in InspectorTimelineAgent in favor
        of ScriptObjects.
        https://bugs.webkit.org/show_bug.cgi?id=30707

        * GNUmakefile.am:
        * WebCore.vcproj/WebCore.vcproj:
        * WebCore.xcodeproj/project.pbxproj:
        * inspector/DOMDispatchTimelineItem.cpp: Removed.
        * inspector/DOMDispatchTimelineItem.h: Removed.
        * inspector/InspectorTimelineAgent.cpp:
        (WebCore::InspectorTimelineAgent::InspectorTimelineAgent):
        (WebCore::InspectorTimelineAgent::willDispatchDOMEvent):
        (WebCore::InspectorTimelineAgent::didDispatchDOMEvent):
        (WebCore::InspectorTimelineAgent::willLayout):
        (WebCore::InspectorTimelineAgent::didLayout):
        (WebCore::InspectorTimelineAgent::willRecalculateStyle):
        (WebCore::InspectorTimelineAgent::didRecalculateStyle):
        (WebCore::InspectorTimelineAgent::willPaint):
        (WebCore::InspectorTimelineAgent::didPaint):
        (WebCore::InspectorTimelineAgent::willWriteHTML):
        (WebCore::InspectorTimelineAgent::didWriteHTML):
        (WebCore::InspectorTimelineAgent::reset):
        (WebCore::InspectorTimelineAgent::didCompleteCurrentRecord):
        (WebCore::InspectorTimelineAgent::pushCurrentTimelineItem):
        * inspector/InspectorTimelineAgent.h:
        (WebCore::InspectorTimelineAgent::TimelineItemEntry::TimelineItemEntry):
        * inspector/TimelineItem.cpp: Removed.
        * inspector/TimelineItem.h: Removed.
        * inspector/TimelineItemFactory.cpp: Added.
        (WebCore::TimelineItemFactory::createGenericTimelineItem):
        (WebCore::TimelineItemFactory::createDOMDispatchTimelineItem):
        * inspector/TimelineItemFactory.h: Added.
        (WebCore::):
        (WebCore::TimelineItemFactory::TimelineItemFactory):

2009-10-23  Gavin Barraclough  <barraclough@apple.com>

        Reviewed by Geoff Garen.

        https://bugs.webkit.org/show_bug.cgi?id=30729
        Provide private API to request the global context for a specific world.
        Used to initialize parameters on the global object.

        * bindings/js/ScriptController.cpp:
        (WebCore::ScriptController::globalObject):
        * bindings/js/ScriptController.h:

2009-10-23  Steve Block  <steveblock@google.com>

        Reviewed by Eric Seidel.

        Fixes style problems in Android-specific files.
        https://bugs.webkit.org/show_bug.cgi?id=30717

        Style changes only, no new tests possible.

        * page/android/EventHandlerAndroid.cpp: Modified.
        (WebCore::EventHandler::passMouseDownEventToWidget): Fixes whitespace in method signature.
        (WebCore::EventHandler::passSubframeEventToSubframe): Fixes whitespace in method signature.
        (WebCore::EventHandler::passWheelEventToWidget): Fixes whitespace in method signature.
        (WebCore::EventHandler::passMouseMoveEventToSubframe): Fixes whitespace in method signature.
        * platform/android/ClipboardAndroid.h: Modified. Fixes header include order and indenting.
        * platform/android/CursorAndroid.cpp: Modified. 
        (WebCore::grabCursor): Fixes function braces.
        (WebCore::grabbingCursor): Fixes function braces.
        * platform/android/FileChooserAndroid.cpp: Modified.
        (WebCore::FileChooser::basenameForWidth): Fixes braces on while statement, and updates String::copy to String::threadsafeCopy.
        * platform/android/FileSystemAndroid.cpp: Modified. Fixes header include order.
        (WebCore::unloadModule): Fixes zero test.
        (WebCore::writeToFile): Fixes if statement structure.
        * platform/android/KeyEventAndroid.cpp: Modified.
        (WebCore::windowsKeyCodeForKeyEvent): Fixes switch statement indenting.
        (WebCore::keyIdentifierForAndroidKeyCode): Fixes switch statement indenting.
        * platform/android/ScreenAndroid.cpp: Modified. Fixes header include order and switch statement indenting.
        * platform/android/TemporaryLinkStubs.cpp: Modified. Fixes header include order.

2009-10-23  Sam Weinig  <sam@webkit.org>

        Another shot at a fixed build.

        * DerivedSources.cpp:

2009-10-23  Sam Weinig  <sam@webkit.org>

        Another shot at a fixed build.

        * html/HTMLOptionsCollection.idl:

2009-10-23  Brady Eidson  <beidson@apple.com>

        50,000!

        * ChangeLog: Point out revision 50,000.

2009-10-23  Sam Weinig  <sam@webkit.org>

        Reviewed by Anders Carlsson.

        Fix for https://bugs.webkit.org/show_bug.cgi?id=30695
        Drop .tags() support from HTMLCollection

        - Make .tags() only work for HTMLAllCollections in JS. .tags() is still
          available for all HTMLCollection like objects in Objective-C since that
          is API.
        - Auto-generate HTMLAllCollection.

        Test: fast/dom/HTMLDocument/document-all.html

        * DerivedSources.make:
        * GNUmakefile.am:
        * WebCore.gypi:
        * WebCore.pro:
        * WebCore.vcproj/WebCore.vcproj:
        * WebCore.xcodeproj/project.pbxproj:
        * bindings/js/JSHTMLAllCollection.cpp: Removed.
        * bindings/js/JSHTMLAllCollection.h: Removed.
        * bindings/js/JSHTMLAllCollectionCustom.cpp: Added.
        (WebCore::getNamedItems):
        (WebCore::callHTMLAllCollection):
        (WebCore::JSHTMLAllCollection::getCallData):
        (WebCore::JSHTMLAllCollection::canGetItemsForName):
        (WebCore::JSHTMLAllCollection::nameGetter):
        (WebCore::JSHTMLAllCollection::item):
        (WebCore::JSHTMLAllCollection::namedItem):
        * bindings/js/JSHTMLCollectionCustom.cpp:
        (WebCore::toJS):
        * bindings/js/JSHTMLDocumentCustom.cpp:
        * bindings/scripts/CodeGeneratorJS.pm:
        * dom/Document.cpp:
        (WebCore::Document::all):
        * dom/Document.h:
        * dom/HTMLAllCollection.idl: Removed.
        * html/HTMLAllCollection.cpp: Added.
        (WebCore::HTMLAllCollection::create):
        (WebCore::HTMLAllCollection::HTMLAllCollection):
        (WebCore::HTMLAllCollection::~HTMLAllCollection):
        * html/HTMLAllCollection.h: Added.
        * html/HTMLAllCollection.idl: Added.
        * html/HTMLCollection.h:
        * html/HTMLCollection.idl:
        * html/HTMLDocument.idl:
        * page/DOMWindow.idl:

2009-10-23  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: pull basic sidebar implementation into the Panel.

        https://bugs.webkit.org/show_bug.cgi?id=30720

        * inspector/front-end/Panel.js:
        (WebInspector.Panel):
        (WebInspector.Panel.prototype.jumpToPreviousSearchResult):
        (WebInspector.Panel.prototype.handleKeyEvent):
        (WebInspector.Panel.prototype._createSidebar):
        (WebInspector.Panel.prototype._startSidebarDragging):
        (WebInspector.Panel.prototype._sidebarDragging):
        (WebInspector.Panel.prototype._endSidebarDragging):
        (WebInspector.Panel.prototype._updateSidebarWidth):
        (WebInspector.Panel.prototype.setCenterViewWidth):
        * inspector/front-end/ProfilesPanel.js:
        (WebInspector.ProfilesPanel):
        (WebInspector.ProfilesPanel.prototype.setCenterViewWidth):
        * inspector/front-end/StoragePanel.js:
        (WebInspector.StoragePanel):
        (WebInspector.StoragePanel.prototype.setCenterViewWidth):

2009-10-23  Jens Alfke  <snej@chromium.org>

        Reviewed by Dimitri Glazkov.

        Slight optimizations to object returning and exception handling in generated V8 bindings.
        https://bugs.webkit.org/show_bug.cgi?id=30599

        * bindings/scripts/CodeGeneratorV8.pm: Generate better code
        * bindings/v8/V8DOMWrapper.h:
        (WebCore::V8DOMWrapper::convertToV8Object): Added overload that takes a Ref<>
        * bindings/v8/custom/V8InspectorBackendCustom.cpp:
        (WebCore::CALLBACK_FUNC_DECL): Remove unnecessary template param to prevent compile error

2009-10-23  Alpha Lam  <hclam@chromium.org>

        Reviewed by Eric Carlson.

        Volume slider always starts at half volume
        https://bugs.webkit.org/show_bug.cgi?id=28322

        Sets the value attribute of volume slider to the volume attribute
        of the media element. Also update the value attribute of the
        input element for the volume slider when the volume attribute
        of the media element is updated.

        Test: media/video-volume-slider.html

        * rendering/MediaControlElements.cpp:
        (WebCore::MediaControlVolumeSliderElement::update):
        Set the value attribute of the input element for the volume slider
        using the current volume of the media element.
        * rendering/MediaControlElements.h:
        Add method definition of update().
        * rendering/RenderMedia.cpp:
        (WebCore::RenderMedia::createVolumeSlider):
        Creates a volume slider with value attribute equals to the current
        volume attribute of the media element.

2009-10-23  Evan Martin  <evan@chromium.org>

        Reviewed by Eric Seidel.

        Chrome Linux: fix caret positioning in LTR complex languages
        The caret is positioned off by one in languages like Thai.

        https://bugs.webkit.org/show_bug.cgi?id=28284

        A group of us spent a while trying various approaches to write a test
        for this; however, since it is only that the blinking cursor is
        displayed incorrectly, we concluded it can not be tested.

        (Patch by Hironori Bono.)

        * platform/graphics/chromium/FontLinux.cpp:
        (WebCore::Font::selectionRectForComplexText):

2009-10-23  Tony Chang  <tony@chromium.org>

        Reviewed by David Levin.

        Fix Chromium build after IsoldatedWorld change (r49963).
        https://bugs.webkit.org/show_bug.cgi?id=30719

        * bindings/ScriptControllerBase.cpp:
        * bindings/js/ScriptController.cpp:
        (WebCore::ScriptController::executeScriptInIsolatedWorld):
        * bindings/v8/ScriptController.cpp:
        (WebCore::mainThreadNormalWorld):
        * bindings/v8/ScriptController.h:
        (WebCore::ScriptController::windowShell):
        (WebCore::ScriptController::existingWindowShell):
        * dom/Document.cpp:
        (WebCore::Document::createWrapperCache):
        * dom/ScriptExecutionContext.cpp:
        * dom/ScriptExecutionContext.h:
        * xml/XMLHttpRequest.cpp:
        * xml/XMLHttpRequest.h:

2009-10-23  Xiaomei Ji  <xji@chromium.org>

        Reviewed by Sam Weinig.

        Fix caretRangeFromPoint()/elementFromPoint() returns wrong result 
        for a zoomed and scrolled page.
        https://bugs.webkit.org/show_bug.cgi?id=30689.

        The real cause is the wrong calculation of event.clientX/Y when
        page is zoomed and scolled.
        After Sam fixed the event.clientX/Y in r49551, the hit test point
        should be recalculated (revert r49490).

        Test: fast/dom/Document/CaretRangeFromPoint/caretRangeFromPoint-in-zoom-and-scroll.html

        * dom/Document.cpp:
        (WebCore::Document::elementFromPoint): calculate the correct point
        relative to document when page is zoomed and scrolled.
        (WebCore::Document::caretRangeFromPoint): calculate the correct point
        relative to document when page is zoomed and scrolled.

2009-10-22  Dumitru Daniliuc  <dumi@chromium.org>

        Reviewed by Dmitry Titov.

        Adding a class that allows us to enable/disable features at
        runtime. Adding a flag to enable database support.

        https://bugs.webkit.org/show_bug.cgi?id=30653

        * WebCore.gypi:
        * bindings/v8/RuntimeEnabledFeatures.cpp: Added.
        * bindings/v8/RuntimeEnabledFeatures.h: Added.
        (WebCore::RuntimeEnabledFeatures::setDatabaseEnabled):
        (WebCore::RuntimeEnabledFeatures::databaseEnabled):
        (WebCore::RuntimeEnabledFeatures::RuntimeEnabledFeatures):
        * bindings/v8/custom/V8CustomBinding.h:
        * bindings/v8/custom/V8DOMWindowCustom.cpp:
        (WebCore::ACCESSOR_RUNTIME_ENABLER):
        * page/DOMWindow.idl:

2009-10-23  Keishi Hattori  <casey.hattori@gmail.com>

        Reviewed by Timothy Hatcher.

        Inspector injects _inspectorCommandLineAPI into global object when opened
        https://bugs.webkit.org/show_bug.cgi?id=30675

        * inspector/front-end/InjectedScript.js:
        (InjectedScript.getCompletions):
        (InjectedScript._evaluateOn):
        (InjectedScript.addInspectedNode):
        (InjectedScript._ensureCommandLineAPIInstalled): Moved _inspectorCommandLineAPI from window to console.

2009-10-23  Janne Koskinen  <janne.p.koskinen@digia.com>

        Reviewed by Tor Arne Vestbø.

        [Qt] don't undef NULL in Symbian emulator

        npapi.h way of defining mwerks compiler,__intel__
        and win32 are all true for Symbian emulator.
        Changed the definions so that NULL won't be undefined
        when compiling for Symbian emulator nor target HW.

        * bridge/npapi.h:

2009-10-23  Janne Koskinen  <janne.p.koskinen@digia.com>

        Reviewed by Tor Arne Vestbø.

        [Qt] Correct linking of sqlite3 for Symbian
        https://bugs.webkit.org/show_bug.cgi?id=30569

        ".lib" will try to include library as static library
        causing the library to be searched from wrong directory and if found
        will be statically linked instead of the inteded dynamic linking.

        * WebCore.pro:

2009-10-23  Enrica Casucci  <enrica@apple.com>

        Reviewed by Adele Peterson.

        REGRESSION: Copy is copying incorrect background-color
        <rdar://problem/7248529>
        https://bugs.webkit.org/show_bug.cgi?id=29697

        Test: editing/execCommand/indent-paragraphs.html

        This change removes the BackgroundColor from the list 
        of inheritable CSS properties and changes significantly
        the way we perform indentation.
        The new implementation of IndentOutdentCommand uses a new method
        defined in CompositeEditCommand called moveParagraphWithClones.
        This is an improved version of the original moveParagraph that
        is aimed at preserving the original markup of the paragraph being
        moved.

        * editing/ApplyStyleCommand.cpp:
        (WebCore::): removed CSSPropertyBackgroundColor from editingStyleProperties.
        * editing/CompositeEditCommand.cpp:
        (WebCore::CompositeEditCommand::CompositeEditCommand): Removed trailing blanks.
        (WebCore::CompositeEditCommand::rebalanceWhitespaceAt): Removed trailing blanks.
        (WebCore::CompositeEditCommand::cloneParagraphUnderNewElement): Added.
        (WebCore::CompositeEditCommand::cleanupAfterDeletion): Added.
        (WebCore::CompositeEditCommand::moveParagraphWithClones): Added.
        (WebCore::CompositeEditCommand::moveParagraphs): Modified to use cleanupAfterDeletion.
        (WebCore::CompositeEditCommand::breakOutOfEmptyListItem): Removed trailing blanks.
        (WebCore::CompositeEditCommand::breakOutOfEmptyMailBlockquotedParagraph): Removed trailing blanks.
        (WebCore::CompositeEditCommand::positionAvoidingSpecialElementBoundary): Removed trailing blanks.
        * editing/CompositeEditCommand.h: Added three new methods.
        * editing/IndentOutdentCommand.cpp:
        (WebCore::IndentOutdentCommand::tryIndentingAsListItem): Changed to use moveParagraphWithClones.
        (WebCore::IndentOutdentCommand::indentIntoBlockquote): Changed to use moveParagraphWithClones.
        (WebCore::IndentOutdentCommand::indentRegion): Removed comment.
        * editing/IndentOutdentCommand.h: Removed prepareBlockquoteLevelForInsertion method.

2009-10-23  Steve Block  <steveblock@google.com>

        Reviewed by Eric Seidel.

        Adds missing UnusedParam.h includes, required when INSPECTOR is not enabled.
        https://bugs.webkit.org/show_bug.cgi?id=30677

        Build fix, no new tests required.

        * page/Console.cpp: Modified. Added UnusedParam.h include.
        * workers/WorkerContext.cpp: Modified. Added UnusedParam.h include.

2009-10-23  Girish Ramakrishnan  <girish@forwardbias.in>

        Reviewed by Holger Freyther.

        [Qt] Plugins : Use window's winId() instead of the widget's.

        As per, https://developer.mozilla.org/en/NPN_GetValue
        NPNVnetscapeWindow on Unix/X11: "Gets the browser toplevel window in which the
        plug-in is displayed; returns Window".

        The issue was found because NPNVNetscapeWindow winId() ends up creating
        a native window resulting in flicker.

        https://bugs.webkit.org/show_bug.cgi?id=30706

        * plugins/qt/PluginViewQt.cpp:
        (WebCore::PluginView::getValue):

2009-10-23  Girish Ramakrishnan  <girish@forwardbias.in>

        Reviewed by Holger Freyther.

        [Qt] Windowless Plugins : Don't use m_clipRect when painting.

        Though it works, it is not correct to use m_clipRect for painting
        in Windowless mode. Instead, the rect paramater that is passed
        as a part of PluginView::paint() must be used. This change will
        also result in some speedup since previously we used to paint all
        the visible parts of a windowless plugin (even if those parts were
        not dirty).

        Also, fix invalidateRect() to compute the correct width and height.

        https://bugs.webkit.org/show_bug.cgi?id=30711

        * plugins/qt/PluginViewQt.cpp:
        (WebCore::PluginView::paint):
        (WebCore::PluginView::invalidateRect):

2009-10-21  Girish Ramakrishnan  <girish@forwardbias.in>

        Reviewed by Holger Freyther.

        Plugins : Use test.swf in the plugins manual tests.

        They previously referenced youtube videos which among other things are
        cumbersome to use without internet connection. The old youtube link is
        just commented out so that testing with youtube can be done with
        little effort.

        https://bugs.webkit.org/show_bug.cgi?id=30662

        * manual-tests/plugins/test.swf: Copied from LayoutTests/fast/replaced/resources/test.swf.
        * manual-tests/plugins/windowed.html:
        * manual-tests/plugins/windowless.html:
        * manual-tests/qt/plugin-sibling-frame-include.html:

2009-10-23  Brian Weinstein  <bweinstein@apple.com>

        Reviewed by Jon Honeycutt.

        Fix the Windows Release build by moving Accessibility files
        into all-in-one file and excluding them from the build.

        * WebCore.vcproj/WebCore.vcproj:
        * accessibility/AccessibilityAllInOne.cpp: Added.

2009-10-16  Gavin Barraclough  <barraclough@apple.com>

        Reviewed by Sam Weinig & Geoff Garen.

        https://bugs.webkit.org/show_bug.cgi?id=30696
        Add support for IsolatedWorlds to JSC bindings.

        An IsolatedWorld is basically a parallel, separate copy of the window shells and DOM wrapper objects for
        a given document.  To support isolation this patch:

            * Adds support to the ScriptController to track multiple window shells, one per world.
            * Adds support to Document to support multiple separate wrapper-maps, one per world.
            * Replaces the single global DOM wrapper map (on the WebCoreJSClientData) with separate maps,
              stored on the (new) IsolatedWorld objects.

        In addition to supporting separate copies of these objects, two other features are supported:

            * It is necessary to track the current world on entry into JSC, so that within callbacks out to WebCore
              we can determine which world (and as such, set of DOM bindings) we should be operating on.
            * EventListeners & Callbacks are run in the world they were registered in.
              This requires the handler to retain a reference to the world.

        No new tests. (Enabled existing isolated world layout tests.)

        * WebCore.base.exp:
        * bindings/js/JSAbstractWorkerCustom.cpp:
        (WebCore::JSAbstractWorker::addEventListener):
        (WebCore::JSAbstractWorker::removeEventListener):
        * bindings/js/JSCallbackData.cpp:
        (WebCore::JSCallbackData::invokeCallback):
        * bindings/js/JSCallbackData.h:
        (WebCore::JSCallbackData::JSCallbackData):
        * bindings/js/JSCustomXPathNSResolver.cpp:
        (WebCore::JSCustomXPathNSResolver::lookupNamespaceURI):
        * bindings/js/JSDOMApplicationCacheCustom.cpp:
        (WebCore::JSDOMApplicationCache::addEventListener):
        (WebCore::JSDOMApplicationCache::removeEventListener):
        * bindings/js/JSDOMBinding.cpp:
        (WebCore::removeWrappers):
        (WebCore::DOMObjectWrapperMap::get):
        (WebCore::DOMObjectWrapperMap::set):
        (WebCore::DOMObjectWrapperMap::remove):
        (WebCore::DOMObjectWrapperMap::take):
        (WebCore::IsolatedWorld::IsolatedWorld):
        (WebCore::IsolatedWorld::~IsolatedWorld):
        (WebCore::EnterIsolatedWorld::EnterIsolatedWorld):
        (WebCore::EnterIsolatedWorld::~EnterIsolatedWorld):
        (WebCore::JSGlobalDataWorldIterator::JSGlobalDataWorldIterator):
        (WebCore::JSGlobalDataWorldIterator::operator bool):
        (WebCore::JSGlobalDataWorldIterator::operator*):
        (WebCore::JSGlobalDataWorldIterator::operator->):
        (WebCore::JSGlobalDataWorldIterator::operator++):
        (WebCore::getCurrentWorld):
        (WebCore::getNormalWorld):
        (WebCore::commonNormalWorld):
        (WebCore::commonCurrentWorld):
        (WebCore::DOMObjectHashTableMap::mapFor):
        (WebCore::DOMObjectWrapperMap::mapFor):
        (WebCore::forgetDOMObject):
        (WebCore::getCachedDOMNodeWrapper):
        (WebCore::forgetDOMNode):
        (WebCore::cacheDOMNodeWrapper):
        (WebCore::forgetAllDOMNodesForDocument):
        (WebCore::forgetWorldOfDOMNodesForDocument):
        (WebCore::isObservableThroughDOM):
        (WebCore::markDOMNodesForDocument):
        (WebCore::markActiveObjectsForContext):
        (WebCore::takeWrappers):
        (WebCore::updateDOMNodeDocument):
        (WebCore::markDOMObjectWrapper):
        (WebCore::allowsAccessFromFrame):
        (WebCore::printErrorMessageForFrame):
        (WebCore::JSC_DebuggerCallFrame_evaluateInWorld):
        (WebCore::JSC_callInWorld):
        (WebCore::JSC_constructInWorld):
        (WebCore::JSC_evaluateInWorld):
        * bindings/js/JSDOMBinding.h:
        (WebCore::IsolatedWorld::rememberDocument):
        (WebCore::IsolatedWorld::forgetDocument):
        (WebCore::IsolatedWorld::rememberScriptController):
        (WebCore::IsolatedWorld::forgetScriptController):
        (WebCore::DOMObjectHashTableMap::~DOMObjectHashTableMap):
        (WebCore::DOMObjectHashTableMap::get):
        (WebCore::WebCoreJSClientData::WebCoreJSClientData):
        (WebCore::WebCoreJSClientData::currentWorld):
        (WebCore::WebCoreJSClientData::normalWorld):
        (WebCore::WebCoreJSClientData::rememberWorld):
        (WebCore::WebCoreJSClientData::forgetWorld):
        (WebCore::debuggerWorld):
        (WebCore::pluginWorld):
        * bindings/js/JSDOMGlobalObject.cpp:
        (WebCore::JSDOMGlobalObject::createJSAttributeEventListener):
        (WebCore::toJSDOMGlobalObject):
        * bindings/js/JSDOMGlobalObject.h:
        * bindings/js/JSDOMWindowBase.cpp:
        (WebCore::JSDOMWindowBase::printErrorMessage):
        (WebCore::JSDOMWindowBase::commonJSGlobalData):
        (WebCore::toJS):
        (WebCore::toJSDOMWindow):
        * bindings/js/JSDOMWindowBase.h:
        * bindings/js/JSDOMWindowCustom.cpp:
        (WebCore::createWindow):
        (WebCore::JSDOMWindow::open):
        (WebCore::JSDOMWindow::showModalDialog):
        (WebCore::JSDOMWindow::setTimeout):
        (WebCore::JSDOMWindow::setInterval):
        (WebCore::JSDOMWindow::addEventListener):
        (WebCore::JSDOMWindow::removeEventListener):
        * bindings/js/JSDOMWindowShell.cpp:
        (WebCore::toJS):
        (WebCore::toJSDOMWindowShell):
        * bindings/js/JSDOMWindowShell.h:
        * bindings/js/JSDesktopNotificationsCustom.cpp:
        (WebCore::JSNotification::addEventListener):
        (WebCore::):
        * bindings/js/JSEventListener.cpp:
        (WebCore::JSEventListener::JSEventListener):
        (WebCore::JSEventListener::handleEvent):
        (WebCore::JSEventListener::reportError):
        * bindings/js/JSEventListener.h:
        (WebCore::JSEventListener::create):
        * bindings/js/JSEventSourceCustom.cpp:
        (WebCore::JSEventSource::addEventListener):
        (WebCore::JSEventSource::removeEventListener):
        * bindings/js/JSEventTarget.cpp:
        (WebCore::toJS):
        * bindings/js/JSHTMLDocumentCustom.cpp:
        (WebCore::JSHTMLDocument::open):
        * bindings/js/JSHTMLFrameSetElementCustom.cpp:
        (WebCore::JSHTMLFrameSetElement::nameGetter):
        * bindings/js/JSInspectorBackendCustom.cpp:
        (WebCore::JSInspectorBackend::databaseForId):
        (WebCore::JSInspectorBackend::inspectedWindow):
        (WebCore::JSInspectorBackend::nodeForId):
        * bindings/js/JSLazyEventListener.cpp:
        (WebCore::JSLazyEventListener::JSLazyEventListener):
        (WebCore::JSLazyEventListener::parseCode):
        * bindings/js/JSLazyEventListener.h:
        (WebCore::JSLazyEventListener::create):
        * bindings/js/JSMessageChannelCustom.cpp:
        (WebCore::JSMessageChannel::markChildren):
        * bindings/js/JSMessagePortCustom.cpp:
        (WebCore::JSMessagePort::markChildren):
        (WebCore::JSMessagePort::addEventListener):
        (WebCore::JSMessagePort::removeEventListener):
        * bindings/js/JSNodeCustom.cpp:
        (WebCore::JSNode::addEventListener):
        (WebCore::JSNode::removeEventListener):
        (WebCore::JSNode::markChildren):
        * bindings/js/JSNodeFilterCondition.cpp:
        (WebCore::JSNodeFilterCondition::acceptNode):
        * bindings/js/JSQuarantinedObjectWrapper.cpp:
        (WebCore::JSQuarantinedObjectWrapper::construct):
        (WebCore::JSQuarantinedObjectWrapper::call):
        * bindings/js/JSSVGElementInstanceCustom.cpp:
        (WebCore::JSSVGElementInstance::addEventListener):
        (WebCore::JSSVGElementInstance::removeEventListener):
        * bindings/js/JSSharedWorkerCustom.cpp:
        (WebCore::JSSharedWorker::markChildren):
        * bindings/js/JSWebSocketCustom.cpp:
        (WebCore::JSWebSocket::addEventListener):
        (WebCore::JSWebSocket::removeEventListener):
        * bindings/js/JSWorkerContextCustom.cpp:
        (WebCore::JSWorkerContext::addEventListener):
        (WebCore::JSWorkerContext::removeEventListener):
        (WebCore::JSWorkerContext::setTimeout):
        (WebCore::JSWorkerContext::setInterval):
        * bindings/js/JSXMLHttpRequestConstructor.cpp:
        (WebCore::constructXMLHttpRequest):
        * bindings/js/JSXMLHttpRequestCustom.cpp:
        (WebCore::JSXMLHttpRequest::markChildren):
        (WebCore::JSXMLHttpRequest::addEventListener):
        (WebCore::JSXMLHttpRequest::removeEventListener):
        * bindings/js/JSXMLHttpRequestUploadCustom.cpp:
        (WebCore::JSXMLHttpRequestUpload::markChildren):
        (WebCore::JSXMLHttpRequestUpload::addEventListener):
        (WebCore::JSXMLHttpRequestUpload::removeEventListener):
        * bindings/js/ScheduledAction.cpp:
        (WebCore::ScheduledAction::create):
        (WebCore::ScheduledAction::ScheduledAction):
        (WebCore::ScheduledAction::executeFunctionInContext):
        (WebCore::ScheduledAction::execute):
        * bindings/js/ScheduledAction.h:
        (WebCore::ScheduledAction::ScheduledAction):
        * bindings/js/ScriptCachedFrameData.cpp:
        (WebCore::ScriptCachedFrameData::ScriptCachedFrameData):
        (WebCore::ScriptCachedFrameData::restore):
        * bindings/js/ScriptController.cpp:
        (WebCore::ScriptController::~ScriptController):
        (WebCore::ScriptController::evaluateInWorld):
        (WebCore::ScriptController::evaluate):
        (WebCore::ScriptController::evaluateInIsolatedWorld):
        (WebCore::ScriptController::clearWindowShell):
        (WebCore::ScriptController::initScript):
        (WebCore::ScriptController::processingUserGestureEvent):
        (WebCore::ScriptController::attachDebugger):
        (WebCore::ScriptController::updateDocument):
        (WebCore::ScriptController::bindingRootObject):
        (WebCore::ScriptController::createRootObject):
        (WebCore::ScriptController::windowScriptNPObject):
        (WebCore::ScriptController::jsObjectForPluginElement):
        * bindings/js/ScriptController.h:
        (WebCore::ScriptController::windowShell):
        (WebCore::ScriptController::existingWindowShell):
        (WebCore::ScriptController::globalObject):
        (WebCore::ScriptController::forgetWorld):
        * bindings/js/ScriptControllerMac.mm:
        (WebCore::ScriptController::windowScriptObject):
        * bindings/js/ScriptEventListener.cpp:
        (WebCore::createAttributeEventListener):
        * bindings/js/ScriptFunctionCall.cpp:
        (WebCore::ScriptFunctionCall::call):
        (WebCore::ScriptFunctionCall::construct):
        * bindings/js/ScriptObjectQuarantine.cpp:
        (WebCore::getQuarantinedScriptObject):
        * bindings/js/ScriptState.cpp:
        (WebCore::scriptStateFromNode):
        (WebCore::scriptStateFromPage):
        * bindings/js/ScriptState.h:
        * bindings/js/WorkerScriptController.cpp:
        (WebCore::WorkerScriptController::WorkerScriptController):
        (WebCore::WorkerScriptController::evaluate):
        * bindings/objc/DOMInternal.mm:
        (-[WebScriptObject _initializeScriptDOMNodeImp]):
        * bindings/objc/WebScriptObject.mm:
        (-[WebScriptObject callWebScriptMethod:withArguments:]):
        (-[WebScriptObject evaluateWebScript:]):
        * bindings/scripts/CodeGeneratorJS.pm:
        * bridge/NP_jsobject.cpp:
        (_NPN_InvokeDefault):
        (_NPN_Invoke):
        (_NPN_Evaluate):
        (_NPN_Construct):
        * bridge/jni/jni_jsobject.mm:
        (JavaJSObject::call):
        (JavaJSObject::eval):
        * dom/Document.cpp:
        (WebCore::Document::createWrapperCache):
        * dom/Document.h:
        (WebCore::Document::wrapperCacheMap):
        (WebCore::Document::getWrapperCache):
        * inspector/InspectorController.cpp:
        (WebCore::InspectorController::startUserInitiatedProfiling):
        (WebCore::InspectorController::stopUserInitiatedProfiling):
        * inspector/JavaScriptCallFrame.cpp:
        (WebCore::JavaScriptCallFrame::evaluate):
        * loader/FrameLoader.cpp:
        (WebCore::FrameLoader::dispatchWindowObjectAvailable):
        * platform/network/mac/AuthenticationMac.mm:
        * xml/XMLHttpRequest.cpp:
        (WebCore::XMLHttpRequest::XMLHttpRequest):
        (WebCore::XMLHttpRequest::dropProtection):
        * xml/XMLHttpRequest.h:
        (WebCore::XMLHttpRequest::create):

2009-10-22  Joseph Pecoraro  <joepeck@webkit.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: EventListenersSidebarPane TODO No Longer Needed
        https://bugs.webkit.org/show_bug.cgi?id=30705

        * inspector/front-end/EventListenersSidebarPane.js:

2009-10-22  Alexey Proskuryakov  <ap@apple.com>

        Reviewed by Tim Hatcher.

        https://bugs.webkit.org/show_bug.cgi?id=30506
        <rdar://problem/7319845> Resources that the server sent as 304 not modified are not shown
        in the inspectors resource pane

        I don't know how to make a test for this.

        The issue here was that preloaded resources weren't added to DocLoader document resource set,
        but Web Inspector asked DocLoader to fetch data from CachedResource. Even when (if) document
        parser eventually requested the same resource for real and it got added to resource set, it
        was too late - the Inspector wasn't updated.

        * inspector/InspectorResource.cpp:
        (WebCore::InspectorResource::cachedResource):
        (WebCore::InspectorResource::type):
        (WebCore::InspectorResource::resourceData):
        * inspector/InspectorResource.h:
        Fix the issue by trying to fetch corresponding CachedResource harder - also look in global
        cache. This seems safe, and easier than updating the Inspector on transitions between
        resource states (revalidate vs. revalidate done and preload vs. non-preload).

2009-10-22  Beth Dakin  <bdakin@apple.com>

        Reviewed by Dan Bernstein.

        Fix for <rdar://problem/6942706> ER: Add a CSS property that allows 
        shadows to work for SVG content
        -and corresponding-
        https://bugs.webkit.org/show_bug.cgi?id=30479

        This patch adds a new SVG-specific CSS property called -webkit-
        shadow that has the same syntax as -webkit-box-shadow

        Add CSSPropertyWebkitShadow to the list of SVG CSS properties, and 
        make valueForShadow a member function rather than a static function 
        * css/CSSComputedStyleDeclaration.cpp:
        (WebCore::):
        (WebCore::CSSComputedStyleDeclaration::valueForShadow):
        (WebCore::CSSComputedStyleDeclaration::getPropertyCSSValue):
        * css/CSSComputedStyleDeclaration.h:

        Call valueForShadow for CSSPropertyWebkitShadow
        * css/SVGCSSComputedStyleDeclaration.cpp:
        (WebCore::CSSComputedStyleDeclaration::getSVGPropertyCSSValue):

        Do standard CSS stuff for CSSPropertyWebkitShadow
        * css/SVGCSSParser.cpp:
        (WebCore::CSSParser::parseSVGValue):
        * css/SVGCSSPropertyNames.in:
        * css/SVGCSSStyleSelector.cpp:
        (WebCore::CSSStyleSelector::applySVGProperty):

        Set the appropriate shadow on the paint context if we have one. 
        This seems to be all we have to do to have an SVG-shaped shadow.
        * rendering/SVGRenderSupport.cpp:
        (WebCore::SVGRenderBase::prepareToRenderSVGContent):

        Add shadow to SVGRenderStyle. I added a new macro that I don't like 
        just because that's the way things are done here right now.
        * rendering/style/SVGRenderStyle.cpp:
        (WebCore::SVGRenderStyle::SVGRenderStyle):
        (WebCore::SVGRenderStyle::operator==):
        * rendering/style/SVGRenderStyle.h:
        * rendering/style/SVGRenderStyleDefs.cpp:
        (StyleShadowSVGData::StyleShadowSVGData):
        (StyleShadowSVGData::operator==):
        * rendering/style/SVGRenderStyleDefs.h:
        (WebCore::StyleShadowSVGData::create):
        (WebCore::StyleShadowSVGData::copy):
        (WebCore::StyleShadowSVGData::operator!=):

2009-10-22  Joanmarie Diggs  <joanmarie.diggs@gmail.com>
 
        Reviewed by Xan Lopez.

        https://bugs.webkit.org/show_bug.cgi?id=25530
        [Gtk] Implement LABEL_FOR/LABELLED_BY relationship pair for labels

        Implements atk_object_ref_relation_set and LABEL_FOR/LABELLED_BY.
        Also causes the accessible name for labeled controls to be based on
        the label as expected, rather than based on the contents.

        * accessibility/AccessibilityRenderObject.h:
        * accessibility/AccessibilityRenderObject.cpp:
        (correspondingLabelForControlElement):
        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (setAtkRelationSetFromCoreObject):
        (webkit_accessible_ref_relation_set):
        (webkit_accessible_class_init):
        (webkit_accessible_get_name):

2009-10-22  Joseph Pecoraro  <joepeck@webkit.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: windowFocused and windowBlured Fail to Clear/Mark Inspector as "inactive"
        https://bugs.webkit.org/show_bug.cgi?id=30663

          Correctly handle focusing/blurring on inner <iframe>'s such as Source Frames.

        * inspector/front-end/inspector.js:
        (WebInspector.windowFocused): fix for inner iframes
        (WebInspector.windowBlurred): fix for inner iframes
        (WebInspector.addMainEventListeners): change useCapture to false

2009-10-22  Jaime Yap  <jaimeyap@google.com>

        Reviewed by Timothy Hatcher.

        Makes a page reload optional when activating resource monitoring in
        InspectorController. It leaves the default behavior as performing the reload.
        Reload is an optional param so callsites do not have to change.

        https://bugs.webkit.org/show_bug.cgi?id=30684

        No new tests added.

        * inspector/InspectorController.cpp:
        (WebCore::InspectorController::enableResourceTracking):
        * inspector/InspectorController.h:

2009-10-22  Shu Chang  <Chang.Shu@nokia.com>

        Reviewed by Eric Seidel.

        [Qt] Fix memory leak in QNetworkReplyHandler::abort().
        In QNetworkReplyHandler::release(), m_reply should no longer point to its parent
        after being released.
        https://bugs.webkit.org/show_bug.cgi?id=30167

        No layout test available as a non-functional fix.

        * platform/network/qt/QNetworkReplyHandler.cpp:
        (WebCore::QNetworkReplyHandler::abort):
        (WebCore::QNetworkReplyHandler::release):

2009-10-22  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Fix DOMAgent leak.

        https://bugs.webkit.org/show_bug.cgi?id=30615

        * inspector/InspectorController.cpp:
        (WebCore::InspectorController::~InspectorController):
        (WebCore::InspectorController::setFrontendProxyObject):
        (WebCore::InspectorController::close):
        (WebCore::InspectorController::releaseDOMAgent):
        * inspector/InspectorController.h:
        * inspector/InspectorDOMAgent.h:
        (WebCore::InspectorDOMAgent::create):

2009-10-22  Dimitri Glazkov  <dglazkov@chromium.org>

        Reviewed by Adam Barth.

        [V8] Rework event listeners to not hold references to frame or V8 context.

        https://bugs.webkit.org/show_bug.cgi?id=30648

        Covered by existing layout tests: fast/events/attribute-listener*

        * bindings/scripts/CodeGeneratorV8.pm: Added passing ScriptExecutionContext*
            to event listener handling code.
        * bindings/v8/DateExtension.cpp:
        (WebCore::DateExtension::setAllowSleep): Changed to use currentContext().
        * bindings/v8/ScriptEventListener.cpp:
        (WebCore::createAttributeEventListener): Reworked to match JSC logic.
        (WebCore::getEventListenerHandlerBody): Added ScriptExecutionContext* param.
        * bindings/v8/V8AbstractEventListener.cpp:
        (WebCore::V8AbstractEventListener::V8AbstractEventListener): Removed Frame* param
            and usage.
        (WebCore::V8AbstractEventListener::handleEvent): Chaged to use ScriptExecutionContext*.
        (WebCore::V8AbstractEventListener::invokeEventHandler): Ditto.
        * bindings/v8/V8AbstractEventListener.h:
        (WebCore::V8AbstractEventListener::getListenerObject): Ditto.
        (WebCore::V8AbstractEventListener::prepareListenerObject): Ditto.
        * bindings/v8/V8DOMWrapper.cpp:
        (WebCore::V8DOMWrapper::convertEventListenerToV8Object):  Added ScriptExecutionContext* param.
        (WebCore::V8DOMWrapper::getEventListener): Ditto.
        * bindings/v8/V8DOMWrapper.h:
        (WebCore::V8DOMWrapper::convertEventListenerToV8Object): Ditto.
        * bindings/v8/V8EventListenerList.h:
        (WebCore::V8EventListenerList::findOrCreateWrapper): Removed ContextType* template param,
            because it's no longer needed.
        * bindings/v8/V8IsolatedWorld.h:
        (WebCore::V8IsolatedWorld::sharedContext): Renamed from shared_context.
        * bindings/v8/V8LazyEventListener.cpp:
        (WebCore::V8LazyEventListener::V8LazyEventListener): Removed Frame* param and usage.
        (WebCore::V8LazyEventListener::callListenerFunction): Added ScriptExecutionContext* param.
        (WebCore::V8LazyEventListener::prepareListenerObject): Ditto.
        * bindings/v8/V8LazyEventListener.h:
        (WebCore::V8LazyEventListener::create): Reordered params to match JSC impl.
        * bindings/v8/V8Proxy.cpp:
        (WebCore::V8Proxy::V8Proxy): Adjusted formatting to match WebKit style.
        (WebCore::V8Proxy::evaluateInNewContext): Changed to use m_context directly.
        (WebCore::V8Proxy::setInjectedScriptContextDebugId): Ditto.
        (WebCore::V8Proxy::createWrapperFromCacheSlowCase): Ditto.
        (WebCore::V8Proxy::isContextInitialized): Ditto.
        (WebCore::V8Proxy::updateDocumentWrapperCache): Ditto.
        (WebCore::V8Proxy::clearDocumentWrapperCache): Ditto.
        (WebCore::V8Proxy::disposeContextHandles): Added explicit disposing of m_context. 
        (WebCore::V8Proxy::clearForClose): Changed to use m_context directly.
        (WebCore::V8Proxy::clearForNavigation): Ditto.
        (WebCore::V8Proxy::setSecurityToken): Ditto.
        (WebCore::V8Proxy::updateDocument): Ditto.
        (WebCore::V8Proxy::initContextIfNeeded): Ditto.
        (WebCore::V8Proxy::context): Changed to use v8::Local.
        (WebCore::V8Proxy::mainWorldContext): Changed to use m_context directly. 
        (WebCore::V8Proxy::setContextDebugId): Ditto.
        (WebCore::toV8Context):
        * bindings/v8/V8Proxy.h: Removed shared_context decl, changed to use straight
            v8::Persistent for m_context.
        * bindings/v8/V8WorkerContextEventListener.cpp:
        (WebCore::workerProxy): Added.
        (WebCore::V8WorkerContextEventListener::V8WorkerContextEventListener): Removed
            WorkerContextExecutionProxy* param.
        (WebCore::V8WorkerContextEventListener::handleEvent): Started using ScriptExecutionContext*.
        (WebCore::V8WorkerContextEventListener::reportError): Ditto.
        (WebCore::V8WorkerContextEventListener::callListenerFunction): Ditto.
        (WebCore::V8WorkerContextEventListener::getReceiverObject): Ditto.
        * bindings/v8/V8WorkerContextEventListener.h:
        (WebCore::V8WorkerContextEventListener::create): Removed
            WorkerContextExecutionProxy* param.
        * bindings/v8/WorkerContextExecutionProxy.cpp:
        (WebCore::WorkerContextExecutionProxy::findOrCreateEventListener): Removed ContextType*
            template param.
        * bindings/v8/custom/V8CustomEventListener.cpp:
        (WebCore::V8EventListener::V8EventListener): Removed Frame* param.
        (WebCore::V8EventListener::getListenerFunction): Started using ScriptExecutionContext*.
        (WebCore::V8EventListener::callListenerFunction): Ditto.
        * bindings/v8/custom/V8CustomEventListener.h:
        (WebCore::V8EventListener::create): Removed Frame* param.

2009-10-14  Gaurav Shah  <gauravsh@google.com>

        Reviewed by Darin Fisher.

        Replaces temporary link stub for <keygen> tag handler for the Chromium
        browser with a call via the Chromium Bridge.

        https://bugs.webkit.org/show_bug.cgi?id=30360

        * platform/SSLKeyGenerator.h:
        * platform/chromium/ChromiumBridge.h:
        * platform/chromium/SSLKeyGeneratorChromium.cpp:
        (WebCore::getSupportedKeySizes):
        (WebCore::signedPublicKeyAndChallengeString):
        * platform/chromium/TemporaryLinkStubs.cpp:
        (WebCore::KURL::fileSystemPath):
        (WebCore::SharedBuffer::createWithContentsOfFile):

2009-10-22  Avi Drissman  <avi@chromium.org>

        Reviewed by Eric Seidel.

        Fixes Chromium Mac pasteboard handling to flow through the same code paths as other platforms.

        https://bugs.webkit.org/show_bug.cgi?id=30591

        * platform/chromium/ChromiumBridge.h:
        * platform/chromium/PasteboardChromium.cpp:
        (WebCore::Pasteboard::writeImage):

2009-10-20  Simon Fraser  <simon.fraser@apple.com>

        Reviewed by Darin Adler.

        Make accelerated compositing debug indicators work in release builds
        https://bugs.webkit.org/show_bug.cgi?id=30588
        
        Allow some debug indicators, that show which page elements go into compositing layers,
        to work in release builds, when the runtime prefs are set.

        * platform/graphics/GraphicsLayer.cpp:
        (WebCore::GraphicsLayer::GraphicsLayer):
        (WebCore::GraphicsLayer::setZPosition):
        * platform/graphics/GraphicsLayer.h:
        * platform/graphics/mac/GraphicsLayerCA.h:
        * platform/graphics/mac/GraphicsLayerCA.mm:
        (WebCore::clearBorderColor):
        (WebCore::GraphicsLayer::showRepaintCounter):
        (WebCore::GraphicsLayerCA::GraphicsLayerCA):
        (WebCore::GraphicsLayerCA::updateMasksToBounds):
        (WebCore::GraphicsLayerCA::updateLayerDrawsContent):
        (WebCore::GraphicsLayerCA::setDebugBorder):
        (WebCore::GraphicsLayerCA::swapFromOrToTiledLayer):
        (WebCore::GraphicsLayerCA::setupContentsLayer):
        * platform/graphics/mac/WebLayer.mm:

2009-10-22  Keishi Hattori  <casey.hattori@gmail.com>

        Reviewed by Pavel Feldman.

        Inspector should support monitorEvents/un monitorEvents() in the command line
        https://bugs.webkit.org/show_bug.cgi?id=19879

        * inspector/front-end/EventListenersSidebarPane.js:
        (WebInspector.EventListenersSidebarPane.prototype.update.callback): Ignores event listeners generated by monitorEvent
        * inspector/front-end/InjectedScript.js:
        (InjectedScript._ensureCommandLineAPIInstalled): Added _inspectorCommandLineAPI._logEvent, _allEventTypes, 
        _normalizeEventTypes, monitorEvent, unmonitorEvent.

2009-10-21  Joseph Pecoraro  <joepeck@webkit.org>

        Reviewed by Pavel Feldman.

        Web Inspector: windowFocused and windowBlurred Fail to Clear/Mark Inspector as "inactive"
        https://bugs.webkit.org/show_bug.cgi?id=30663

        * inspector/front-end/inspector.js:
        (WebInspector.windowFocused):
        (WebInspector.windowBlurred):

2009-10-22  Joseph Pecoraro  <joepeck@webkit.org>

        Reviewed by Pavel Feldman.

        Web Inspector: Error - requestContentType [undefined] is not an object
        https://bugs.webkit.org/show_bug.cgi?id=30666

        * inspector/front-end/ResourceView.js:
        (WebInspector.ResourceView.prototype._refreshFormData):

2009-10-22  Maxime Simon  <simon.maxime@gmail.com>

        Reviewed by Holger Freyther.

        [Haiku] Correction of the accented letter width (they were 2 characters long).
        https://bugs.webkit.org/show_bug.cgi?id=30629

        * platform/graphics/haiku/SimpleFontDataHaiku.cpp:
        (WebCore::SimpleFontData::platformWidthForGlyph):

2009-10-21  Jon Honeycutt  <jhoneycutt@apple.com>

        <rdar://problem/7270320> Screenshots of off-screen plug-ins are blank
        <rdar://problem/7270314> After halting a transparent PluginView on
        Windows, the transparency is applied twice

        Replace use of Frame::nodeImage() with a function that takes a snapshot
        of a PluginView.

        Reviewed by Dan Bernstein.

        * plugins/PluginView.h:
        Made paintWindowedPluginIntoContext() non-const, as it now calls
        paintIntoTransformedContext(). Declare paintIntoTransformedContext()
        and snapshot() for Windows platforms.

        * plugins/win/PluginViewWin.cpp:
        (WebCore::PluginView::paintIntoTransformedContext):
        Paints into the passed HDC without applying any coordinate translations.
        Code moved from paintWindowedPluginIntoContext() and paint(). Removed
        the memset() of windowpos in lieu of assignment.
        (WebCore::PluginView::paintWindowedPluginIntoContext):
        Code moved to paintIntoTransformedContext().
        (WebCore::PluginView::paint):
        Ditto.
        (WebCore::PluginView::snapshot):
        Create a context, and if the plug-in is windowless, translate it so the
        plug-in will draw at the correct location. Create a bitmap, and select
        it into the context. Paint the plug-in, and create a BitmapImage from
        the bitmap.
        (WebCore::PluginView::halt):
        Use snapshot().

2009-10-22  Fumitoshi Ukai  <ukai@chromium.org>

        Reviewed by Alexey Proskuryakov.

        Fix calculation of length in WebSocketChannel.cpp
        https://bugs.webkit.org/show_bug.cgi?id=30656

        * websockets/WebSocketChannel.cpp:
        (WebCore::WebSocketChannel::didReceiveData):

2009-10-21  Dumitru Daniliuc  <dumi@chromium.org>

        Reviewed by Dimitri Glazkov.

        Adding the ability to enable/disable functions in V8 at runtime.

        https://bugs.webkit.org/show_bug.cgi?id=30650

        * bindings/scripts/CodeGeneratorV8.pm:

2009-10-21  Darin Adler  <darin@apple.com>

        Swedish search (and other languages as well) is broken while fixing Japanese search
        https://bugs.webkit.org/show_bug.cgi?id=30646

        Rolled Japanese tailoring out that was done to fix
        https://bugs.webkit.org/show_bug.cgi?id=30437 earlier.
        It was overriding the locale-specific tailoring.
        We'll land a fix once we figure out how to add the
        Japanese tailoring without removing anything.

        * editing/TextIterator.cpp: Rolled out r49924.

2009-10-21  Pavel Feldman  <pfeldman@chromium.org>

        Not reviewed: chromium build fix - add missing image to gypi.

        * WebCore.gypi:

2009-10-21  Brian Weinstein  <bweinstein@apple.com>

        Reviewed by Eric Seidel.

        Fixes part of <http://webkit.org/b/30522>.
        Web Inspector: DOM Exceptions throughout the Inspector should be more human readable.

        Expose the description attribute that is now a member of
        ExceptionBase as of r49723, so when a user logs an exception, they
        can see the description in the Web Inspector.

        Test: fast/dom/dom-exception-description.html

        * dom/DOMCoreException.idl:
        * dom/EventException.idl:
        * dom/RangeException.idl:
        * svg/SVGException.idl:
        * xml/XMLHttpRequestException.idl:
        * xml/XPathException.idl:

2009-10-21  Brian Weinstein  <bweinstein@apple.com>

        Reviewed by Timothy Hatcher.

        Fixes <https://bugs.webkit.org/show_bug.cgi?id=30616>.
        REGRESSION (r49036): Web Inspector: Summary graph no longer switching to size summary.
        
        Add a check to make sure a function we need to calculate percentages is
        defined before we use it.

        * inspector/front-end/ResourcesPanel.js:
        (WebInspector.ResourcesPanel.prototype._updateGraphDividersIfNeeded):

2009-10-21  Keishi Hattori  <casey.hattori@gmail.com>

        Reviewed by Timothy Hatcher.

        REGRESSION: Clicking on nodes in the console should take you to the element in the DOM
        https://bugs.webkit.org/show_bug.cgi?id=27231

        * inspector/front-end/ConsoleView.js:
        (WebInspector.ConsoleView.prototype._formatnode): Turns on ElementsTreeOutline.showInElementsPanelEnabled
        * inspector/front-end/ElementsTreeOutline.js:
        (WebInspector.ElementsTreeOutline): Added ElementsTreeOutline.showInElementsPanelEnabled
        (WebInspector.ElementsTreeElement.prototype.onmousedown): Reveals the node in the Elements panel if 
        treeOutline.showInElementsPanelEnabled is true.

2009-10-21  Jeremy Orlow  <jorlow@chromium.org>

        Reviewed by Eric Seidel.

        https://bugs.webkit.org/show_bug.cgi?id=30637
        Fix a compiler warning in windows.

        * loader/ResourceLoadNotifier.h:

2009-10-21  Dmitry Titov  <dimich@chromium.org>

        Reviewed by Darin Adler.

        Fix the crash when a node not in a document receives dispatchEvent.
        https://bugs.webkit.org/show_bug.cgi?id=30611

        Test: fast/events/dispatch-event-no-document.html

        * dom/EventTarget.cpp: Check for scriptExecutionContext() at the moment of dispatchEvent; do nothing if no context.
        (WebCore::EventTarget::dispatchEvent):

2009-10-21  Adam Langley  <agl@google.com>

        Reviewed by Eric Seidel.

        Chromium Linux: disable subpixel text on layers.

        https://bugs.webkit.org/show_bug.cgi?id=30635
        http://code.google.com/p/chromium/issues/detail?id=25365

        With the addition of layers for drawing rounded corners in r49641,
        subpixel text on rounded rectangles broke. This is because the layer
        only contains a single alpha channel and this is insufficient to
        compose subpixel text correctly.

        On Windows, a large body of code in TransparencyWin.cpp exists to try
        to deal with this. Even then, in some cases, it downgrades to
        anti-aliased text. We need a fix for the grevious effects quickly thus
        this patch disables subpixel text when rendering into a layer.

        This would be covered by existing tests except that subpixel text is
        disabled for pixel tests on Chromium Linux.

        * platform/graphics/chromium/FontLinux.cpp:
        (WebCore::isCanvasMultiLayered):
        (WebCore::adjustTextRenderMode):
        (WebCore::Font::drawGlyphs):
        (WebCore::Font::drawComplexText):

2009-10-21  Kevin Ollivier  <kevino@theolliviers.com>

        wxMac 10.4 build fix, make sure we specify the Sqlite3 dependency correctly as otherwise
        it will use the sqlite3 system library rather than WebCoreSQLite3.

        * wscript:

2009-10-21  Dan Bernstein  <mitz@apple.com>

        Reviewed by Sam Weinig.

        Fixed background-clip parsing regressions introduced in r46240.

        Test: fast/css/background-clip-text.html

        * css/CSSParser.cpp:
        (WebCore::parseBackgroundClip): Added this helper method.
        (WebCore::CSSParser::parseFillShorthand): Use parseBackgroundClip() to
        reparse the value. The old code called parseFillProperty() again, which
        didn’t work, because parseFillProperty() advances the value list.
        (WebCore::CSSParser::parseFillProperty): Changed to use
        parseBackgroundClip().
        * css/CSSPrimitiveValueMappings.h:
        (WebCore::CSSPrimitiveValue::operator EFillBox): Added a case for
        CSSValueWebkitText.

2009-10-21  Alexander Pavlov  <apavlov@chromium.org>

        Reviewed by Timothy Hatcher.

        Enable creation of custom SidebarTreeElements for different ProfileTypes

        ProfileTypes can now create sidebar tree elements of custom types.
        https://bugs.webkit.org/show_bug.cgi?id=30520

        * inspector/front-end/ProfileView.js:
        (WebInspector.CPUProfileType.prototype.setRecordingProfile):
        (WebInspector.CPUProfileType.prototype.createSidebarTreeElementForProfile):
        (WebInspector.CPUProfileType.prototype.createView):
        (WebInspector.CPUProfile.prototype.get head):
        * inspector/front-end/ProfilesPanel.js:
        (WebInspector.ProfileType.prototype.buttonClicked):
        (WebInspector.ProfileType.prototype.viewForProfile):
        (WebInspector.ProfileType.prototype.createView):
        (WebInspector.ProfileType.prototype.createSidebarTreeElementForProfile):
        (WebInspector.ProfilesPanel.prototype.addProfileHeader):
        (WebInspector.ProfilesPanel.prototype.showProfile):

2009-10-20  Joseph Pecoraro  <joepeck@webkit.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Selectors in the Styles pane should trigger a search for that selector when clicked
        https://bugs.webkit.org/show_bug.cgi?id=17126

        * inspector/front-end/ElementsPanel.js:
        (WebInspector.ElementsPanel.prototype.addNodesToSearchResult): only change focusedDOMNode on a manual search
        * inspector/front-end/StylesSidebarPane.js:
        (WebInspector.StylePropertiesSection.prototype._clickSelector): trigger a search
        * inspector/front-end/ElementsTreeOutline.js:
        (WebInspector.ElementsTreeElement.prototype._startEditing): correctly start editing attribute value instead of name

2009-10-20  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Fix DOM Agent leak.

        https://bugs.webkit.org/show_bug.cgi?id=30615

        * inspector/InspectorController.cpp:
        (WebCore::InspectorController::~InspectorController):

2009-10-21  Girish Ramakrishnan  <girish@forwardbias.in>

        Reviewed by Holger Freyther.

        Plugins: Create manual tests for testing plugins
        
        Create two test files:
        1. windowed.html - Test plugin in windowed mode.
        2. windowless.html - Test plugin in windowless mode.

        https://bugs.webkit.org/show_bug.cgi?id=30503

        * manual-tests/plugins/windowed.html: Added.
        * manual-tests/plugins/windowless.html: Added.

2009-10-21  Satoshi Nakagawa  <psychs@limechat.net>

        Reviewed by Darin Adler.

        Fixed Japanese text search problems.
        Treat small kana letters and kana letters as different characters in search.
        Do not ignore diacritic marks in search for Japanese texts.

        https://bugs.webkit.org/show_bug.cgi?id=30437

        Test: fast/text/international/japanese-kana-letters.html

        * editing/TextIterator.cpp:
        (WebCore::createCollator):
        (WebCore::collator):
        (WebCore::createSearcher):

2009-10-20  Eric Z. Ayers  <zundel@google.com>

        Reviewed by Timothy Hatcher.

        Changes TimelineItems to be created with raw timestamps as opposed
        to a time relative to a start of session.  Normalized timestamps cause
        problems when monitoring a browsing session across multiple page
        transitions.

        * inspector/InspectorTimelineAgent.cpp:
        (WebCore::InspectorTimelineAgent::InspectorTimelineAgent):
        (WebCore::InspectorTimelineAgent::willDispatchDOMEvent):
        (WebCore::InspectorTimelineAgent::willLayout):
        (WebCore::InspectorTimelineAgent::willRecalculateStyle):
        (WebCore::InspectorTimelineAgent::willPaint):
        (WebCore::InspectorTimelineAgent::willWriteHTML):
        (WebCore::InspectorTimelineAgent::reset):
        (WebCore::InspectorTimelineAgent::didCompleteCurrentRecord):
        * inspector/InspectorTimelineAgent.h:

2009-10-20  Mark Rowe  <mrowe@apple.com>

        Reviewed by Oliver Hunt.

        Fix leak of WebSocketChannel by adopting the newly-created reference.

        * websockets/WebSocketChannel.h:
        (WebCore::WebSocketChannel::create):

2009-10-20  Jeremy Orlow  <jorlow@chromium.org>

        Reviewed by Adam Barth.

        DOM Storage runtime flag changes
        https://bugs.webkit.org/show_bug.cgi?id=30602

        Part 1/2.  Removing sessionStorageEnabled in next patch after the
        Chromium side of the changes lands.

        Revert my changes to Settings and instead implement DOM Storage enabling via
        the methods agreed upon in https://bugs.webkit.org/show_bug.cgi?id=30240

        This stuff was (intentionally) never exposed to web pages or DRT, so there's no
        LayoutTest visible changes and thus no tests.

        * bindings/v8/custom/V8CustomBinding.h:
        * bindings/v8/custom/V8DOMWindowCustom.cpp:
        (WebCore::ACCESSOR_RUNTIME_ENABLER):
        * page/DOMWindow.idl:
        * storage/Storage.cpp:
        (WebCore::Storage::setLocalStorageAvailable):
        (WebCore::Storage::localStorageAvailable):
        (WebCore::Storage::setSessionStorageAvailable):
        (WebCore::Storage::sessionStorageAvailable):
        * storage/Storage.h:

2009-10-20  John Gregg  <johnnyg@google.com>

        Reviewed by David Levin.

        Need to turn off notifications properly at runtime
        https://bugs.webkit.org/show_bug.cgi?id=30409

        This code only affects chromium, and is all behind a compile time
        flag current turned off, so no new tests.

        * bindings/v8/custom/V8CustomBinding.h:
        * bindings/v8/custom/V8DOMWindowCustom.cpp:
        (WebCore::ACCESSOR_RUNTIME_ENABLER):
        * bindings/v8/custom/V8WorkerContextCustom.cpp:
        (WebCore::ACCESSOR_RUNTIME_ENABLER):
        * notifications/NotificationCenter.cpp:
        (WebCore::NotificationCenter::setIsAvailable):
        (WebCore::NotificationCenter::isAvailable):
        * notifications/NotificationCenter.h:
        * page/DOMWindow.idl:
        * workers/WorkerContext.idl:

2009-10-20  James Robinson  <jamesr@chromium.org>

        Reviewed by Adam Barth.

        Fixes RefPtr initialization in the V8 implementation of WebCore::ScriptString to use the ::create() idiom and
        use adoptRef() properly.  I failed to read the RefPtr docs the first time through :(

        No new tests, error was caught by valgrind on the Chromium builders.

        * bindings/v8/ScriptString.h:
        (WebCore::ScriptString::ScriptString):
        (WebCore::ScriptString::operator=):
        * bindings/v8/ScriptStringImpl.h:
        (WebCore::ScriptStringImpl::create):

2009-10-20  Mikhail Naganov  <mnaganov@chromium.org>

        Reviewed by Pavel Feldman.

        Web Inspector: populate child nodes before sorting them.

        https://bugs.webkit.org/show_bug.cgi?id=29673

        * inspector/front-end/BottomUpProfileDataGridTree.js:
        (WebInspector.BottomUpProfileDataGridNode): Swapped with BottomUpProfileDataGridTree to be consistent with TopDownProfileDataGridNode.
        (WebInspector.BottomUpProfileDataGridNode.prototype._takePropertiesFromProfileDataGridNode):
        (WebInspector.BottomUpProfileDataGridNode.prototype._keepOnlyChild):
        (WebInspector.BottomUpProfileDataGridNode.prototype._exclude):
        (WebInspector.BottomUpProfileDataGridNode.prototype._merge):
        (WebInspector.BottomUpProfileDataGridNode.prototype._sharedPopulate):
        (WebInspector.BottomUpProfileDataGridTree.prototype.exclude):
        * inspector/front-end/ProfileDataGridTree.js:
        (WebInspector.ProfileDataGridNode.prototype.sort): Added missing parentheses.
        (WebInspector.ProfileDataGridNode.prototype.get _parent):
        (WebInspector.ProfileDataGridNode.prototype._populate):
        * inspector/front-end/TopDownProfileDataGridTree.js:
        (WebInspector.TopDownProfileDataGridNode.prototype._sharedPopulate):

2009-10-20  Jens Alfke  <snej@chromium.org>

        Reviewed by Eric Seidel.

        Remove redundant String ref/deref calls in generated V8 bindings.
        https://bugs.webkit.org/show_bug.cgi?id=30579

        * bindings/v8/V8Binding.h:
        (WebCore::toString): Fix return type of 'toString' to make it truly a no-op
            instead of constructing/destructing a String.

2009-10-20  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Xan Lopez.

        https://bugs.webkit.org/show_bug.cgi?id=25411
        [GTK] ATK accessible ancestry broken

        Work around for the problem of bogus additional objects in the ancestry.
        We now set the parent when we ref the child, then ask the Atk child if
        it knows its parent. This solves the bulk of the cases. For those it
        doesn't, fall back to the existing logic.

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (webkit_accessible_get_parent):
        (webkit_accessible_ref_child):

2009-10-20  Brian Weinstein  <bweinstein@apple.com>

        Reviewed by Alice Liu.

        Fixes <http://webkit.org/b/30421>.
        Web Inpsector: Local Files can show up on Cookies List with Cookies from other Domain.

        When a page like Google generates an about:blank, it shows up as a local file on
        the list of Cookie domains, but has all of the cookies of Google. When we are adding
        cookie domains to the inspector, we should only add the domain is the URL of the resource
        is in the HTTP protocol family or a file URL.

        * inspector/InspectorController.cpp:
        (WebCore::InspectorController::populateScriptObjects):
        (WebCore::InspectorController::didFinishLoading):

2009-10-20  Mark Mentovai  <mark@chromium.org>

        Reviewed by Darin Fisher.

        Use a version of libWebKitSystemInterface with global symbols marked
        private_extern for Chromium Mac.

        https://bugs.webkit.org/show_bug.cgi?id=30590

        * WebCore.gyp/WebCore.gyp:
        * WebCore.gyp/mac: Added.
        * WebCore.gyp/mac/Empty.cpp: Added.
        * WebCore.gyp/mac/adjust_visibility.sh: Added.

2009-10-20  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Eric Seidel.

        Allow custom memory allocation control for WebCore's CSSProperty
        https://bugs.webkit.org/show_bug.cgi?id=30564

        Inherits CSSProperty class from FastAllocBase because it has been
        instantiated by 'new' in WebCore/css/CSSParser.cpp:367.

        * css/CSSProperty.h:

2009-10-20  Andrew Scherkus  <scherkus@chromium.org>

        Reviewed by Eric Seidel.

        Hide Chromium's media slider thumb if no source has been loaded.

        https://bugs.webkit.org/show_bug.cgi?id=30529

        Covered by existing layout tests, notably:
            LayoutTests/media/controls-rendering.html
            LayoutTests/media/unsupported-tracks.html
            LayoutTests/media/video-src-none.html

        * rendering/RenderMediaControlsChromium.cpp:
        (WebCore::hasSource): Returns true if an HTMLMediaElement has a valid source set.
        (WebCore::paintMediaMuteButton): Refactored to use hasSource().
        (WebCore::paintMediaPlayButton): Ditto.
        (WebCore::paintMediaSliderThumb): Add call to hasSource() to determine if we should paint the thumb.

2009-10-20  Nate Chapin  <japhet@chromium.org>

        Reviewed by Adam Barth.

        Added getter for FrameLoader:m_suppressOpenerInNewFrame.
        This will allow Chromium to more intelligently detect
        noreferrer links and therefore open them in a new process.

        https://bugs.webkit.org/show_bug.cgi?id=30581

        * loader/FrameLoader.h:
        (WebCore::FrameLoader::suppressOpenerInNewFrame): Added.

2009-10-20  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Darin Adler.

        Allow custom memory allocation control for WebCore's CSSParserFunction
        https://bugs.webkit.org/show_bug.cgi?id=30563

        Inherits CSSParserFunction struct from FastAllocBase because it has been
        instantiated by 'new' in WebCore/css/CSSParser.cpp:4827.

        * css/CSSProperty.h:

2009-10-20  Joseph Pecoraro  <joepeck@webkit.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Watched Expressions Buttons Do Not Match Inspector Styles
        https://bugs.webkit.org/show_bug.cgi?id=30554

        * inspector/front-end/inspector.css: added style to pane buttons

2009-10-20  Yury Semikhatsky  <yurys@chromium.org>

        Reviewed by Pavel Feldman.

        Set debug id for contexts of isolated worlds to distinguish them in debugger.

        https://bugs.webkit.org/show_bug.cgi?id=30559

        * bindings/v8/V8Proxy.cpp:
        (WebCore::V8Proxy::evaluateInIsolatedWorld):
        (WebCore::V8Proxy::evaluateInNewContext):
        (WebCore::V8Proxy::setInjectedScriptContextDebugId):
        * bindings/v8/V8Proxy.h:

2009-10-20  Andras Becsi  <becsi.andras@stud.u-szeged.hu>

        Unreviewed buildfix.
        [Qt] Add FEGaussianBlur.h and FEGaussianBlur.cpp which were refactored in r49778 to WebCore.pro.

        * WebCore.pro:

2009-10-20  Fumitoshi Ukai  <ukai@chromium.org>

        Reviewed by David Levin.

        Set EnabledAtRuntime for WebSocket in DOMWindow
        https://bugs.webkit.org/show_bug.cgi?id=29896

        Supported by chromium/v8 only.
        Add WebSocket::isAvailable()/setIsAvailable(bool) to control v8
        bindings.
        Remove Settings::experimentalWebSocketsEnabled() and
        setExperimentalWebSocketsEnabled(bool).

        * WebCore.base.exp:
        * bindings/js/JSDOMWindowCustom.cpp:
        (WebCore::JSDOMWindow::webSocket):
        * bindings/v8/V8DOMWrapper.cpp:
        (WebCore::V8DOMWrapper::getConstructor):
        * bindings/v8/custom/V8CustomBinding.h:
        * bindings/v8/custom/V8DOMWindowCustom.cpp:
        (WebCore::ACCESSOR_RUNTIME_ENABLER):
        * page/DOMWindow.idl:
        * page/Settings.cpp:
        (WebCore::Settings::Settings):
        * page/Settings.h:
        * websockets/WebSocket.cpp:
        (WebCore::WebSocket::setIsAvailable):
        (WebCore::WebSocket::isAvailable):
        * websockets/WebSocket.h:

2009-10-19  Oliver Hunt  <oliver@apple.com>

        Reviewed by Sam Weinig.

        REGRESSION: Dromaeo DOM test is 14% slower
        https://bugs.webkit.org/show_bug.cgi?id=30273

        Whoops, make prototype bindings actually use the StructureFlags.

        * bindings/scripts/CodeGeneratorJS.pm:

2009-10-19  James Robinson  <jamesr@chromium.org>

        Reviewed by Adam Barth.

        Better implementation of WebCore::ScriptString for the V8 bindings.

        https://bugs.webkit.org/show_bug.cgi?id=29909

        WebCore::ScriptString is used for XMLHttpRequest's responseText attribute which is
        shared with JavaScript.  Thus, simply using a WebCore::String and copying the value
        is pretty inefficient, especially since responseText is built up with a sequence of
        operator+= calls.  JSC builds use a JSC::UString to share the buffer when possible,
        this patch adopts a similar approach for V8.

        No new tests, behavior is unchanged and covered by LayoutTests/http/tests/xmlhttprequest

        * WebCore.gypi:
        * bindings/v8/ScriptString.h:
        (WebCore::ScriptString::ScriptString):
        (WebCore::ScriptString::operator String):
        (WebCore::ScriptString::isNull):
        (WebCore::ScriptString::size):
        (WebCore::ScriptString::operator=):
        (WebCore::ScriptString::operator+=):
        (WebCore::ScriptString::v8StringOrNull):
        * bindings/v8/ScriptStringImpl.cpp: Added.
        (WebCore::ScriptStringImpl::ScriptStringImpl):
        (WebCore::ScriptStringImpl::~ScriptStringImpl):
        (WebCore::ScriptStringImpl::toString):
        (WebCore::ScriptStringImpl::isNull):
        (WebCore::ScriptStringImpl::size):
        (WebCore::ScriptStringImpl::append):
        * bindings/v8/ScriptStringImpl.h: Added.
        (WebCore::ScriptStringImpl::ScriptStringImpl):
        (WebCore::ScriptStringImpl::v8StringHandle):
        * bindings/v8/custom/V8XMLHttpRequestCustom.cpp:
        (WebCore::ACCESSOR_GETTER):

2009-10-19  Adam Barth  <abarth@webkit.org>

        No review, rolling out r49837.
        http://trac.webkit.org/changeset/49837

        * page/Settings.cpp:
        (WebCore::Settings::setStandardFontFamily):
        (WebCore::Settings::setFixedFontFamily):
        (WebCore::Settings::setSerifFontFamily):
        (WebCore::Settings::setSansSerifFontFamily):
        (WebCore::Settings::setCursiveFontFamily):
        (WebCore::Settings::setFantasyFontFamily):
        * page/Settings.h:
        (WebCore::Settings::standardFontFamily):
        (WebCore::Settings::fixedFontFamily):
        (WebCore::Settings::serifFontFamily):
        (WebCore::Settings::sansSerifFontFamily):
        (WebCore::Settings::cursiveFontFamily):
        (WebCore::Settings::fantasyFontFamily):
        * platform/text/UScriptCode.h: Removed.

2009-10-19  Kwang Yul Seo  <skyul@company100.net>

        Reviewed by Eric Seidel.

        Check COMPILER(MSVC) instead of PLATFORM(WIN_OS) to avoid the use of vasprintf.
        https://bugs.webkit.org/show_bug.cgi?id=30473

        vasprintf is missing in MSVC. Use COMPILER(MSVC) guards instead of
        PLALTFORM(WIN_OS) guards.

        * dom/XMLTokenizerLibxml2.cpp:
        (WebCore::XMLTokenizer::error):

2009-10-19  Jungshik Shin  <jshin@chromium.org>

        Reviewed by Eric Seidel.

        https://bugs.webkit.org/show_bug.cgi?id=20797

        Make generic font family getters/setters accept an additional
        argument (script code). It has a default value so that if an embedder
        does not have/want a per-script font family setting, call-sites
        don't have to be changed.
        This is to prepare for fixing bug 10874 (font selection is not
        language-dependent) and bug 18085.

        There should be no change in layout and no new layout test
        is added.

        * WebCore.base.exp:
        * page/Settings.cpp:
        * page/Settings.h:
        * platform/text/UScriptCode.h: Added. This is for ports that
          do not use ICU. the part of ICU's common/unicode/uscript.h
          that defines script code enum was copied. To keep enums compatible
          with those in ICU, we don't generate the list out of Scripts.txt
          of the Unicode Data base or CLDR's data.

2009-10-19  Evan Stade  <estade@chromium.org>

        Reviewed by Darin Adler.

        Clarify usage of SuddenTermination API. No code change.

        * platform/SuddenTermination.h:

2009-10-19  Oliver Hunt  <oliver@apple.com>

        Reviewed by Gavin Barraclough.

        REGRESSION: Dromaeo DOM test is 14% slower
        https://bugs.webkit.org/show_bug.cgi?id=30273

        Make DOM bindings automatically inherit correct structure
        flags rather than being needlessly conservative.  This is
        done by making the bindings generator use the same model
        for TypeInfo flags that we now use in JSC.

        This gains us about 1% of this regression back.

        * bindings/js/JSDOMBinding.h:
        (WebCore::DOMObjectWithGlobalPointer::createStructure):
        (WebCore::DOMConstructorObject::createStructure):
        * bindings/js/JSDOMWindowShell.h:
        (WebCore::JSDOMWindowShell::createStructure):
        * bindings/js/JSHTMLAllCollection.h:
        (WebCore::JSHTMLAllCollection::createStructure):
        * bindings/js/JSQuarantinedObjectWrapper.h:
        (WebCore::JSQuarantinedObjectWrapper::createStructure):
        * bindings/scripts/CodeGeneratorJS.pm:
        * bridge/objc/objc_runtime.h:
        (JSC::Bindings::ObjcFallbackObjectImp::createStructure):
        * bridge/runtime_array.h:
        (JSC::RuntimeArray::createStructure):
        * bridge/runtime_method.h:
        (JSC::RuntimeMethod::createStructure):
        * bridge/runtime_object.h:
        (JSC::RuntimeObjectImp::createStructure):

2009-10-19  Robin Qiu  <robin.qiu@torchmobile.com.cn>

        Reviewed by Nikolas Zimmermann.

        Fixed a bug on nested SVG <use> elements.
        https://bugs.webkit.org/show_bug.cgi?id=26117
        When a <use> element refer to another <use> element which has
        child/children, the instance tree built for this <use> element
        is incorrect (more nodes than expected).

        Test: svg/dom/use-on-use-with-child.svg

        * svg/SVGUseElement.cpp:
        (WebCore::SVGUseElement::buildInstanceTree):

2009-10-19  Oliver Hunt  <oliver@apple.com>

        Small changes to fully invalidate and update the JavaScriptCallFrame.

        <rdar://problem/7020755> JSDebugger crashes after reloading from a breakpoint
        https://bugs.webkit.org/show_bug.cgi?id=27146

        Reviewed by Timothy Hatcher.

        * inspector/JavaScriptCallFrame.h:
        (WebCore::JavaScriptCallFrame::invalidate):
        (WebCore::JavaScriptCallFrame::update):

2009-10-19  Jeremy Orlow  <jorlow@chromium.org>

        Reviewed by Dmitri Titov.

        Remove "source" from storage events
        https://bugs.webkit.org/show_bug.cgi?id=30536

        Remove "source" from storage events per
        http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2009-October/023703.html

        This was removed because it makes it introduces synchronous access that can
        cross the event loop boundry (since a storage event can fire from one process
        and be handled in another).

        * inspector/InspectorDOMStorageResource.cpp:
        (WebCore::InspectorDOMStorageResource::handleEvent):
        * storage/StorageEvent.cpp:
        (WebCore::StorageEvent::create):
        (WebCore::StorageEvent::StorageEvent):
        (WebCore::StorageEvent::initStorageEvent):
        * storage/StorageEvent.h:
        (WebCore::StorageEvent::uri):
        * storage/StorageEvent.idl:
        * storage/StorageEventDispatcher.cpp:
        (WebCore::StorageEventDispatcher::dispatch):

2009-10-19  Adam Barth  <abarth@webkit.org>

        Reviewed by Eric Seidel.

        Remove ResourceLoadNotifier::activeDocumentLoader
        https://bugs.webkit.org/show_bug.cgi?id=30533

        Removing this method from ResourceLoadNotifier better decouples the
        notifier from FrameLoader.

        * loader/FrameLoader.cpp:
        (WebCore::FrameLoader::continueLoadAfterWillSubmitForm):
        (WebCore::FrameLoader::requestFromDelegate):
        * loader/ResourceLoadNotifier.cpp:
        (WebCore::ResourceLoadNotifier::didReceiveResponse):
        * loader/ResourceLoadNotifier.h:
        * loader/ResourceLoader.cpp:
        (WebCore::ResourceLoader::willSendRequest):

2009-10-19  Adam Barth  <abarth@webkit.org>

        Reviewed by Eric Seidel.

        Move sendRemainingDelegateMessages to ResourceLoadNotifier
        https://bugs.webkit.org/show_bug.cgi?id=30531

        This method is about notifying folks and doesn't interact with the rest
        of FrameLoader.

        * loader/FrameLoader.cpp:
        (WebCore::FrameLoader::willLoadMediaElementURL):
        (WebCore::FrameLoader::commitProvisionalLoad):
        (WebCore::FrameLoader::loadResourceSynchronously):
        (WebCore::FrameLoader::loadedResourceFromMemoryCache):
        * loader/FrameLoader.h:
        * loader/ResourceLoadNotifier.cpp:
        (WebCore::ResourceLoadNotifier::sendRemainingDelegateMessages):
        * loader/ResourceLoadNotifier.h:

2009-10-19  Adam Barth  <abarth@webkit.org>

        Reviewed by Eric Seidel.

        Bypass popup blocker using click event
        https://bugs.webkit.org/show_bug.cgi?id=21501

        Keep track of which events were generated by JavaScript and use that
        inforation when figuring out if we're processing a user gesture.

        Test: http/tests/security/popup-blocked-from-fake-event.html

        * bindings/js/ScriptController.cpp:
        (WebCore::ScriptController::processingUserGestureEvent):
        * bindings/v8/ScriptController.cpp:
        (WebCore::ScriptController::processingUserGesture):
        * dom/Document.cpp:
        (WebCore::Document::createEvent):
        * dom/Event.cpp:
        (WebCore::Event::Event):
        * dom/Event.h:
        (WebCore::Event::createdByDOM):
        (WebCore::Event::setCreatedByDOM):

2009-10-19  Dumitru Daniliuc  <dumi@chromium.org>

        Reviewed by Darin Adler.

        Fixing a typo.

        https://bugs.webkit.org/show_bug.cgi?id=30543

        * platform/sql/SQLiteDatabase.h:

2009-10-19  Dmitry Titov  <dimich@chromium.org>

        Reviewed by Darin Adler.

        Manual Test for crash caused by JS accessing DOMWindow which is disconnected from the Frame.
        https://bugs.webkit.org/show_bug.cgi?id=30544

        * manual-tests/crash-on-accessing-domwindow-without-frame.html: Added.

2009-10-19  Simon Fraser  <simon.fraser@apple.com>

        Reviewed by Darin Adler.

        Flash at end of opacity/transform transition sometimes
        https://bugs.webkit.org/show_bug.cgi?id=30501
        
        When a transition finishes, there window of time between when the animation is
        removed, and the final style set on the GraphicsLayer. This caused the layer to revert
        to its old appearance for one or two frames. To avoid this, we set the final
        transform or opacity at the start of the transition; we know that the animation
        will override the final value for as long as its running.
        
        No test because this is a very transient effect that can't be captured
        in a test.

        * rendering/RenderLayerBacking.cpp:
        (WebCore::RenderLayerBacking::createGraphicsLayer):
        (WebCore::RenderLayerBacking::updateLayerOpacity):
        (WebCore::RenderLayerBacking::updateLayerTransform):
        (WebCore::RenderLayerBacking::updateGraphicsLayerGeometry):
        (WebCore::RenderLayerBacking::startTransition):
        * rendering/RenderLayerBacking.h:

2009-10-19  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Add more stop characters into console completions.

        https://bugs.webkit.org/show_bug.cgi?id=30477

        * inspector/front-end/ConsoleView.js:
        (WebInspector.ConsoleView.prototype.completions):
        (WebInspector.ConsoleView.prototype._reportCompletions):

2009-10-19  Marshall Culpepper  <mculpepper@appcelerator.com>

        Reviewed by Adam Roben.

        implemented ClipboardWin::files()
        https://bugs.webkit.org/show_bug.cgi?id=29666

        * platform/win/ClipboardWin.cpp:
        (WebCore::ClipboardWin::files):

2009-10-19  Nate Chapin  <japhet@chromium.org>

        Reviewed by Alexey Proskuryakov.

        Add support for link relations in HTMLAnchorElement and implement rel="noreferrer".

        https://bugs.webkit.org/show_bug.cgi?id=28986

        Tests: http/tests/navigation/no-referrer-reset.html
               http/tests/navigation/no-referrer-same-window.html
               http/tests/navigation/no-referrer-subframe.html
               http/tests/navigation/no-referrer-target-blank.html

        * WebCore.base.exp: Update FrameLoader::loadFrameRequest export symbol
        * html/HTMLAnchorElement.cpp: Add support for link relations and implement noreferrer
        (WebCore::HTMLAnchorElement::HTMLAnchorElement):
        (WebCore::HTMLAnchorElement::defaultEventHandler):
        (WebCore::HTMLAnchorElement::parseMappedAttribute):
        (WebCore::HTMLAnchorElement::hasRel):
        (WebCore::HTMLAnchorElement::setRel):
        * html/HTMLAnchorElement.h: Add support for link relations and implement noreferrer
        * loader/FrameLoader.cpp:
        (WebCore::FrameLoader::FrameLoader):
        (WebCore::FrameLoader::createWindow):
        (WebCore::FrameLoader::changeLocation):
        (WebCore::FrameLoader::urlSelected): Add parameter for referrer policy
        (WebCore::FrameLoader::loadFrameRequest): Add parameter for referrer policy
        (WebCore::FrameLoader::continueLoadAfterNewWindowPolicy): Suppress opener if requested by ReferrerPolicy
        * loader/FrameLoader.h: Update urlSelected and loadFrameRequest prototypes
        * loader/FrameLoaderTypes.h: Add enum for referrer policy
        * loader/RedirectScheduler.cpp:
        (WebCore::RedirectScheduler::timerFired):
        * page/ContextMenuController.cpp:
        (WebCore::ContextMenuController::contextMenuItemSelected): Update call to urlSelected()
        * svg/SVGAElement.cpp:
        (WebCore::SVGAElement::defaultEventHandler): Update call to urlSelected()


2009-10-19  Alpha Lam  <hclam@chromium.org>

        Reviewed by Dimitri Glazkov (dglazkov@chromium.org).

        [v8] typeof(HTMLMediaElement) should return undefined if media
        engine is not available
        https://bugs.webkit.org/show_bug.cgi?id=30343

        Check for availability of the media engine to disable
        HTMLMediaElement, HTMLAudioElement, HTMLVideoElement, MediaError
        in runtime.

        Try runs and review in Chromium:
        http://codereview.chromium.org/276011

        Test: manual-tests/chromium/media-player-not-available.html

        The above test can work work in Chromium. Testing procedures:
        1. Remove all media support libraries in Chromium (e.g. ffmpeg libraries)
        2. Open Chromium with above test page
        3. Verify the test results according to the test page

        * bindings/v8/custom/V8CustomBinding.h:
        Declare enabler methods.
        * bindings/v8/custom/V8DOMWindowCustom.cpp:
        Report enabled only if media player is available.
        * manual-tests/chromium/media-player-not-available.html: Added.
        Manual test, following instruction in this test for procedures.
        * page/DOMWindow.idl:
        Mark HTMLMediaElement, HTMLAudioElement, HTMLVideElement, MediaError
        as enabled at runtime.

2009-10-19  Kenneth Rohde Christiansen  <kenneth@webkit.org>

        Reviewed by David Hyatt.

        Refactor out some of the code in paint() into paintPanScrollIcon()
        and paintScrollbars() in preparation of some Qt API changes.

        * platform/ScrollView.cpp:
        (WebCore::ScrollView::paint):
        * platform/ScrollView.h:

2009-10-19  Kenneth Rohde Christiansen  <kenneth@webkit.org>

        Reviewed by Adam Roben.

        Make the local static panScrollIcon into a Image* instead
        of a RefPtr<Image>.

        * platform/ScrollView.cpp:
        (WebCore::ScrollView::wheelEvent):

2009-10-19  Andrew Scherkus  <scherkus@chromium.org>

        Reviewed by David Levin.

        Forcefully set antialiasing for Chromium media controls.

        https://bugs.webkit.org/show_bug.cgi?id=30521

        Before it was nondeterministiacally being enabled based on the previous state of GraphicsContext.

        Covered by existing layout tests.

        * rendering/RenderMediaControlsChromium.cpp:
        (WebCore::paintMediaSlider): Added setShouldAntialias(true).

2009-10-19  Jens Alfke  <jens@mooseyard.com>

        Reviewed by Darin Adler.

        Optimize string upper/lowercasing
        https://bugs.webkit.org/show_bug.cgi?id=30261
        
        - Added AtomicString::upper() and lower()
        - Further optimized StringImpl::lower()
        - Removed StringImpl::isLower()
        - Added QualifiedName::localNameUpper(), which is cached, thereby saving
          thousands of upper() calls and string allocations.
 
         * dom/Element.cpp:
         (WebCore::Element::setAttribute): Call AtomicString::lower()
         * dom/QualifiedName.cpp:
         (WebCore::QualifiedName::localNameUpper): New method
         * dom/QualifiedName.h: Added localNameUpper() method
         * dom/StyledElement.cpp:
         (WebCore::StyledElement::parseMappedAttribute):  Call AtomicString::lower()
         * html/HTMLDocument.cpp:
         (WebCore::HTMLDocument::createElement): Call AtomicString::lower()
         * html/HTMLElement.cpp:
         (WebCore::HTMLElement::nodeName): Call localNameUpper()
         * platform/text/AtomicString.cpp:
         (WebCore::AtomicString::lower): New method
         (WebCore::AtomicString::upper): New method
         * platform/text/AtomicString.h: Added lower() and upper()
         * platform/text/StringImpl.cpp: Removed isLower()
         (WebCore::StringImpl::lower): Further optimization of initial loop
         * platform/text/StringImpl.h: Removed isLower()
 
2009-10-19  Nate Chapin  <japhet@chromium.org>

        Reviewed by Adam Barth.

        If a call to a plugin's invokeMethod, invokeDefault or construct
        returns false, throw an exception into JS.        

        https://bugs.webkit.org/show_bug.cgi?id=30239

        Test: plugins/netscape-invoke-failure.html

        * bindings/v8/V8NPObject.cpp: Check return values of invokeMethod, invokeDefault and construct.
        (npObjectInvokeImpl):
        * bridge/c/c_instance.cpp:
        (JSC::Bindings::CInstance::invokeMethod): Check return value
        (JSC::Bindings::CInstance::invokeDefaultMethod): Check return value
        (JSC::Bindings::CInstance::invokeConstruct): Check return value

2009-10-16  Stephen White  <senorblanco@chromium.org>

        Reviewed by Adam Barth.

        Fix for chromium/skia canvas arc start/end positions, when the arc is
        >= 360 degrees.
        https://bugs.webkit.org/show_bug.cgi?id=30449

        Covered by new test:
        LayoutTests/fast/canvas/arc360.html

        * platform/graphics/skia/PathSkia.cpp:
        (WebCore::Path::addArc):

2009-10-19  Kent Tamura  <tkent@chromium.org>

        Reviewed by Alexey Proskuryakov.

        Fix uninitialized variable reference in Element::removeAttribute().
        https://bugs.webkit.org/show_bug.cgi?id=30502

        * dom/Element.cpp:
        (WebCore::Element::removeAttribute):

2009-10-19  Eric Carlson  <eric.carlson@apple.com>

        Reviewed by Simon Fraser.

        https://bugs.webkit.org/show_bug.cgi?id=30463
        Remove HTML5 media element 'loadend' event

        * dom/EventNames.h:
        * html/HTMLMediaElement.cpp:
        (WebCore::HTMLMediaElement::parseMappedAttribute): Remove 'loadend'.
        (WebCore::HTMLMediaElement::loadInternal): Ditto.
        (WebCore::HTMLMediaElement::noneSupported): Ditto.
        (WebCore::HTMLMediaElement::mediaEngineError): Ditto.
        (WebCore::HTMLMediaElement::setNetworkState): Ditto.
        (WebCore::HTMLMediaElement::userCancelledLoad): Ditto.

2009-10-19  Jocelyn Turcotte  <jocelyn.turcotte@nokia.com>

        Reviewed by Adam Barth.

        [Qt] Remove deletion of outgoing FormData object when reply is finished.
        The buffers will be destroyed a bit later, when the QNetworkReply is deleted.
        Bug: https://bugs.webkit.org/show_bug.cgi?id=29551

        * platform/network/qt/QNetworkReplyHandler.cpp:
        * platform/network/qt/QNetworkReplyHandler.h:

2009-10-19  Dimitri Glazkov  <dglazkov@chromium.org>

        Reviewed by Darin Adler.

        Fix hard-to-reproduce crash in HTMLTokenizer by avoiding a rare
        fastRealloc edge case.
        https://bugs.webkit.org/show_bug.cgi?id=29313

        No test, the crash shows up occasionally in crash dumps, we weren't able
        to reproduce it locally.

        * html/HTMLTokenizer.cpp:
        (WebCore::HTMLTokenizer::enlargeScriptBuffer): Added an early exit to
            avoid calling fastRealloc with the size of 0.

2009-10-19  Andrew Scherkus  <scherkus@chromium.org>

        Reviewed by Eric Seidel.

        Use fillRect() instead of drawRect() to fix Chromium media controls rendering.

        https://bugs.webkit.org/show_bug.cgi?id=30371

        Chromium Mac layout tests will need to be rebaselined.  Existing layout tests for Linux/Win still pass.

        * rendering/RenderMediaControlsChromium.cpp:
        (WebCore::paintMediaSlider): Use fillRect() instead of drawRect().

2009-10-19  Dmitry Titov  <dimich@chromium.org>

        Reviewed by Adam Barth.

        Crash in DOMWindow::clearTimeout etc when DOMWindow is not connected to a frame.
        https://bugs.webkit.org/show_bug.cgi?id=29832

        Need to make sure the script caches are reset when frame gets disconnected from still-alive DOMWindow.
        This will prevent JS from calling DOMWindow methods that can not be completed w/o the frame.

        I am not sure it's possible to test this since the only file that repros the problem need ~10 seconds to cause crash.

        * page/Frame.cpp:
        (WebCore::Frame::~Frame): Right after frame disconnects from DOMWindow, clear WindowShell.

2009-10-19  Csaba Osztrogonác  <ossy@webkit.org>

        Unreviewed build warning fix.
        [Qt] Apply changes to WebCore.pro introduced in r49778

        * WebCore.pro: Removed svg/graphics/filters/SVGFEGaussianBlur.h from HEADERS

2009-10-19  Dirk Schulze  <krit@webkit.org>

        Reviewed by Darin Adler.

        Move feGaussianBlur from WebCore/svg to WebCore/platform
        [https://bugs.webkit.org/show_bug.cgi?id=30495]

        This patch moves SVGFRGaussianBlur from svg/graphics/filters
        to platform/graphics/filters/FEGaussianBlur. This is needed
        for shadow support on Qt and Cairo.
        No change in functionality, therfore no new test case needed.

        * GNUmakefile.am:
        * WebCore.gypi:
        * WebCore.pro:
        * WebCore.vcproj/WebCore.vcproj:
        * WebCore.xcodeproj/project.pbxproj:
        * platform/graphics/filters/FEGaussianBlur.cpp: Added.
        * platform/graphics/filters/FEGaussianBlur.h: Added.
        * svg/SVGFEGaussianBlurElement.h:
        * svg/graphics/filters/SVGFEGaussianBlur.cpp: Removed.
        * svg/graphics/filters/SVGFEGaussianBlur.h: Removed.

2009-10-19  Yael Aharon  <yael.aharon@nokia.com>

        Unreviewed.

        Added reviewer name to r49574.

2009-10-19  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Xan Lopez.

        https://bugs.webkit.org/show_bug.cgi?id=30489
        [Gtk] The document frame/html container claims to be parentless

        Work around for the parentless claim made by the accessible associated
        with the embedded WebView. When we identify this condition, get the
        widget's parent, and then get the AtkObject from that. Admittedly an ugly
        hack, but we'll need it for Yelp and other Gtk+/GNOME applications which
        plan to switch over to WebKit.

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (webkit_accessible_get_parent):

2009-10-19  Benjamin Otte  <otte@gnome.org>

        Reviewed by Jan Alonzo.

        Handle duration queries properly
        https://bugs.webkit.org/show_bug.cgi?id=29999

        Previously duration queries failed to handle unknown duration
        and didn't treat the returned duration as an unsigned.

        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.cpp:
        (WebCore::MediaPlayerPrivate::duration):

2009-10-19  Jocelyn Turcotte  <jocelyn.turcotte@nokia.com>

        Reviewed by Tor Arne Vestbø.

        [Qt] Fix build on Windows.

        * plugins/win/PluginViewWin.cpp:
        (windowHandleForPageClient):

2009-10-19  Girish Ramakrishnan  <girish@forwardbias.in>

        Reviewed by Holger Freyther.

        [Qt] Windowed Plugins: Don't crash when client is 0.
        
        Client is 0 when we use QWebPage without a QWebView or QGraphicsWebView.
        In addition, setFrameRect()/updatePluginWidget() is called even if the
        plugin was not succesfully loaded. updatePluginWidget() updates the
        window rect which is, in theory, useful to draw something that indicates
        that we didn't load successfully.
        
        So, a status check is added to setNPWindowIfNeeded.

        https://bugs.webkit.org/show_bug.cgi?id=30380

        * plugins/qt/PluginViewQt.cpp:
        (WebCore::PluginView::setNPWindowIfNeeded):
        (WebCore::PluginView::platformStart):

2009-10-19  Girish Ramakrishnan  <girish@forwardbias.in>

        Reviewed by Holger Freyther.

        [Qt] Windowed Plugins: Fix crash when QWebPage is deleted after QWebView.
        
        Fixes various sources of crashes:
        1. The PluginContainer is a child of QWebView. When the view gets deleted,
        the PluginView is not notified about the deletion of PluginContainer.
        2. QWebView destructor does not set client to 0.
        3. Sometimes pending paint events are sent after the plugin has died, so add
        a check in PluginView::setNPWindowIfNeeded.

        https://bugs.webkit.org/show_bug.cgi?id=30354

        * plugins/qt/PluginContainerQt.cpp:
        (PluginContainerQt::~PluginContainerQt):
        * plugins/qt/PluginViewQt.cpp:
        (WebCore::PluginView::setNPWindowIfNeeded):

2009-10-19  Jakob Truelsen  <antialize@gmail.com>

        Reviewed by Adam Barth.

        https://bugs.webkit.org/show_bug.cgi?id=29042
        Allow one to customize the minimal and maximal shrink factors used when printing.

        * page/PrintContext.cpp:
        (WebCore::PrintContext::begin):
        * page/Settings.cpp:
        (WebCore::Settings::Settings):
        (WebCore::Settings::setPrintingMinimumShrinkFactor):
        (WebCore::Settings::setPrintingMaximumShrinkFactor):
        * page/Settings.h:
        (WebCore::Settings::printingMinimumShrinkFactor):
        (WebCore::Settings::printingMaximumShrinkFactor):

2009-10-18  Erik Arvidsson  <arv@chromium.org>

        Reviewed by Adam Barth.

        Fixes issue where doubleclicking a word could select following adjacent newlines.
        https://bugs.webkit.org/show_bug.cgi?id=30234

        Tests: platform/mac/editing/selection/doubleclick-should-not-expand-across-lines.html
               platform/mac/editing/selection/script-tests/TEMPLATE.html
               platform/win/editing/selection/doubleclick-should-not-expand-across-lines.html
               platform/win/editing/selection/script-tests/TEMPLATE.html

        * editing/VisibleSelection.cpp:
        (WebCore::VisibleSelection::appendTrailingWhitespace):

2009-10-18  Kevin Ollivier  <kevino@theolliviers.com>

        CURL build fix, use proper header name.

        * platform/network/curl/ResourceHandleManager.h:

2009-10-18  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Properties on Arrays and NodeLists are not logged correctly.

        https://bugs.webkit.org/show_bug.cgi?id=30485

        * inspector/front-end/ConsoleView.js:
        (WebInspector.ConsoleView.prototype._formatarray):
        (WebInspector.ConsoleView.prototype._printArray):

2009-10-18  Pavel Feldman  <pfeldman@chromium.org>

        Not reviewed: touching WebCore so that it
        initiated inspector frontend deployment on Windows.

        Web Inspector: frontend files are not deployed in Windows
        incremental build.

        * inspector/InspectorDOMAgent.cpp:
        (WebCore::InspectorDOMAgent::unbind):

2009-10-18  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Title of dir(["test", "test2"]) should be Array

        https://bugs.webkit.org/show_bug.cgi?id=30486

        Test: inspector/console-tests.html

        * inspector/front-end/InjectedScript.js:

2009-10-18  Dirk Schulze  <krit@webkit.org>

        Reviewed by Nikolas Zimmermann.

        REGRESSION: SVG Mask doesn't work for maskContentUnits="objectBoundingBox"
        [https://bugs.webkit.org/show_bug.cgi?id=30480]

        Patch for SVGMaskElement landed in r49598 should correct the location of
        the mask image graphics context. It only corrects the location for userSpaceOnUse
        mode in maskContentUnits but breaks objectBoundingBoxMode.
        The maskDestRect shouldn't be moved. It is not responsible for the correct context
        postioin but for the correct position of the mask image.
        This patch calculates the context postion independently from the maskDestRect.
        It also uses lineareRGB color space for masking on CG now. This is the default
        color space for masking operations.
        We already have tests for both maskContentUnits modes.

            *svg/W3C-SVG-1.1/masking-intro-01-f.svg
            *svg/custom/mask-with-default-value.svg

        Some tests needed new pixel tests because of the new color space.

        * svg/SVGMaskElement.cpp:
        (WebCore::SVGMaskElement::drawMaskerContent):

2009-10-18  Anton Muhin  <antonm@chromium.org>

        Reviewed by Adam Barth.

        Use v8::Integer::NewFromUnsigned when converting unsigneds into V8's numbers.
        That is notably faster for small numbers (most common case).
        https://bugs.webkit.org/show_bug.cgi?id=30493

        * bindings/scripts/CodeGeneratorV8.pm:

2009-10-18  Jan Michael Alonzo  <jmalonzo@webkit.org>

        Reviewed by Holger Freyther.

        [GTK] Add MathML to the build system
        https://bugs.webkit.org/show_bug.cgi?id=30487

        Add MathML sources if MathML support is enabled.

        * GNUmakefile.am:

2009-10-18  Kevin Ollivier  <kevino@theolliviers.com>

        Non-PCH build fix. Added missing header.

        * bridge/runtime_root.h:

2009-10-18  Simon Fraser  <simon.fraser@apple.com>

        Reviewed by Dan Bernstein.

        Compositing layers not correctly updated after partial layout
        https://bugs.webkit.org/show_bug.cgi?id=30425
        
        When a partial layout happened, for example as the result of a postion-change-only
        layout, then some compositing layer positions were not correctly updated. To fix
        this, updateLayerPositions() now carries along a flag that is set at the rootmost
        layer being updated, and used to determine when we hit the first compositing layer
        in this update. RenderLayerBacking::updateAfterLayout() makes use of this information
        to do a full geometry update on that layer, which is thus the rootmost compositing
        layer that is being updated.

        Test: compositing/geometry/partial-layout-update.html

        * page/FrameView.cpp:
        (WebCore::FrameView::layout):
        * rendering/RenderLayer.cpp:
        (WebCore::RenderLayer::updateLayerPositions):
        (WebCore::RenderLayer::scrollToOffset):
        * rendering/RenderLayer.h:
        (WebCore::RenderLayer::):
        * rendering/RenderLayerBacking.cpp:
        (WebCore::RenderLayerBacking::updateAfterLayout):
        * rendering/RenderLayerBacking.h:

2009-09-13  Kevin Watters  <kevinwatters@gmail.com>

        Reviewed by Kevin Ollivier.

        Add support for proxies in CURL.
 
        https://bugs.webkit.org/show_bug.cgi?id=30446

        * platform/network/curl/ResourceHandleManager.cpp:
        (WebCore::ResourceHandleManager::setProxyInfo):
        (WebCore::ResourceHandleManager::initializeHandle):
        * platform/network/curl/ResourceHandleManager.h:
        (WebCore::ResourceHandleManager::):

2009-10-18  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Xan Lopez

        https://bugs.webkit.org/show_bug.cgi?id=25901
        Use ATK_ROLE_SECTION for divTag and ATK_ROLE_LABEL for labelTag

        Replaces the use of ATK_ROLE_PANEL with the expected accessible roles.

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (webkit_accessible_get_role):

2009-10-17  Nikolas Zimmermann  <nzimmermann@rim.com>

        Reviewed by George Staikos.

        Cleanup SVGElement code, preparing for animVal support
        https://bugs.webkit.org/show_bug.cgi?id=30466

        Add new SynchronizablePropertyController and move the code for SVG property <-> XML attribute synchronization
        from SVGElement. This is a further preparation for animVal support, where SynchronizablePropertyController will
        be used to control the start/end state of an animated property.

        We're currently tracking animated properties that need synchronization, generalize this concept and use
        it to track their creation (bound to certain SVG*Element classes) as well as a flag determing the need
        of synchronization (no SVG DOM object wrappers, no synchronization needed).

        No change in functionality, thus no tests.

        * GNUmakefile.am: Add 'SynchronizablePropertyController.cpp/h' to build
        * WebCore.gypi: Ditto.
        * WebCore.pro: Ditto.
        * WebCore.vcproj/WebCore.vcproj: Ditto.
        * WebCore.xcodeproj/project.pbxproj: Ditto.
        * svg/SVGAllInOne.cpp: Ditto.
        * svg/SVGAnimatedProperty.h: Add registerProperty() function 
        (WebCore::::SVGAnimatedProperty): Call registerProperty() function  
        (WebCore::::registerProperty): Add new registerProperty() function, announcing new properties to SynchronizablePropertyController.
        * svg/SVGAnimatedTemplate.h: Use propertyController() method, to access the new functions moved from SVGElement.
        (WebCore::lookupOrCreateWrapper):
        * svg/SVGElement.cpp: Adapt to code moving to SynchronizablePropertyController.
        (WebCore::SVGElement::updateAnimatedSVGAttribute):
        * svg/SVGElement.h: Move handling SVG property synchronization to SynchronizablePropertyController.
        (WebCore::SVGElement::propertyController): Expose reference to SynchronizablePropertyController object.
        * svg/SVGViewSpec.cpp: Reorder initialization order of contextElement, leading to possible crashes.
        (WebCore::SVGViewSpec::SVGViewSpec):
        (WebCore::SVGViewSpec::viewTarget):
        * svg/SVGViewSpec.h: Ditto.
        (WebCore::SVGViewSpec::contextElement):
        * svg/SynchronizablePropertyController.cpp: Added.
        (WebCore::SynchronizablePropertyController::SynchronizablePropertyController):
        (WebCore::SynchronizablePropertyController::registerProperty):
        (WebCore::SynchronizablePropertyController::setPropertyNeedsSynchronization):
        (WebCore::SynchronizablePropertyController::synchronizeProperty):
        (WebCore::SynchronizablePropertyController::synchronizeAllProperties):
        (WebCore::SynchronizablePropertyController::startAnimation):
        (WebCore::SynchronizablePropertyController::stopAnimation):
        * svg/SynchronizablePropertyController.h: Added.
        (WebCore::SynchronizableProperty::SynchronizableProperty):
        (WebCore::SynchronizableProperty::isHashTableDeletedValue):
        (WebCore::SynchronizableProperty::operator==):
        (WebCore::SynchronizablePropertyHash::hash):
        (WebCore::SynchronizablePropertyHash::equal):
        (WebCore::SynchronizablePropertyHashTraits::constructDeletedValue):
        (WebCore::SynchronizablePropertyHashTraits::isDeletedValue):

2009-10-17  Joanmarie Diggs  <joanmarie.diggs@gmail.com>

        Reviewed by Xan Lopez.

        https://bugs.webkit.org/show_bug.cgi?id=25413
        [GTK] Please expose the level of headings

        Exposes the heading level as an attribute of the AtkObject.

        * accessibility/gtk/AccessibilityObjectWrapperAtk.cpp:
        (addAttributeToSet):
        (webkit_accessible_get_attributes):
        (webkit_accessible_class_init):

2009-10-17  Kwang Yul Seo  <skyul@company100.net>

        Reviewed by Eric Seidel.

        EventHandler::eventLoopHandleMouseDragged needs ENABLE(DRAG_SUPPORT) guards
        https://bugs.webkit.org/show_bug.cgi?id=30472

        Put ENABLE(DRAG_SUPPORT) guards around EventHandler::eventLoopHandleMouseDragged
        in EventHandler.cpp. MSVC fails to compile when DRAG_SUPPORT not enabled.

        * page/EventHandler.cpp:

2009-10-17  Alpha Lam  <hclam@chromium.org>

        Reviewed by Eric Seidel.

        [chromium] Video controls not zoomed / transformed correctly
        https://bugs.webkit.org/show_bug.cgi?id=30461

        Draw the images in the controls scaled.

        No new tests. With this change Chromium will pass the following tests:
        LayoutTests/media/video-controls-zoomed.html
        LayoutTests/media/video-controls-transformed.html

        * rendering/RenderMediaControlsChromium.cpp:
        (WebCore::paintMediaButton):
        Pass along the target rect directly.
        (WebCore::RenderMediaControlsChromium::adjustMediaSliderThumbSize):
        Adjust the thumb slide applied with the scale factor.

2009-10-17  Laszlo Gombos  <laszlo.1.gombos@nokia.com>

        Unreviewed.

        [Gtk] Build fix for WebKitGtk after r49723.

        Add bindings/js/JSExceptionBase.* to the build.

        * GNUmakefile.am:

2009-10-17  Laszlo Gombos  <laszlo.1.gombos@nokia.com>

        Unreviewed.

        [Qt] Build fix for QtWebKit after r49723.

        Add bindings/js/JSExceptionBase.cpp to the build.

        * WebCore.pro:

2009-10-16  Steve Falkenburg  <sfalken@apple.com>

        Reviewed by Dan Bernstein.

        https://bugs.webkit.org/show_bug.cgi?id=30456
        Fixes for new Debug_All Windows build configuration.

        * platform/network/cf/ResourceRequestCFNet.cpp:
        (WebCore::findCFNetworkModule): Ask for the correct library instead of guessing.
        * platform/win/ScrollbarThemeSafari.cpp: Use new DEBUG_ALL preprocessor define for library naming.
        * rendering/RenderMediaControls.cpp: Use new DEBUG_ALL preprocessor define for library naming.
        * rendering/RenderThemeSafari.cpp: Use new DEBUG_ALL preprocessor define for library naming.

2009-10-16  Jon Honeycutt  <jhoneycutt@apple.com>

        Add SPI to determine whether a plug-in has ever been halted.

        Part of <rdar://problem/7312158>.

        Reviewed by Dan Bernstein.

        * plugins/PluginView.cpp:
        (WebCore::PluginView::PluginView):
        Initialize m_hasBeenHalted.

        * plugins/PluginView.h:
        (WebCore::PluginView::hasBeenHalted):
        Return m_hasBeenHalted.

        * plugins/win/PluginViewWin.cpp:
        (WebCore::PluginView::halt):
        Set m_hasBeenHalted.

2009-10-16  Adam Barth  <abarth@webkit.org>

        Reviewed by Alexey Proskuryakov.

        @charset rule after the first byte causes the rest of css to be ignored
        https://bugs.webkit.org/show_bug.cgi?id=18265

        Apparently we're supposed to tolerate whitespace before the charset
        rule so folks can write code like this:

        <style>
        @charset "utf-8"
        ...
        </style>

        I'm told this is one of the top compatability problems in China.
        Tests: fast/css/comment-before-charset-external.html
               fast/css/comment-before-charset.html
               fast/css/many-spaces-before-charset.html
               fast/css/space-before-charset-external.html
               fast/css/space-before-charset.html

        * css/CSSGrammar.y:

2009-10-16  Brian Weinstein  <bweinstein@apple.com>

        Reviewed by Darin Adler.

        Fixes part of <http://webkit.org/b/30412>.
        Web Inspector should get human readable DOM Exceptions.

        Add a description field to ExceptionBase, and call it through 
        reportException which allows the user/developer to get a more detailed
        and coherent error explanation through the Web Inspector.

        This only applies to exceptions that come from a script on the page when
        it is run. DOM Exceptions that come from the code run in the console, or DOM
        exceptions that are caught and logged will come in a future patch.

        Tests: inspector/uncaught-dom1-exception.html
               inspector/uncaught-dom3-exception.html
               inspector/uncaught-dom8-exception.html

        * WebCore.gypi:
        * WebCore.vcproj/WebCore.vcproj:
        * WebCore.xcodeproj/project.pbxproj:
        * bindings/js/JSDOMBinding.cpp:
        (WebCore::reportException):
        * bindings/js/JSExceptionBase.cpp: Added.
        (WebCore::toExceptionBase):
        * bindings/js/JSExceptionBase.h: Added.
        * dom/ExceptionBase.cpp:
        (WebCore::ExceptionBase::ExceptionBase):
        * dom/ExceptionBase.h:
        (WebCore::ExceptionBase::description):
        * dom/ExceptionCode.cpp:
        (WebCore::):
        (WebCore::getExceptionCodeDescription):
        * dom/ExceptionCode.h:

2009-10-16  Geoffrey Garen  <ggaren@apple.com>

        Build fix: forgot to check in this #include.

        * bridge/runtime_root.h:

2009-10-16  Simon Fraser  <simon.fraser@apple.com>

        Reviewed by Dan Bernstein.

        Transform layer gets stuck with the wrong transform after an animation ends
        <rdar://problem/7311662>

        Work around a CoreAnimation bug which causes an animated transform layer to
        end up with a stale transform.
        
        Test: compositing/animation/state-at-end-event-transform-layer.html

        * platform/graphics/mac/GraphicsLayerCA.mm:
        (WebCore::bug7311367Workaround):
        (WebCore::GraphicsLayerCA::removeAnimationFromLayer):

2009-10-16  Simon Fraser  <simon.fraser@apple.com>

        Reviewed by Dan Bernstein.

        After running a transition with an end event listener, can't change the transform
        https://bugs.webkit.org/show_bug.cgi?id=30454
        
        Fix an issue where, if a document had any listener for webkitTransitionEnd or webkitAnimationEnd,
        the animations would not get cleaned up correctly, which broke subsequent changes of transform.
        
        Now, we always clean up the animations right after queuing up the end events.

        Tests: animations/state-at-end-event.html
               transitions/move-after-transition.html

        * page/animation/ImplicitAnimation.cpp:
        (WebCore::ImplicitAnimation::onAnimationEnd):
        * page/animation/KeyframeAnimation.cpp:
        (WebCore::KeyframeAnimation::onAnimationEnd):

2009-10-15  Joseph Pecoraro  <joepeck@webkit.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Handle the Enter Key in the Elements Tree Hierarchy
        https://bugs.webkit.org/show_bug.cgi?id=30428

        TextNode => Edit Text Node
        Has Attributes => Edit First Attribute
        No Attributes => Start Editing New Attribute

        * inspector/front-end/ElementsTreeOutline.js:
        (WebInspector.ElementsTreeOutline.prototype.handleKeyEvent): handle the "Enter" key
        (WebInspector.ElementsTreeElement.prototype.set hovered): only add new attribute button on nodes with attributes
        (WebInspector.ElementsTreeElement.prototype._addNewAttribute): prevent moving backwards where there are no attributes
        (WebInspector.ElementsTreeElement.prototype._startEditingFromEvent): renamed to be clearer
        (WebInspector.ElementsTreeElement.prototype._startEditing): transition to the appropriate edit state for a tree element

2009-10-16  Adam Barth  <abarth@webkit.org>

        Reviewed by Eric Seidel.

        Fix header indent style for FrameLoader and friends
        https://bugs.webkit.org/show_bug.cgi?id=30430

        * loader/FrameLoader.h:
        (WebCore::FrameLoader::frame):
        (WebCore::FrameLoader::policyChecker):
        (WebCore::FrameLoader::history):
        (WebCore::FrameLoader::notifier):
        (WebCore::FrameLoader::isLoadingMainResource):
        (WebCore::FrameLoader::documentLoader):
        (WebCore::FrameLoader::policyDocumentLoader):
        (WebCore::FrameLoader::provisionalDocumentLoader):
        (WebCore::FrameLoader::state):
        (WebCore::FrameLoader::client):
        (WebCore::FrameLoader::url):
        (WebCore::FrameLoader::isLoadingFromCachedPage):
        (WebCore::FrameLoader::committingFirstRealLoad):
        (WebCore::FrameLoader::committedFirstRealDocumentLoad):
        (WebCore::FrameLoader::creatingInitialEmptyDocument):
        * loader/HistoryController.h:
        (WebCore::HistoryController::currentItem):
        (WebCore::HistoryController::provisionalItem):
        * loader/PolicyCallback.h:
        (WebCore::PolicyCallback::request):
        * loader/PolicyChecker.h:
        (WebCore::PolicyChecker::loadType):
        (WebCore::PolicyChecker::setLoadType):
        (WebCore::PolicyChecker::delegateIsDecidingNavigationPolicy):
        (WebCore::PolicyChecker::delegateIsHandlingUnimplementablePolicy):
        * loader/RedirectScheduler.h:
        * loader/ResourceLoadNotifier.h:

2009-10-16  Steve Falkenburg  <sfalken@apple.com>

        Reviewed by Adam Roben.

        Add a Debug_All configuration to build entire stack as debug.
        Change Debug_Internal to:
        - stop using _debug suffix for all WebKit/Safari binaries
        - not use _debug as a DLL naming suffix
        - use non-debug C runtime lib.

        * WebCore.vcproj/QTMovieWin.vcproj: Add Debug_All configuration.
        * WebCore.vcproj/WebCore.make: Debug build in makefile should build Debug_All.
        * WebCore.vcproj/WebCore.sln: Add Debug_All configuration.
        * WebCore.vcproj/WebCore.submit.sln: Add Debug_All configuration.
        * WebCore.vcproj/WebCore.vcproj: Add Debug_All configuration.
        * WebCore.vcproj/WebCoreGenerated.vcproj: Renamed single configuration from "Release" to "all".

2009-10-16  Dimitri Glazkov  <dglazkov@chromium.org>

        No review, rolling out r49693, because it broke Chromium build.
        http://trac.webkit.org/changeset/49693

        * WebCore.gyp/WebCore.gyp:
        * WebCore.gypi:

2009-10-16  Andrew Scherkus  <scherkus@chromium.org>

        Reviewed by Eric Carlson.

        Updated media resource selection algorithm to reflect latest HTML 5 specification.

        Noticable changes:
            -  Elements with no source should have their network state set to NETWORK_EMPTY as opposed to NETWORK_NO_SOURCE
            -  Empty string ("") is now considered a valid URL resolving to the current page and will be loaded

        Tests: media/video-src-empty.html
               media/video-src-none.html

        https://bugs.webkit.org/show_bug.cgi?id=30407

        * html/HTMLMediaElement.cpp:
        (WebCore::HTMLMediaElement::selectMediaResource): Updated code and comments to match spec.

2009-10-16  Adam Barth  <abarth@webkit.org>

        Reviewed by Eric Seidel.

        Insecure plug-ins don't trigger mixed content
        https://bugs.webkit.org/show_bug.cgi?id=30431

        Added the missing check.

        Test: http/tests/security/mixedContent/insecure-plugin-in-iframe.html

        * loader/FrameLoader.cpp:
        (WebCore::FrameLoader::loadPlugin):

2009-10-16  Andrew Scherkus  <scherkus@chromium.org>

        Reviewed by Eric Carlson.

        Set autobuffer to true and schedule load in V8 audio element constructor.

        https://bugs.webkit.org/show_bug.cgi?id=30448

        Covered by existing tests.

        * bindings/v8/custom/V8HTMLAudioElementConstructor.cpp:
        (WebCore::CALLBACK_FUNC_DECL): Set autobuffer to true and schedule load.

2009-10-16  Andrew Scherkus  <scherkus@chromium.org>

        Reviewed by Eric Seidel.

        Remove FIXME in RenderMediaControlsChromium as bug was fixed upstream.

        https://bugs.webkit.org/show_bug.cgi?id=30422

        Covered by existing media layout tests.

        * rendering/RenderMediaControlsChromium.cpp:
        (WebCore::paintMediaSlider): Removed round() and FIXME.

2009-10-16  Andrew Scherkus  <scherkus@chromium.org>

        Reviewed by Eric Seidel.

        Fix Chromium media controls to render a disabled play button when the element is unintialized.

        https://bugs.webkit.org/show_bug.cgi?id=30410

        Covered by existing layout tests.

        * rendering/RenderMediaControlsChromium.cpp:
        (WebCore::paintMediaPlayButton): Include check for NETWORK_EMPTY to render disabled play button.

2009-10-16  Oliver Hunt  <oliver@apple.com>

        Reviewed by Gavin Barraclough.

        Make typeinfo flags default to false
        https://bugs.webkit.org/show_bug.cgi?id=30372

        Last part -- replace HasDefaultGetPropertyNames with OverridesGetPropertyNames
        flag.

        * bindings/js/JSDOMWindowShell.h:
        (WebCore::JSDOMWindowShell::createStructure):
        * bindings/js/JSHTMLAllCollection.h:
        (WebCore::JSHTMLAllCollection::createStructure):
        * bindings/js/JSQuarantinedObjectWrapper.h:
        (WebCore::JSQuarantinedObjectWrapper::createStructure):
        * bindings/scripts/CodeGeneratorJS.pm:
        * bridge/runtime_array.h:
        (JSC::RuntimeArray::createStructure):
        * bridge/runtime_object.h:
        (JSC::RuntimeObjectImp::createStructure):

2009-10-16  Steven Knight  <sgk@chromium.org>

        Reviewed by David Levin.

        https://bugs.webkit.org/show_bug.cgi?id=30447
        Handle long link lines by building .idl-generated bindings in a
        separate webcore_bindings library target.  Avoid Visual Studio
        dependency issues by building additional generated .cpp and .h files
        in a separate webcore_bindings_sources target.

        Chrome should still build and test successfully.

        * WebCore.gyp/WebCore.gyp:
        * WebCore.gypi:

2009-10-16  Simon Fraser  <simon.fraser@apple.com>

        Reviewed by Eric Carlson.

        Transform transitions that used to be accelerated are no longer so
        https://bugs.webkit.org/show_bug.cgi?id=30453

        The change in r49633, to not run accelerated animations/transitions on layers that
        are not attached, broke accelerated transitions/animations in many cases where they start
        as soon as the page loads. This change reverts the code that tests for the GraphicsLayer being
        attached.
        
        No test, because it's not possible from a test to know whether a transition is accelerated or not.

        * rendering/RenderLayerBacking.cpp:
        (WebCore::RenderLayerBacking::startAnimation):
        (WebCore::RenderLayerBacking::startTransition):

2009-10-16  Kevin Ollivier  <kevino@theolliviers.com>

        wxMSW build fix, build the MSW source to get methods that use the MSW version of
        PlatformModuleVersion.

        * wscript:

2009-10-16  Adam Barth  <abarth@webkit.org>

        Unreviewed build fix.  Add back MIMETypeRegistryChromium with the right
        casing.

        * platform/chromium/MIMETypeRegistryChromium.cpp: Added.
        (WebCore::MIMETypeRegistry::getMIMETypeForExtension):
        (WebCore::MIMETypeRegistry::getPreferredExtensionForMIMEType):
        (WebCore::MIMETypeRegistry::getMIMETypeForPath):
        (WebCore::MIMETypeRegistry::isSupportedImageMIMEType):
        (WebCore::MIMETypeRegistry::isSupportedImageResourceMIMEType):
        (WebCore::MIMETypeRegistry::isSupportedImageMIMETypeForEncoding):
        (WebCore::MIMETypeRegistry::isSupportedJavaScriptMIMEType):
        (WebCore::MIMETypeRegistry::isSupportedNonImageMIMEType):
        (WebCore::MIMETypeRegistry::isSupportedMediaMIMEType):
        (WebCore::MIMETypeRegistry::isJavaAppletMIMEType):
        (WebCore::MIMETypeRegistry::getMediaMIMETypeForExtension):
        (WebCore::dummyHashSet):
        (WebCore::MIMETypeRegistry::getSupportedImageMIMETypes):
        (WebCore::MIMETypeRegistry::getSupportedImageResourceMIMETypes):
        (WebCore::MIMETypeRegistry::getSupportedImageMIMETypesForEncoding):
        (WebCore::MIMETypeRegistry::getSupportedNonImageMIMETypes):
        (WebCore::MIMETypeRegistry::getSupportedMediaMIMETypes):

2009-10-16  Adam Barth  <abarth@webkit.org>

        Reviewed by Darin Adler.

        MimeTypeRegistryChromium is mis-casen
        https://bugs.webkit.org/show_bug.cgi?id=30441

        Change the case of MimeTypeRegistryChromium to match other platforms.

        * WebCore.gypi:
        * platform/chromium/MIMETypeRegistryChromium.cpp: Copied from WebCore/platform/chromium/MimeTypeRegistryChromium.cpp.
        * platform/chromium/MimeTypeRegistryChromium.cpp: Removed.

2009-10-16  Dimitri Glazkov  <dglazkov@chromium.org>

        Reviewed by Eric Seidel.

        Change EmptyPluginHalterClient in SVGImage to be non-static, to
        match changes made http://trac.webkit.org/changeset/49385.
        https://bugs.webkit.org/show_bug.cgi?id=30403

        Run the following layout test sequence:
          LayoutTests/svg/W3C-SVG-1.1/struct-image-01-t.svg
          LayoutTests/svg/W3C-SVG-1.1/struct-image-03-t.svg
          LayoutTests/svg/W3C-SVG-1.1/struct-image-04-t.svg
          LayoutTests/svg/W3C-SVG-1.1/struct-image-05-b.svg
          LayoutTests/svg/W3C-SVG-1.1/struct-image-06-t.svg
          LayoutTests/svg/W3C-SVG-1.1/struct-image-07-t.svg
          LayoutTests/svg/W3C-SVG-1.1/struct-image-08-t.svg
          LayoutTests/svg/W3C-SVG-1.1/struct-image-09-t.svg
          LayoutTests/svg/W3C-SVG-1.1/struct-image-10-t.svg
          LayoutTests/svg/carto.net/scrollbar.svg
          LayoutTests/svg/carto.net/selectionlist.svg

        selectionlist.svg should not crash.

        * svg/graphics/SVGImage.cpp:
        (WebCore::SVGImage::dataChanged): Made EmptyPluginHalterClient non-static.

2009-10-16  Victor Wang  <victorw@chromium.org>

        Reviewed by David Levin.

        Add beforeload event support to V8DOMWrapper

        https://bugs.webkit.org/show_bug.cgi?id=30413

        LayoutTests/fast/dom/beforeload/frame-before-load.html

        * bindings/v8/V8DOMWrapper.cpp:
        (WebCore::V8DOMWrapper::convertEventToV8Object):

2009-10-16  Adam Barth  <abarth@webkit.org>

        Reviewed by Darin Adler.

        MimeTypeRegistryChromium is mis-casen
        https://bugs.webkit.org/show_bug.cgi?id=30441

        Change the case of MimeTypeRegistryChromium to match other platforms.

        * WebCore.gypi:
        * platform/chromium/MIMETypeRegistryChromium.cpp: Copied from WebCore/platform/chromium/MimeTypeRegistryChromium.cpp.
        * platform/chromium/MimeTypeRegistryChromium.cpp: Removed.

2009-10-16  Adam Barth  <abarth@webkit.org>

        Reviewed by Mark Rowe.

        Chrome doesn't set Content-Type for file upload when the file extension
        is not recognized
        https://bugs.webkit.org/show_bug.cgi?id=30433

        Apparently, getMIMETypeForPath is supposed to return
        application/octet-stream when it doesn't have a better MIME type.

        * platform/chromium/MimeTypeRegistryChromium.cpp:
        (WebCore::MIMETypeRegistry::getMIMETypeForPath):

2009-10-16  Tor Arne Vestbø  <tor.arne.vestbo@nokia.com>

        Pull out r49676 as it caused build breakges on Symbian

        * plugins/symbian/PluginViewSymbian.cpp:

2009-10-16  Tor Arne Vestbø  <tor.arne.vestbo@nokia.com>

        Reviewed by Ariya Hidayat.

        Crash fix when loading NPAPI plugins on Qt/Mac

        There's no guarantee that the plist will be valid even if we
        ask the plugin to create it. Crash obverved with iGetter.

        * plugins/mac/PluginPackageMac.cpp:

2009-10-15  Stephen White  <senorblanco@chromium.org>

        Reviewed by David Levin.

        Fix for Chromium/skia's implementation of canvas's isPointInPath().
        https://bugs.webkit.org/show_bug.cgi?id=30402

        Covered by LayoutTests/fast/canvas/pointInPath.html.

        * platform/graphics/skia/SkiaUtils.cpp:
        (WebCore::SkPathContainsPoint):

2009-10-15  Adam Barth  <abarth@webkit.org>

        Reviewed by Darin Adler.

        Factor ResourceLoadNotifier out of FrameLoader
        https://bugs.webkit.org/show_bug.cgi?id=30379

        These methods have virtually no interaction with the rest of
        FrameLoader.

        * GNUmakefile.am:
        * WebCore.gypi:
        * WebCore.pro:
        * WebCore.vcproj/WebCore.vcproj:
        * WebCore.xcodeproj/project.pbxproj:
        * WebCoreSources.bkl:
        * dom/Document.cpp:
        (WebCore::Document::resourceRetrievedByXMLHttpRequest):
        * loader/FrameLoader.cpp:
        (WebCore::FrameLoader::FrameLoader):
        (WebCore::FrameLoader::continueLoadAfterWillSubmitForm):
        (WebCore::ResourceLoadNotifier::ResourceLoadNotifier):
        (WebCore::ResourceLoadNotifier::activeDocumentLoader):
        (WebCore::ResourceLoadNotifier::assignIdentifierToInitialRequest):
        (WebCore::ResourceLoadNotifier::willSendRequest):
        (WebCore::ResourceLoadNotifier::didReceiveResponse):
        (WebCore::ResourceLoadNotifier::didReceiveData):
        (WebCore::ResourceLoadNotifier::didFailToLoad):
        (WebCore::ResourceLoadNotifier::didLoadResourceByXMLHttpRequest):
        (WebCore::FrameLoader::sendRemainingDelegateMessages):
        (WebCore::FrameLoader::requestFromDelegate):
        (WebCore::ResourceLoadNotifier::didFinishLoad):
        (WebCore::ResourceLoadNotifier::didReceiveAuthenticationChallenge):
        (WebCore::ResourceLoadNotifier::didCancelAuthenticationChallenge):
        (WebCore::ResourceLoadNotifier::dispatchAssignIdentifierToInitialRequest):
        (WebCore::ResourceLoadNotifier::dispatchWillSendRequest):
        (WebCore::ResourceLoadNotifier::dispatchDidReceiveResponse):
        (WebCore::ResourceLoadNotifier::dispatchDidReceiveContentLength):
        (WebCore::ResourceLoadNotifier::dispatchDidFinishLoading):
        * loader/FrameLoader.h:
        (WebCore::FrameLoader::notifier):
        * loader/MainResourceLoader.cpp:
        (WebCore::MainResourceLoader::receivedError):
        * loader/ResourceLoadNotifier.cpp: Added.
        (WebCore::ResourceLoadNotifier::ResourceLoadNotifier):
        (WebCore::ResourceLoadNotifier::didReceiveAuthenticationChallenge):
        (WebCore::ResourceLoadNotifier::didCancelAuthenticationChallenge):
        (WebCore::ResourceLoadNotifier::assignIdentifierToInitialRequest):
        (WebCore::ResourceLoadNotifier::willSendRequest):
        (WebCore::ResourceLoadNotifier::didReceiveResponse):
        (WebCore::ResourceLoadNotifier::didReceiveData):
        (WebCore::ResourceLoadNotifier::didFinishLoad):
        (WebCore::ResourceLoadNotifier::didFailToLoad):
        (WebCore::ResourceLoadNotifier::didLoadResourceByXMLHttpRequest):
        (WebCore::ResourceLoadNotifier::dispatchAssignIdentifierToInitialRequest):
        (WebCore::ResourceLoadNotifier::dispatchWillSendRequest):
        (WebCore::ResourceLoadNotifier::dispatchDidReceiveResponse):
        (WebCore::ResourceLoadNotifier::dispatchDidReceiveContentLength):
        (WebCore::ResourceLoadNotifier::dispatchDidFinishLoading):
        (WebCore::ResourceLoadNotifier::activeDocumentLoader):
        * loader/ResourceLoadNotifier.h: Added.
        * loader/ResourceLoader.cpp:
        (WebCore::ResourceLoader::willSendRequest):
        (WebCore::ResourceLoader::didReceiveResponse):
        (WebCore::ResourceLoader::didReceiveData):
        (WebCore::ResourceLoader::didFinishLoadingOnePart):
        (WebCore::ResourceLoader::didFail):
        (WebCore::ResourceLoader::didCancel):
        (WebCore::ResourceLoader::didReceiveAuthenticationChallenge):
        (WebCore::ResourceLoader::didCancelAuthenticationChallenge):

2009-10-15  Roland Steiner  <rolandsteiner@google.com>

        Reviewed by Darin Fisher.

        Bug 30427 -  Remove unneeded methods in ChromiumDataObject
        (https://bugs.webkit.org/show_bug.cgi?id=30427)
        
        Remove no longer needed methods from ChromiumDataObject.

        No new tests (no functional change)

        * platform/chromium/ChromiumDataObject.h:

2009-10-16  Yael Aharon  <yael.aharon@nokia.com>

        Reviewed by Tor Arne Vestbø.

        [Qt] Need a way to inform the application when a Netscape plugin is created or deleted
        https://bugs.webkit.org/show_bug.cgi?id=30179

        Inform the application when a plugin is created or destroyed, but only if the 
        application registered for these notifications.

        * plugins/symbian/PluginViewSymbian.cpp:
        (WebCore::PluginView::platformStart):
        (WebCore::PluginView::platformDestroy):

2009-10-16  Shu Chang  <Chang.Shu@nokia.com>

        Reviewed by Eric Seidel.

        Default language translation should be determined by locale settings,
        e.g., "en-US".
        https://bugs.webkit.org/show_bug.cgi?id=29653

        Test: fast/js/navigator-language.html

        * platform/qt/Localizations.cpp:
        (WebCore::defaultLanguage):

2009-10-16  Tor Arne Vestbø  <tor.arne.vestbo@nokia.com>

        Reviewed by Ariya Hidayat.

        Crash fix when loading NPAPI plugins on Qt/Mac

        There's no guarantee that the plist will be valid even if we
        ask the plugin to create it. Crash obverved with iGetter.

        * plugins/mac/PluginPackageMac.cpp:

2009-10-15  Stephen White  <senorblanco@chromium.org>

        Reviewed by David Levin.

        Fix for Chromium/skia's implementation of canvas's isPointInPath().
        https://bugs.webkit.org/show_bug.cgi?id=30402

        Covered by LayoutTests/fast/canvas/pointInPath.html.

        * platform/graphics/skia/SkiaUtils.cpp:
        (WebCore::SkPathContainsPoint):

2009-10-15  Adam Barth  <abarth@webkit.org>

        Reviewed by Darin Adler.

        Factor ResourceLoadNotifier out of FrameLoader
        https://bugs.webkit.org/show_bug.cgi?id=30379

        These methods have virtually no interaction with the rest of
        FrameLoader.

        * GNUmakefile.am:
        * WebCore.gypi:
        * WebCore.pro:
        * WebCore.vcproj/WebCore.vcproj:
        * WebCore.xcodeproj/project.pbxproj:
        * WebCoreSources.bkl:
        * dom/Document.cpp:
        (WebCore::Document::resourceRetrievedByXMLHttpRequest):
        * loader/FrameLoader.cpp:
        (WebCore::FrameLoader::FrameLoader):
        (WebCore::FrameLoader::continueLoadAfterWillSubmitForm):
        (WebCore::ResourceLoadNotifier::ResourceLoadNotifier):
        (WebCore::ResourceLoadNotifier::activeDocumentLoader):
        (WebCore::ResourceLoadNotifier::assignIdentifierToInitialRequest):
        (WebCore::ResourceLoadNotifier::willSendRequest):
        (WebCore::ResourceLoadNotifier::didReceiveResponse):
        (WebCore::ResourceLoadNotifier::didReceiveData):
        (WebCore::ResourceLoadNotifier::didFailToLoad):
        (WebCore::ResourceLoadNotifier::didLoadResourceByXMLHttpRequest):
        (WebCore::FrameLoader::sendRemainingDelegateMessages):
        (WebCore::FrameLoader::requestFromDelegate):
        (WebCore::ResourceLoadNotifier::didFinishLoad):
        (WebCore::ResourceLoadNotifier::didReceiveAuthenticationChallenge):
        (WebCore::ResourceLoadNotifier::didCancelAuthenticationChallenge):
        (WebCore::ResourceLoadNotifier::dispatchAssignIdentifierToInitialRequest):
        (WebCore::ResourceLoadNotifier::dispatchWillSendRequest):
        (WebCore::ResourceLoadNotifier::dispatchDidReceiveResponse):
        (WebCore::ResourceLoadNotifier::dispatchDidReceiveContentLength):
        (WebCore::ResourceLoadNotifier::dispatchDidFinishLoading):
        * loader/FrameLoader.h:
        (WebCore::FrameLoader::notifier):
        * loader/MainResourceLoader.cpp:
        (WebCore::MainResourceLoader::receivedError):
        * loader/ResourceLoadNotifier.cpp: Added.
        (WebCore::ResourceLoadNotifier::ResourceLoadNotifier):
        (WebCore::ResourceLoadNotifier::didReceiveAuthenticationChallenge):
        (WebCore::ResourceLoadNotifier::didCancelAuthenticationChallenge):
        (WebCore::ResourceLoadNotifier::assignIdentifierToInitialRequest):
        (WebCore::ResourceLoadNotifier::willSendRequest):
        (WebCore::ResourceLoadNotifier::didReceiveResponse):
        (WebCore::ResourceLoadNotifier::didReceiveData):
        (WebCore::ResourceLoadNotifier::didFinishLoad):
        (WebCore::ResourceLoadNotifier::didFailToLoad):
        (WebCore::ResourceLoadNotifier::didLoadResourceByXMLHttpRequest):
        (WebCore::ResourceLoadNotifier::dispatchAssignIdentifierToInitialRequest):
        (WebCore::ResourceLoadNotifier::dispatchWillSendRequest):
        (WebCore::ResourceLoadNotifier::dispatchDidReceiveResponse):
        (WebCore::ResourceLoadNotifier::dispatchDidReceiveContentLength):
        (WebCore::ResourceLoadNotifier::dispatchDidFinishLoading):
        (WebCore::ResourceLoadNotifier::activeDocumentLoader):
        * loader/ResourceLoadNotifier.h: Added.
        * loader/ResourceLoader.cpp:
        (WebCore::ResourceLoader::willSendRequest):
        (WebCore::ResourceLoader::didReceiveResponse):
        (WebCore::ResourceLoader::didReceiveData):
        (WebCore::ResourceLoader::didFinishLoadingOnePart):
        (WebCore::ResourceLoader::didFail):
        (WebCore::ResourceLoader::didCancel):
        (WebCore::ResourceLoader::didReceiveAuthenticationChallenge):
        (WebCore::ResourceLoader::didCancelAuthenticationChallenge):

2009-10-15  Roland Steiner  <rolandsteiner@google.com>

        Reviewed by Darin Fisher.

        Bug 30427 -  Remove unneeded methods in ChromiumDataObject
        (https://bugs.webkit.org/show_bug.cgi?id=30427)
        
        Remove no longer needed methods from ChromiumDataObject.

        No new tests (no functional change)

        * platform/chromium/ChromiumDataObject.h:

2009-10-15  Daniel Bates  <dbates@webkit.org>

        No review, rolling out r49644.
        http://trac.webkit.org/changeset/49644
        
        We need to think about this change some more. See bug #30418 
        for more details.

        * page/XSSAuditor.cpp:
        (WebCore::XSSAuditor::canEvaluate):
        (WebCore::XSSAuditor::canEvaluateJavaScriptURL):
        (WebCore::XSSAuditor::canCreateInlineEventListener):
        (WebCore::XSSAuditor::canLoadExternalScriptFromSrc):
        (WebCore::XSSAuditor::canLoadObject):
        (WebCore::XSSAuditor::canSetBaseElementURL):
        (WebCore::XSSAuditor::findInRequest):
        * page/XSSAuditor.h:

2009-10-14  Jon Honeycutt  <jhoneycutt@apple.com>

        Add SPI to determine whether a node is a halted plug-in.

        Part of <rdar://problem/7273354> Halted plug-ins should restart on
        mouseover

        https://bugs.webkit.org/show_bug.cgi?id=30151

        Reviewed by Darin Adler.

        * plugins/PluginView.cpp:
        (WebCore::PluginView::PluginView):
        Initialize m_isHalted.

        * plugins/PluginView.h:
        (WebCore::PluginView::isHalted):
        Return m_isHalted.

        * plugins/win/PluginViewWin.cpp:
        (WebCore::PluginView::halt):
        Set m_isHalted to true.
        (WebCore::PluginView::restart):
        clear m_isHalted.

2009-10-15  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Oliver Hunt.

        [Qt] Build fix for QtWebKit after r49649.

        Change JSC::HasNonDefaultMark to OverridesMarkChildren in createStructure function.

        * bridge/qt/qt_runtime.h:
        (JSC::Bindings::QtRuntimeMethod::createStructure):

2009-10-15  Pavel Feldman  <pfeldman@chromium.org>

        Not reviewed - build fix.

        Web Inspector: add file missing in r49648

        * inspector/front-end/TestController.js: Added.
        (WebInspector.TestController):
        (WebInspector.TestController.prototype.waitUntilDone):
        (WebInspector.TestController.prototype.notifyDone):
        (WebInspector.evaluateForTestInFrontend):

2009-10-15  Oliver Hunt  <oliver@apple.com>

        Reviewed by Darin Adler.

        Make typeinfo flags default to false
        https://bugs.webkit.org/show_bug.cgi?id=30372

        Part 2 -- Reverse the TypeInfo HasDefaultMark flag to OverridesMarkChildren, etc

        * bindings/js/JSDOMBinding.h:
        (WebCore::DOMObjectWithGlobalPointer::createStructure):
        (WebCore::DOMConstructorObject::createStructure):
        * bindings/js/JSDOMWindowShell.h:
        (WebCore::JSDOMWindowShell::createStructure):
        * bindings/js/JSHTMLAllCollection.h:
        (WebCore::JSHTMLAllCollection::createStructure):
        * bindings/js/JSQuarantinedObjectWrapper.h:
        (WebCore::JSQuarantinedObjectWrapper::createStructure):
        * bindings/scripts/CodeGeneratorJS.pm:
        * bridge/qt/qt_runtime.h:
        (JSC::Bindings::QtRuntimeMethod::createStructure):
        * bridge/runtime_method.h:
        (JSC::RuntimeMethod::createStructure):

2009-10-15  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: introduce test controller with waitUntilDone
        on frontend side.

        https://bugs.webkit.org/show_bug.cgi?id=30400

        * WebCore.gypi:
        * WebCore.vcproj/WebCore.vcproj:
        * inspector/front-end/TestController.js: Added.
        (WebInspector.TestController):
        (WebInspector.TestController.prototype.waitUntilDone):
        (WebInspector.TestController.prototype.notifyDone):
        (WebInspector.evaluateForTestInFrontend):
        * inspector/front-end/WebKit.qrc:
        * inspector/front-end/inspector.html:
        * inspector/front-end/inspector.js:

2009-10-15  Daniel Bates  <dbates@webkit.org>

        Reviewed by Adam Barth.

        https://bugs.webkit.org/show_bug.cgi?id=27895
        
        Fixes an issue in which injecting an inline event handler whose value ends in a single-line
        JavaScript comment can bypass the XSSAuditor. Similarly fixes this issue with respect to
        the HTML Base element, HTML Object element, inline and external script tags, and
        JavaScript multi-line variants of all of these attacks.

        Tests: http/tests/security/xssAuditor/base-href-comment.html
               http/tests/security/xssAuditor/iframe-javascript-url-comment.html
               http/tests/security/xssAuditor/img-onerror-HTML-comment.html
               http/tests/security/xssAuditor/img-onerror-comment.html
               http/tests/security/xssAuditor/object-tag-comment.html
               http/tests/security/xssAuditor/script-tag-comment-HTML-entity.html
               http/tests/security/xssAuditor/script-tag-comment.html
               http/tests/security/xssAuditor/script-tag-with-source-comment.html

        * page/XSSAuditor.cpp: Added constant minAttackLength.
        (WebCore::XSSAuditor::canEvaluate):
        (WebCore::XSSAuditor::canEvaluateJavaScriptURL):
        (WebCore::XSSAuditor::canCreateInlineEventListener):
        (WebCore::XSSAuditor::canLoadExternalScriptFromSrc):
        (WebCore::XSSAuditor::canLoadObject):
        (WebCore::XSSAuditor::canSetBaseElementURL):
        (WebCore::XSSAuditor::findInRequest): Added parameter context. Only looks at up 
        to minAttackLength of script code plus context (if any).
        * page/XSSAuditor.h:

2009-10-08  Adam Langley  <agl@google.com>

        Reviewed by Eric Seidel.

        Currently, Skia clip paths are 1-bit. This patch makes our path
        clipping anti-aliased for non-canvas drawing.

        http://code.google.com/p/chromium/issues/detail?id=5927
        https://bugs.webkit.org/show_bug.cgi?id=28820
        http://www.imperialviolet.org/2009/09/02/anti-aliased-clipping.html

        Already covered by layout tests. New baselines will be needed in the
        Chromium tree.

        (Reland. First landed in r49329, reverted in r49330 due to Windows
        build break)

        * html/canvas/CanvasRenderingContext2D.cpp:
        (WebCore::CanvasRenderingContext2D::clip):
        * platform/graphics/GraphicsContext.h:
        * platform/graphics/cairo/GraphicsContextCairo.cpp:
        (WebCore::GraphicsContext::canvasClip):
        * platform/graphics/cg/GraphicsContextCG.cpp:
        (WebCore::GraphicsContext::canvasClip):
        * platform/graphics/haiku/GraphicsContextHaiku.cpp:
        (WebCore::GraphicsContext::canvasClip):
        * platform/graphics/qt/GraphicsContextQt.cpp:
        (WebCore::GraphicsContext::canvasClip):
        * platform/graphics/skia/GraphicsContextSkia.cpp:
        (WebCore::GraphicsContext::addInnerRoundedRectClip):
        (WebCore::GraphicsContext::clip):
        (WebCore::GraphicsContext::canvasClip):
        (WebCore::GraphicsContext::clipPath):
        * platform/graphics/skia/PlatformContextSkia.cpp:
        (PlatformContextSkia::clipPathAntiAliased):
        (PlatformContextSkia::restore):
        (PlatformContextSkia::applyAntiAliasedClipPaths):
        * platform/graphics/skia/PlatformContextSkia.h:
        * platform/graphics/win/GraphicsContextWin.cpp:
        (WebCore::GraphicsContext::canvasClip):
        * platform/graphics/wince/GraphicsContextWince.cpp:
        (WebCore::GraphicsContext::canvasClip):
        * platform/graphics/wx/GraphicsContextWx.cpp:
        (WebCore::GraphicsContext::canvasClip):

2009-10-15  Eric Carlson  <eric.carlson@apple.com>

        Reviewed by Simon Fraser.

        <rdar://problem/7295738> No way to mute/unmute a movie in full screen video mode

        * WebCore.Video.exp: Export muted and setMute.

2009-10-15  Simon Fraser  <simon.fraser@apple.com>

        Reviewed by Dan Bernstein.

        Transitions fail to run sometimes
        https://bugs.webkit.org/show_bug.cgi?id=26770

        Fix an issue where we could attempt to start accelerated animations or transitions on
        GraphicsLayer that were not rooted (because of visibility:hidden), which would leave
        the AnimationController's m_waitingForResponse flag in a state that killed subsequent
        software transitions.

        * page/animation/AnimationController.cpp:
        (WebCore::AnimationControllerPrivate::AnimationControllerPrivate):
        (WebCore::AnimationControllerPrivate::endAnimationUpdate):
        (WebCore::AnimationControllerPrivate::receivedStartTimeResponse):
        (WebCore::AnimationControllerPrivate::addToStartTimeResponseWaitList):
        (WebCore::AnimationControllerPrivate::startTimeResponse):
        * page/animation/AnimationControllerPrivate.h:
        Make some methods non-inline for ease of debugging (these are not hot methods).
        Rename m_waitingForAResponse to m_waitingForResponse.
        
        * platform/graphics/GraphicsLayer.h:
        * platform/graphics/GraphicsLayer.cpp:
        (WebCore::GraphicsLayer::hasAncestor):
        New method to report whether the receiver has the given layer as an ancestor. Used for checking
        whether a layer is rooted.

        * rendering/RenderLayerBacking.cpp:
        (WebCore::RenderLayerBacking::startAnimation):
        (WebCore::RenderLayerBacking::startTransition):
        Don't try to start accelerated animations or transitions on non-rooted GraphicsLayers.

2009-10-15  Alexander Pavlov  <apavlov@chromium.org>

        Reviewed by Pavel Feldman.

        Refactor ProfilesPanel to support multiple profile types

        Data describing different profile types are now stored in distinct objects.
        https://bugs.webkit.org/show_bug.cgi?id=30332

        * WebCore.vcproj/WebCore.vcproj:
        * inspector/front-end/ProfileView.js:
        (WebInspector.CPUProfileView.profileCallback):
        (WebInspector.CPUProfileView):
        (WebInspector.CPUProfileView.prototype._sortData):
        (WebInspector.CPUProfileType):
        (WebInspector.CPUProfileType.prototype.get buttonTooltip):
        (WebInspector.CPUProfileType.prototype.get buttonStyle):
        (WebInspector.CPUProfileType.prototype.buttonClicked):
        (WebInspector.CPUProfileType.prototype.setRecordingProfile):
        (WebInspector.CPUProfile):
        (WebInspector.CPUProfile.prototype.get title):
        (WebInspector.CPUProfile.prototype.get uid):
        (WebInspector.CPUProfile.prototype.get head):
        (WebInspector.CPUProfile.prototype.createView):
        (WebInspector.CPUProfile.prototype.viewForProfile):
        * inspector/front-end/ProfilesPanel.js:
        (WebInspector.ProfileType):
        (WebInspector.ProfileType.prototype.get buttonTooltip):
        (WebInspector.ProfileType.prototype.get buttonStyle):
        (WebInspector.ProfileType.prototype.get buttonCaption):
        (WebInspector.ProfileType.prototype.get id):
        (WebInspector.ProfileType.prototype.get name):
        (WebInspector.ProfileType.prototype.buttonClicked):
        (WebInspector.ProfilesPanel):
        (WebInspector.ProfilesPanel.prototype.get statusBarItems.clickHandler):
        (WebInspector.ProfilesPanel.prototype.get statusBarItems):
        (WebInspector.ProfilesPanel.prototype.reset):
        (WebInspector.ProfilesPanel.prototype.registerProfileType):
        (WebInspector.ProfilesPanel.prototype._makeKey):
        (WebInspector.ProfilesPanel.prototype.addProfileHeader):
        (WebInspector.ProfilesPanel.prototype.showProfile):
        (WebInspector.ProfilesPanel.prototype.getProfileType):
        (WebInspector.ProfilesPanel.prototype.showProfileForURL):
        (WebInspector.ProfilesPanel.prototype.updateProfileTypeButtons):
        (WebInspector.ProfilesPanel.prototype.displayTitleForProfileLink):
        (WebInspector.ProfilesPanel.prototype.get searchableViews):
        (WebInspector.ProfilesPanel.prototype._updateInterface):
        * inspector/front-end/inspector.js:
        (WebInspector._createPanels):
        (WebInspector.documentClick.followLink):
        (WebInspector.documentClick):
        (WebInspector.addProfileHeader):
        (WebInspector.setRecordingProfile):
        (WebInspector.linkifyStringAsFragment):
        (WebInspector.showProfileForURL):

2009-10-15  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Enable inspector layout tests.

        https://bugs.webkit.org/show_bug.cgi?id=30014

        * inspector/InspectorController.cpp:
        (WebCore::InspectorController::evaluateForTestInFrontend):

2009-10-15  Philippe Normand  <pnormand@igalia.com>

        Reviewed by Gustavo Noronha.

        [GStreamer] READY state doesn't mean "enough data"
        https://bugs.webkit.org/show_bug.cgi?id=30003

        STATE_READY means MediaPlayer::HaveNothing

        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.cpp:
        (WebCore::MediaPlayerPrivate::updateStates):

2009-10-15  Philippe Normand  <pnormand@igalia.com>

        Reviewed by Gustavo Noronha.

        https://bugs.webkit.org/show_bug.cgi?id=30002

        implement cancelLoad

        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.cpp:
        (WebCore::MediaPlayerPrivate::cancelLoad):

2009-10-15  Sebastian Dröge  <sebastian.droege@collabora.co.uk>

        Reviewed by Gustavo Noronha.

        https://bugs.webkit.org/show_bug.cgi?id=30353
        
        Fix race condition, leading to a deadlock

        * platform/graphics/gtk/VideoSinkGStreamer.cpp:
        (webkit_video_sink_timeout_func):
        (webkit_video_sink_render):
        (unlock_buffer_mutex):
        (webkit_video_sink_unlock):
        (webkit_video_sink_unlock_stop):
        (webkit_video_sink_stop):
        (webkit_video_sink_start):
        (webkit_video_sink_class_init):
        Fix race condition in unlock/render that would lead to deadlocks.

2009-10-15  Sebastian Dröge  <sebastian.droege@collabora.co.uk>

        Reviewed by Gustavo Noronha.

        https://bugs.webkit.org/show_bug.cgi?id=30374
        
        Check if caps are valid before parsing them

        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.cpp:
        (WebCore::MediaPlayerPrivate::duration):
        Check if caps are valid before parsing them in ::naturalSize().
        This prevents assertions if the natural size should be calculated
        before the video caps are negotiated.

2009-10-15  Philippe Normand  <pnormand@igalia.com>

        Reviewed by Gustavo Noronha.

        https://bugs.webkit.org/show_bug.cgi?id=30006
        [GStreamer] Unnecessary checks for Messages types in callbacks

        refactored gst message callbacks into a single one

        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.cpp:
        (WebCore::mediaPlayerPrivateMessageCallback):
        (WebCore::do_gst_init):
        (WebCore::MediaPlayerPrivate::duration):
        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.h:

2009-10-15  Shu Chang  <Chang.Shu@nokia.com>

        Reviewed by Adele Peterson.

        Anchor elements should be mouse focusable regardless isLink flag.
        https://bugs.webkit.org/show_bug.cgi?id=26856

        * html/HTMLAnchorElement.cpp:
        * html/HTMLAnchorElement.h:

2009-10-15  Nikolas Zimmermann  <nzimmermann@rim.com>

        Not reviewed. Sort XCode project file.

        * WebCore.xcodeproj/project.pbxproj:

2009-10-15  Yury Semikhatsky  <yurys@chromium.org>

        Reviewed by Dave Hyatt.

        Return correct shorthand property name for 
        background-repeat-x, background-repeat-y, background-position-x,
        background-position-y, -webkit-mask-position-x, -webkit-mask-position-y,
        -webkit-mask-repeat-x, -webkit-mask-repeat-y.

        https://bugs.webkit.org/show_bug.cgi?id=28972

        Test: fast/backgrounds/repeat/background-repeat-shorthand.html

        * css/CSSParser.cpp:
        (WebCore::CSSParser::parseValue):

2009-10-14  Mikhail Naganov  <mnaganov@chromium.org>

        Reviewed by Pavel Feldman.

        Web Inspector: Migrate profiles to the injected script-based schema.

        https://bugs.webkit.org/show_bug.cgi?id=30328

        * bindings/js/JSInspectorBackendCustom.cpp:
        * bindings/v8/custom/V8CustomBinding.h:
        * inspector/InspectorBackend.cpp:
        (WebCore::InspectorBackend::getProfileHeaders):
        (WebCore::InspectorBackend::getProfile):
        * inspector/InspectorBackend.h:
        * inspector/InspectorBackend.idl:
        * inspector/InspectorController.cpp:
        (WebCore::InspectorController::addProfile):
        (WebCore::InspectorController::getProfileHeaders):
        (WebCore::InspectorController::getProfile):
        (WebCore::InspectorController::createProfileHeader):
        * inspector/InspectorController.h:
        * inspector/InspectorFrontend.cpp:
        (WebCore::InspectorFrontend::addProfileHeader):
        (WebCore::InspectorFrontend::didGetProfileHeaders):
        (WebCore::InspectorFrontend::didGetProfile):
        * inspector/InspectorFrontend.h:
        * inspector/JavaScriptProfileNode.cpp:
        (WebCore::ProfileNodeClass):
        * inspector/front-end/ProfileView.js:
        (WebInspector.ProfileView.profileCallback):
        (WebInspector.ProfileView):
        (WebInspector.ProfileView.prototype._mouseDownInDataGrid):
        (WebInspector.ProfileView.prototype._assignParentsInProfile):
        * inspector/front-end/ProfilesPanel.js:
        (WebInspector.ProfilesPanel.prototype.addProfileHeader):
        * inspector/front-end/inspector.js:
        (WebInspector.addProfileHeader):

2009-10-14  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Create and update frontend script objects only when
        web inspector is visible.

        https://bugs.webkit.org/show_bug.cgi?id=30376

        * inspector/InspectorController.cpp:
        (WebCore::InspectorController::addConsoleMessage):
        (WebCore::InspectorController::populateScriptObjects):
        (WebCore::InspectorController::pruneResources):
        (WebCore::InspectorController::didCommitLoad):
        (WebCore::InspectorController::didLoadResourceFromMemoryCache):
        (WebCore::InspectorController::identifierForInitialRequest):
        (WebCore::InspectorController::mainResourceFiredDOMContentEvent):
        (WebCore::InspectorController::mainResourceFiredLoadEvent):
        (WebCore::InspectorController::willSendRequest):
        (WebCore::InspectorController::didReceiveResponse):
        (WebCore::InspectorController::didReceiveContentLength):
        (WebCore::InspectorController::didFinishLoading):
        (WebCore::InspectorController::didFailLoading):
        (WebCore::InspectorController::resourceRetrievedByXMLHttpRequest):
        (WebCore::InspectorController::scriptImported):
        (WebCore::InspectorController::didOpenDatabase):
        (WebCore::InspectorController::didUseDOMStorage):
        (WebCore::InspectorController::evaluateForTestInFrontend):

2009-10-15  Joseph Pecoraro  <joepeck@webkit.org>

        Fix Windows build.

        * dom/Document.idl:

2009-10-14  Joseph Pecoraro  <joepeck@webkit.org>

        Reviewed by Adam Barth.

        [HTML5] Add document.head
        https://bugs.webkit.org/show_bug.cgi?id=30232

        Test is fast/dom/document-head.html

        * dom/Document.idl: added readonly attribute head

2009-10-14  Matt Mueller  <mattm@chromium.org>

        Reviewed by Darin Adler.

        Check FNonNeg after the unit switch to avoid valgrind uninitialised conditional reference in WebCore::CSSParser::validUnit.  See http://crbug.com/20939.
        https://bugs.webkit.org/show_bug.cgi?id=30347
        https://bugs.webkit.org/show_bug.cgi?id=22772

        Covered by running LayoutTests/fast/css/invalid-percentage-property.html under valgrind.

        * css/CSSParser.cpp:
        (WebCore::CSSParser::validUnit):

2009-10-14  Adam Barth  <abarth@webkit.org>

        Reviewed by Sam Weinig.

        Move scrolling code from FrameLoader to FrameView
        https://bugs.webkit.org/show_bug.cgi?id=30370

        This code is about controlling the Frame's view, not about loading
        stuff into the frame.

        * loader/FrameLoader.cpp:
        (WebCore::FrameLoader::finishedParsing):
        (WebCore::FrameLoader::scrollToAnchor):
        * page/FrameView.cpp:
        (WebCore::FrameView::scrollToFragment):
        (WebCore::FrameView::scrollToAnchor):
        * page/FrameView.h:

2009-10-14  Oliver Hunt  <oliver@apple.com>

        Reviewed by Geoff Garen.

        Make typeinfo flags default to false
        https://bugs.webkit.org/show_bug.cgi?id=30372
        
        Part 1. Reverse the HasStandardGetOwnPropertySlot flag.

        * bindings/js/JSDOMBinding.h:
        (WebCore::DOMObjectWithGlobalPointer::createStructure):
        (WebCore::DOMConstructorObject::createStructure):
        * bindings/js/JSDOMWindowShell.h:
        (WebCore::JSDOMWindowShell::createStructure):
        * bindings/js/JSHTMLAllCollection.h:
        (WebCore::JSHTMLAllCollection::createStructure):
        * bindings/js/JSQuarantinedObjectWrapper.h:
        (WebCore::JSQuarantinedObjectWrapper::createStructure):
        * bindings/scripts/CodeGeneratorJS.pm:
        * bridge/objc/objc_runtime.h:
        (JSC::Bindings::ObjcFallbackObjectImp::createStructure):
        * bridge/runtime_array.h:
        (JSC::RuntimeArray::createStructure):
        * bridge/runtime_method.h:
        (JSC::RuntimeMethod::createStructure):
        * bridge/runtime_object.h:
        (JSC::RuntimeObjectImp::createStructure):

2009-10-14  Adam Barth  <abarth@webkit.org>

        Reviewed by Darin Adler.

        [XSSAuditor] Add an exception for local files
        https://bugs.webkit.org/show_bug.cgi?id=30352

        Reduce XSS auditor false positives by always letting pages load scripts
        from their own host. We don't actually know of any false positives
        that this prevents, but it seems like a good idea.

        One subtly is that we don't add this exception for scripts that have a
        query string because (1) URLs with query strings are more apt to
        confuse servers and (2) it is much less common to load scripts with a
        query string.

        Tests: http/tests/security/xssAuditor/script-tag-with-source-same-host-with-query.html
               http/tests/security/xssAuditor/script-tag-with-source-same-host.html

        * page/XSSAuditor.cpp:
        (WebCore::XSSAuditor::canLoadExternalScriptFromSrc):

2009-10-14  Nikolas Zimmermann  <nzimmermann@rim.com>

        Reviewed by George Staikos.

        Kill virtual contextElement() method spread all over SVG code
        https://bugs.webkit.org/show_bug.cgi?id=30183

        Remove virtual contextElement() function from all SVG*Element classes, as all animated properties live in the
        SVG*Element classes now instead of the SVGFitToViewBox / SVGURIReference / SVGExternalResourcesRequired
        subclasses. This is a first step to working animVal support. More patches will follow that depend on this change.

        Remove "This file is part of the KDE project" from several files, change my old mail adress wildfox -> zimmermann,
        and remove vim modelines on all files I touched. No change in functionality, thus no new tests.

        * svg/SVGAElement.h: Remove virtual contextElement() method. Change OwnerType of ANIMATED_* macros to this class.
        * svg/SVGAltGlyphElement.h: Remove virtual contextElement() method.
        * svg/SVGAnimatedProperty.h:
        (WebCore::::synchronize):
        (WebCore::::startAnimation):
        (WebCore::::stopAnimation):
        * svg/SVGAnimationElement.h: Remove virtual contextElement() method. Change OwnerType of ANIMATED_* macros to this class.
        * svg/SVGCircleElement.h: Ditto.
        * svg/SVGClipPathElement.h: Ditto.
        * svg/SVGCursorElement.h: Ditto.
        * svg/SVGDefsElement.h: Ditto.
        * svg/SVGEllipseElement.h: Ditto.
        * svg/SVGExternalResourcesRequired.h: Remove pure-virtual contextElement() method.
        * svg/SVGFEImageElement.h: Remove virtual contextElement() method. Change OwnerType of ANIMATED_* macros to this class.
        * svg/SVGFELightElement.h: Remove virtual contextElement() method.
        * svg/SVGFEMergeNodeElement.h: Ditto.
        * svg/SVGFilterElement.h: Remove virtual contextElement() method. Change OwnerType of ANIMATED_* macros to this class.
        * svg/SVGFilterPrimitiveStandardAttributes.h: Remove virtual contextElement() method.
        * svg/SVGFitToViewBox.cpp:
        (WebCore::SVGFitToViewBox::parseViewBox): Add Document* parameter - we used to fetch the Document pointer from the context element.
        (WebCore::SVGFitToViewBox::parseMappedAttribute): Ditto.
        * svg/SVGFitToViewBox.h: Remove pure-virtual contextElement() method.
        * svg/SVGFontElement.h: Remove virtual contextElement() method. Change OwnerType of ANIMATED_* macros to this class.
        * svg/SVGForeignObjectElement.h: Ditto.
        * svg/SVGGElement.h: Ditto.
        * svg/SVGGradientElement.h: Ditto.
        * svg/SVGImageElement.h: Ditto.
        * svg/SVGLineElement.h: Ditto.
        * svg/SVGMPathElement.h: Ditto. Fix license indention.
        * svg/SVGMarkerElement.cpp:
        (WebCore::SVGMarkerElement::parseMappedAttribute): Pass document() to SVGFitToViewBox::parseMappedAttribute().
        * svg/SVGMarkerElement.h: Remove virtual contextElement() method. Change OwnerType of ANIMATED_* macros to this class.
        * svg/SVGMaskElement.h: Ditto.
        * svg/SVGPathElement.h: Ditto.
        * svg/SVGPatternElement.cpp:
        (WebCore::SVGPatternElement::parseMappedAttribute): Pass document() to SVGFitToViewBox::parseMappedAttribute().
        * svg/SVGPatternElement.h: Remove virtual contextElement() method. Change OwnerType of ANIMATED_* macros to this class.
        * svg/SVGPolyElement.cpp:
        (WebCore::SVGPolyElement::updateAnimatedSVGAttribute): synchronizeProperty<...>() has been renamed to PropertySynchronizer<...>::synchronize().
        * svg/SVGPolyElement.h: Remove virtual contextElement() method. Change OwnerType of ANIMATED_* macros to this class.
        * svg/SVGRectElement.h: Ditto.
        * svg/SVGSVGElement.cpp:
        (WebCore::SVGSVGElement::parseMappedAttribute): Pass document() to SVGFitToViewBox::parseMappedAttribute().
        * svg/SVGSVGElement.h: Remove virtual contextElement() method. Change OwnerType of ANIMATED_* macros to this class.
        * svg/SVGScriptElement.h: Ditto.
        * svg/SVGSwitchElement.h: Ditto.
        * svg/SVGSymbolElement.cpp:
        (WebCore::SVGSymbolElement::parseMappedAttribute): Pass document() to SVGFitToViewBox::parseMappedAttribute().
        * svg/SVGSymbolElement.h: Remove virtual contextElement() method. Change OwnerType of ANIMATED_* macros to this class.
        * svg/SVGTRefElement.h: Remove virtual contextElement() method.
        * svg/SVGTextContentElement.h: Remove virtual contextElement() method. Change OwnerType of ANIMATED_* macros to this class.
        * svg/SVGTextPathElement.h: Remove virtual contextElement() method.
        * svg/SVGUseElement.h: Remove virtual contextElement() method. Change OwnerType of ANIMATED_* macros to this class.
        * svg/SVGViewElement.cpp:
        (WebCore::SVGViewElement::parseMappedAttribute): Pass document() to SVGFitToViewBox::parseMappedAttribute().
        * svg/SVGViewElement.h: Remove virtual contextElement() method. Change OwnerType of ANIMATED_* macros to this class.
        * svg/SVGViewSpec.cpp:
        (WebCore::SVGViewSpec::setViewBoxString): Pass document() to SVGFitToViewBox::parseMappedAttribute().
        (WebCore::SVGViewSpec::parseViewSpec): Ditto.
        * svg/SVGViewSpec.h: Devirtualize contextElement() method, it's the only place where contextElement() remains needed.

2009-10-14  Dirk Schulze  <krit@webkit.org>

        Reviewed by Nikolas Zimmermann.

        SVG Masking with wrong offset
        [https://bugs.webkit.org/show_bug.cgi?id=30325]

        SVGMaskElement moves the mask image graphics context to the wrong location.
        In objectBoundingBoxMode the maskDestRect gets translated. This transformation
        is not used in the later calculation. Fix by consistenly calculating the translation
        offsets from the final mask destination rect.

        Test: svg/custom/mask-with-default-value.svg

        * svg/SVGMaskElement.cpp:
        (WebCore::SVGMaskElement::drawMaskerContent):

2009-10-14  Kevin Decker  <kdecker@apple.com>

        Rubberstamped by Jon Honeycutt.
        
        Export a few more showSubstituteImage() related methods.
        
        * WebCore.base.exp:
        * WebCore.xcodeproj/project.pbxproj:

2009-10-14  Evan Martin  <evan@chromium.org>

        Reviewed by Darin Adler.

        Stringify CSS units manually (without printf) to make the formatting
        locale-insensitive and obey CSS spec with respect to large values.
        
        https://bugs.webkit.org/show_bug.cgi?id=18994

        * css/CSSPrimitiveValue.cpp:
        (WebCore::appendCSSDouble):
        (WebCore::formatWithUnits):
        (WebCore::CSSPrimitiveValue::cssText):

2009-10-14  Mark Seaborn  <mseaborn@google.com>

        Reviewed by Darin Adler.

        Check error return value in Perl build script
        https://bugs.webkit.org/show_bug.cgi?id=30316

        * css/makevalues.pl: Die if gperf fails.

2009-10-14  Dirk Schulze  <krit@webkit.org>

        Reviewed by Nikolas Zimmermann.

        SVG wrong filterRegions for userSpaceOnUse and percentage values
        [https://bugs.webkit.org/show_bug.cgi?id=30330]

        Some clean-up of the SVG filter calculation code. This clean-up
        also fixes the problem with percentage and userSpaceInUse mode.

        Test: svg/filters/subRegion-in-userSpace.svg

        * platform/graphics/filters/FilterEffect.cpp:
        (WebCore::FilterEffect::FilterEffect):
        * platform/graphics/filters/FilterEffect.h:
        * rendering/SVGRenderSupport.cpp:
        (WebCore::SVGRenderBase::filterBoundingBoxForRenderer):
        * svg/SVGFilterElement.cpp:
        (WebCore::SVGFilterElement::buildFilter):
        (WebCore::SVGFilterElement::canvasResource):
        * svg/SVGFilterElement.h:
        * svg/SVGFilterPrimitiveStandardAttributes.cpp:
        (WebCore::SVGFilterPrimitiveStandardAttributes::setStandardAttributes):
        * svg/graphics/SVGResourceFilter.cpp:
        (WebCore::SVGResourceFilter::SVGResourceFilter):
        (WebCore::SVGResourceFilter::~SVGResourceFilter):
        (WebCore::SVGResourceFilter::addFilterEffect):
        (WebCore::SVGResourceFilter::prepareFilter):
        * svg/graphics/SVGResourceFilter.h:
        (WebCore::SVGResourceFilter::create):
        * svg/graphics/filters/SVGFilter.cpp:
        (WebCore::SVGFilter::SVGFilter):
        (WebCore::SVGFilter::calculateEffectSubRegion):
        (WebCore::SVGFilter::create):
        * svg/graphics/filters/SVGFilter.h:

2009-10-14  Chris Marrin  <cmarrin@apple.com>

        The last change fixed the problem, removing diagnostic printfs.

        * platform/graphics/mac/GraphicsContext3DMac.cpp:
        (WebCore::GraphicsContext3D::GraphicsContext3D):

2009-10-14  Kevin Ollivier  <kevino@theolliviers.com>

        CURL build fix for versions < 7.18.

        * platform/network/curl/ResourceHandleCurl.cpp:
        (WebCore::ResourceHandle::setDefersLoading):
        * platform/network/curl/ResourceHandleManager.cpp:
        (WebCore::ResourceHandleManager::initializeHandle):

2009-10-14  Chris Marrin  <cmarrin@apple.com>

        One more round of changes to figure out why the webgl 
        tests are crashing on the build bot. Here I am trying
        to see if we can create a software renderer. I am also
        printing the found pixel formats.

        * platform/graphics/mac/GraphicsContext3DMac.cpp:
        (WebCore::GraphicsContext3D::GraphicsContext3D):

2009-10-14  Yael Aharon  <yael.aharon@nokia.com>
 
        Reviewed by Simon Hausmann.
 
        Enabling NPAPI plugin support on Qt Webkit for S60 platform
        https://bugs.webkit.org/show_bug.cgi?id=29302

        Also implemented by Mahesh Kulkarni<mahesh.kulkarni@nokia.com>, 
        Rohini Ananth <rohini.ananth@nokia.com> and help from Norbert Lesr
        <norbert.leser@nokia.com>
         
        * WebCore.pro:
        Enabling ENABLE_NETSCAPE_PLUGIN_API for S60 and added S60 specific 
        new plugin files to be compiled under symbian: macro

        * bridge/npapi.h:
        Added NPEvent and NPRegion definition for Symbian

        * plugins/PluginPackage.h:
        Added S60 specific plugin interface and plugin loader variables
        * plugins/PluginPackage.cpp:
        (WebCore::PluginPackage::unload): Added !PLATFORM(SYMBIAN) macro.
        Default implementation to be used only for non-symbian platform
        * plugins/PluginDatabase.cpp:
        Macro !SYMBIAN checking
        * plugins/PluginView.h:
        Add Symbian to platforms that support setNPWindowIfNeeded
        * plugins/PluginView.cpp:
        (WebCore::PluginView::setFrameRect): Add Symbian to platforms that
        call setNPWindowRect from setFrameRect
         
        Added folder 'symbian' which contains implementation files for S60
        platform-specific NPAPI plugin functionality, under /plugins folder
        * plugins/symbian
        * plugins/symbian/npinterface.h:
        Plugin Interface to be implemented by S60 NPAPI plugins 
        * plugins/symbian/PluginContainerSymbian.h:
        * plugins/symbian/PluginContainerSymbian.cpp:
        * plugins/symbian/PluginDatabaseSymbian.cpp:
        * plugins/symbian/PluginViewSymbian.cpp:
        * plugins/symbian/PluginPackageSymbian.cpp:

2009-10-14  Chris Marrin  <cmarrin@apple.com>

        More changes to figure out why the webgl tests are crashing on the build bot.

        * platform/graphics/mac/GraphicsContext3DMac.cpp:
        (WebCore::GraphicsContext3D::GraphicsContext3D):

2009-10-14  Victor Wang  <victorw@chromium.org>

        Reviewed by David Hyatt.

        Round non-integer line height values.

        Change webkit to rounding non-integer line height values
        instead of truncating them. This fixes a layout test
        failure on Windows and matches the calculation in IE and Firefox. 

        https://bugs.webkit.org/show_bug.cgi?id=24434

        Test: fast/css/line-height-rounding.html
              fast/forms/textarea-scrollbar-height.htm

        * css/CSSComputedStyleDeclaration.cpp:
        (WebCore::CSSComputedStyleDeclaration::getPropertyCSSValue):
        * rendering/InlineFlowBox.cpp:
        (WebCore::InlineFlowBox::computeLogicalBoxHeights):
        * rendering/RenderBR.cpp:
        (WebCore::RenderBR::lineHeight):
        * rendering/style/RenderStyle.h:
        (WebCore::InheritedFlags::computedLineHeight):

2009-10-13  Kelly Norton  <knorton@google.com>

        Reviewed by Pavel Feldman.

        Removes the persistent setting for InspectorTimelineAgent and renames timeline related
        interfaces to be more consistent with the JavaScript profiler.

        * inspector/InspectorBackend.cpp:
        (WebCore::InspectorBackend::startTimelineProfiler):
        (WebCore::InspectorBackend::stopTimelineProfiler):
        (WebCore::InspectorBackend::timelineProfilerEnabled):
        * inspector/InspectorBackend.h:
        * inspector/InspectorBackend.idl:
        * inspector/InspectorController.cpp:
        (WebCore::InspectorController::setFrontendProxyObject):
        (WebCore::InspectorController::startTimelineProfiler):
        (WebCore::InspectorController::stopTimelineProfiler):
        (WebCore::InspectorController::timelineProfilerEnabled):
        * inspector/InspectorController.h:
        * inspector/InspectorFrontend.cpp:
        (WebCore::InspectorFrontend::timelineProfilerWasStarted):
        (WebCore::InspectorFrontend::timelineProfilerWasStopped):
        * inspector/InspectorFrontend.h:
        * inspector/front-end/TimelineAgent.js:
        (WebInspector.timelineProfilerWasStarted):
        (WebInspector.timelineProfilerWasStopped):

2009-10-01  Yong Li  <yong.li@torchmobile.com>

        Reviewed by Adele Peterson.

        Fix crash when loading invalid image data
        https://bugs.webkit.org/show_bug.cgi?id=29980

        * rendering/RenderImage.cpp:
        (WebCore::RenderImage::setImageSizeForAltText):

2009-10-09  Stephen White  <senorblanco@chromium.org>

        Reviewed by Eric Seidel.

        Fix for NULL ptr deref in canvas's toDataURL().
        https://bugs.webkit.org/show_bug.cgi?id=30254

        Test: fast/canvas/canvas-toDataURL-crash.html

        * html/HTMLCanvasElement.cpp:
        (WebCore::HTMLCanvasElement::toDataURL):

2009-10-14  Pavel Feldman  <pfeldman@chromium.org>

        Not reviewed, reverting r49558 since it broke profiler tests.

        https://bugs.webkit.org/show_bug.cgi?id=30328

        * bindings/js/JSInspectorBackendCustom.cpp:
        * bindings/v8/custom/V8CustomBinding.h:
        * inspector/InspectorBackend.cpp:
        (WebCore::InspectorBackend::getProfileHeaders):
        (WebCore::InspectorBackend::getProfile):
        * inspector/InspectorBackend.h:
        * inspector/InspectorBackend.idl:
        * inspector/InspectorController.cpp:
        (WebCore::InspectorController::addProfile):
        (WebCore::InspectorController::getProfileHeaders):
        (WebCore::InspectorController::getProfile):
        (WebCore::InspectorController::createProfileHeader):
        * inspector/InspectorController.h:
        * inspector/InspectorFrontend.cpp:
        (WebCore::InspectorFrontend::addProfileHeader):
        (WebCore::InspectorFrontend::didGetProfileHeaders):
        (WebCore::InspectorFrontend::didGetProfile):
        * inspector/InspectorFrontend.h:
        * inspector/JavaScriptProfileNode.cpp:
        (WebCore::ProfileNodeClass):
        * inspector/front-end/ProfileView.js:
        (WebInspector.ProfileView.profileCallback):
        (WebInspector.ProfileView):
        (WebInspector.ProfileView.prototype._mouseDownInDataGrid):
        (WebInspector.ProfileView.prototype._assignParentsInProfile):
        * inspector/front-end/ProfilesPanel.js:
        (WebInspector.ProfilesPanel.prototype.addProfileHeader):
        * inspector/front-end/inspector.js:
        (WebInspector.addProfileHeader):

2009-10-13  Holger Hans Peter Freyther  <zecke@selfish.org>

        Reviewed by Simon Hausmann.

        ImageDecoderQt: Minor tweaks to the decoder

        - Only cache the data when we start to use it.
        - Start with a repetition count of none for normal images.
        - Do not use canRead as this will trigger parsing of the full image
        - Cope with a GIF failing to decode the first frame, do not
          set m_failed to true if decoding the first frame failed
        - Inform the QImageReader about the format that was detected
        - Always create a ImageDecoderQt when when we have more
        than four byte.


        * platform/graphics/qt/ImageDecoderQt.cpp:
        (WebCore::ImageDecoder::create): Always create QImageReader for a significant speed up
        (WebCore::ImageDecoderQt::ImageDecoderQt): Initialize m_repetitionCount to cAnimationNone
        (WebCore::ImageDecoderQt::setData): Only call ImageDecoder::setData when everything has been received
        (WebCore::ImageDecoderQt::isSizeAvailable): Do not check m_failed twice.
        (WebCore::ImageDecoderQt::filenameExtension): Convert from QByteArray to String
        (WebCore::ImageDecoderQt::frameBufferAtIndex): Check for m_failed before trying to decode
        (WebCore::ImageDecoderQt::internalDecodeSize): Fail if the size is QSize()
        (WebCore::ImageDecoderQt::forceLoadEverything): Handle the case were decoding the first frame fails
        * platform/graphics/qt/ImageDecoderQt.h: Change the m_format type

2009-10-14  Mikhail Naganov  <mnaganov@chromium.org>

        Reviewed by Pavel Feldman.

        Web Inspector: Migrate profiles to the injected script-based schema.

        https://bugs.webkit.org/show_bug.cgi?id=30328

        * bindings/js/JSInspectorBackendCustom.cpp:
        * bindings/v8/custom/V8CustomBinding.h:
        * inspector/InspectorBackend.cpp:
        (WebCore::InspectorBackend::getProfileHeaders):
        (WebCore::InspectorBackend::getProfile):
        * inspector/InspectorBackend.h:
        * inspector/InspectorBackend.idl:
        * inspector/InspectorController.cpp:
        (WebCore::InspectorController::addProfile):
        (WebCore::InspectorController::getProfileHeaders):
        (WebCore::InspectorController::getProfile):
        (WebCore::InspectorController::createProfileHeader):
        * inspector/InspectorController.h:
        * inspector/InspectorFrontend.cpp:
        (WebCore::InspectorFrontend::addProfileHeader):
        (WebCore::InspectorFrontend::didGetProfileHeaders):
        (WebCore::InspectorFrontend::didGetProfile):
        * inspector/InspectorFrontend.h:
        * inspector/JavaScriptProfileNode.cpp:
        (WebCore::ProfileNodeClass):
        * inspector/front-end/ProfileView.js:
        (WebInspector.ProfileView.profileCallback):
        (WebInspector.ProfileView):
        (WebInspector.ProfileView.prototype._mouseDownInDataGrid):
        (WebInspector.ProfileView.prototype._assignParentsInProfile):
        * inspector/front-end/ProfilesPanel.js:
        (WebInspector.ProfilesPanel.prototype.addProfileHeader):
        * inspector/front-end/inspector.js:
        (WebInspector.addProfileHeader):

2009-10-13  Yury Semikhatsky  <yurys@chromium.org>

        Reviewed by Pavel Feldman.

        Don't collect call frame properties until they're needed for completion.

        https://bugs.webkit.org/show_bug.cgi?id=30334

        * inspector/front-end/ConsoleView.js:
        (WebInspector.ConsoleView.prototype.completions):
        * inspector/front-end/InjectedScript.js:
        (InjectedScript.getCompletions): if call frame id is specified and the expression is empty collect frame properties.
        (InjectedScript.CallFrameProxy.prototype._wrapScopeChain): don't send call frame properties until they're needed.
        * inspector/front-end/ScriptsPanel.js:

2009-10-13  Yongjun Zhang  <yongjun.zhang@nokia.com>

        Reviewed by Ariya Hidayat.

        https://bugs.webkit.org/show_bug.cgi?id=29106
        [Qt] make CachedResourceHandle.h compile in winscw Symbian compiler.

        Don't inline constructor CachedResourceHandle<T>(R*) to stop winscw
        compiler aggressively resolve inheritance of class R.  
        
        The winscw compiler bug is reported at:
        https://xdabug001.ext.nokia.com/bugzilla/show_bug.cgi?id=9812.
        
        The change should be reverted when the above bug is fixed in winscw compiler.

        * loader/CachedResourceHandle.h:
        (WebCore::::CachedResourceHandle):

2009-10-13  Dimitri Glazkov  <dglazkov@chromium.org>

        No review, rolling out r49554, because it broke Win and Chromium builds.
        http://trac.webkit.org/changeset/49554

        * css/CSSPrimitiveValue.cpp:
        (WebCore::CSSPrimitiveValue::cssText):

2009-10-13  Evan Martin  <evan@chromium.org>

        Reviewed by Adam Barth.

        Stringify CSS units manually (without printf) to make the formatting
        locale-insensitive and obey CSS spec with respect to large values.
        
        https://bugs.webkit.org/show_bug.cgi?id=18994

        * css/CSSPrimitiveValue.cpp:
        (WebCore::appendCSSDouble):
        (WebCore::formatWithUnits):
        (WebCore::CSSPrimitiveValue::cssText):

2009-10-13  Evan Martin  <evan@chromium.org>

        Reviewed by David Levin.

        Make grippy lines vertical on horizontal scrollbars in Linux Chrome.
        While we're rebaselining scrollbars, fix an off by one in the vertical
        scrollbar rendering too.

        https://bugs.webkit.org/show_bug.cgi?id=30319

        Tests: this is covered by every pixel test involving scrollbars.

        * platform/chromium/ScrollbarThemeChromiumLinux.cpp:
        (WebCore::ScrollbarThemeChromiumLinux::paintThumb):

2009-10-13  Sam Weinig  <sam@webkit.org>

        Reviewed by David Hyatt.

        Fix issue where clientX and clientY on MouseEvents were wrong when
        the page was zoomed and scrolled.

        Test: fast/events/clientXY-in-zoom-and-scroll.html

        * dom/MouseRelatedEvent.cpp:
        (WebCore::contentsX): Take page zoom into account.
        (WebCore::contentsY): Ditto.

2009-10-13  Dave Hyatt  <hyatt@apple.com>

        Reviewed by Adam Roben.

        Change the order of arguments on some of the user stylesheet/script functions.  Split the removal functions
        out into separate ones for scripts and stylesheets.

        * WebCore.base.exp:
        * page/PageGroup.cpp:
        (WebCore::PageGroup::addUserScriptToWorld):
        (WebCore::PageGroup::addUserStyleSheetToWorld):
        (WebCore::PageGroup::removeUserScriptFromWorld):
        (WebCore::PageGroup::removeUserStyleSheetFromWorld):
        (WebCore::PageGroup::removeUserScriptsFromWorld):
        (WebCore::PageGroup::removeUserStyleSheetsFromWorld):
        * page/PageGroup.h:
        (WebCore::PageGroup::userScripts):
        (WebCore::PageGroup::userStyleSheets):

2009-10-13  Evan Martin  <evan@chromium.org>

        Reviewed by Dmitry Titov.

        Chrome's "Skia" theme paints select controls backwards in RTL.

        https://bugs.webkit.org/show_bug.cgi?id=30320

        Test: fast/text/international/bidi-menulist.html
        (The test is about something else, but it includes RTL selects.)

        * rendering/RenderThemeChromiumSkia.cpp:
        (WebCore::RenderThemeChromiumSkia::paintMenuList): flip the arrow position in RTL case.

2009-10-13  Dmitry Titov  <dimich@chromium.org>

        Reviewed by Alexey Proskuryakov.

        https://bugs.webkit.org/show_bug.cgi?id=30318
        ScriptExecutionContext is not anymore needed to create an EventListener - remove old code.
        It's a followup to r48884. It removed the need to pass the ScritpExecutionContext
        into EventListener constructor but did not remove the code pulling ScriptExecutionContext.

        Tests:
        Test adds event listener to a DocumentType Node which is created without a document
        and then dispatches the event after attaching a node to the tree. Event
        should fire when node is attached to the tree.

        * fast/events/add-event-without-document-expected.txt: Added.
        * fast/events/add-event-without-document.html: Added.

        All changes in files below are the same - remove the code that calls
        EventTarget::scriptExecutionContext and checks it for NULL.

        * bindings/js/JSAbstractWorkerCustom.cpp:
        (WebCore::JSAbstractWorker::addEventListener):
        (WebCore::JSAbstractWorker::removeEventListener):
        * bindings/js/JSDOMApplicationCacheCustom.cpp:
        (WebCore::JSDOMApplicationCache::addEventListener):
        (WebCore::JSDOMApplicationCache::removeEventListener):
        * bindings/js/JSDesktopNotificationsCustom.cpp:
        (WebCore::JSNotification::addEventListener):
        (WebCore::):
        * bindings/js/JSEventSourceCustom.cpp:
        (WebCore::JSEventSource::addEventListener):
        (WebCore::JSEventSource::removeEventListener):
        * bindings/js/JSMessagePortCustom.cpp:
        (WebCore::JSMessagePort::addEventListener):
        (WebCore::JSMessagePort::removeEventListener):
        * bindings/js/JSNodeCustom.cpp:
        (WebCore::JSNode::addEventListener):
        (WebCore::JSNode::removeEventListener):
        * bindings/js/JSSVGElementInstanceCustom.cpp:
        (WebCore::JSSVGElementInstance::addEventListener):
        (WebCore::JSSVGElementInstance::removeEventListener):
        * bindings/js/JSXMLHttpRequestCustom.cpp:
        (WebCore::JSXMLHttpRequest::addEventListener):
        (WebCore::JSXMLHttpRequest::removeEventListener):
        * bindings/js/JSXMLHttpRequestUploadCustom.cpp:
        (WebCore::JSXMLHttpRequestUpload::addEventListener):
        (WebCore::JSXMLHttpRequestUpload::removeEventListener):
        * bindings/js/JSWebSocketCustom.cpp:
        (WebCore::JSWebSocket::addEventListener):
        (WebCore::JSWebSocket::removeEventListener):

2009-10-13  Drew Wilson  <atwilson@atwilson-macpro.local>

        Reviewed by David Levin.

        Enable SHARED_WORKERS for Chromium
        https://bugs.webkit.org/show_bug.cgi?id=30289

        Cleaned up bitrot in SharedWorker V8 bindings.

        * WebCore.gypi:
        Removed default implementation of SharedWorkerRepository so Chromium can provide its own.
        * bindings/v8/DerivedSourcesAllInOne.cpp:
        Added V8SharedWorkerContext.cpp.
        * bindings/v8/V8DOMWrapper.cpp:
        (WebCore::V8DOMWrapper::getTemplate):
        Added case statements for SHAREDWORKER and SHAREDWORKERCONTEXT.
        * bindings/v8/V8Index.cpp:
        Now includes V8SharedWorkerContext.h to allow supporting SharedWorkers.
        * bindings/v8/V8Index.h:
        Added definition for SHAREDWORKERCONTEXT wrapper.
        * bindings/v8/WorkerContextExecutionProxy.cpp:
        Added includes for SharedWorker.h and SharedWorkerContext.h.
        * bindings/v8/custom/V8CustomBinding.h:
        Reorganized Worker field indexes to be clearer, and fixed mismatch in worker field index.
        Also added field indexes for SharedWorkers.
        * bindings/v8/custom/V8DOMWindowCustom.cpp:
        (WebCore::ACCESSOR_RUNTIME_ENABLER):
        Added runtime enabler for the SharedWorker constructor.
        * bindings/v8/custom/V8SharedWorkerCustom.cpp:
        (WebCore::CALLBACK_FUNC_DECL):
        Cleaned up bitrot (various APIs have changed since this file was written).
        * page/DOMWindow.idl:
        Added EnabledAtRuntime flag to window.SharedWorker.

2009-10-13  Alexey Proskuryakov  <ap@apple.com>

        Reviewed by Brady Eidson.

        https://bugs.webkit.org/show_bug.cgi?id=30345
        HTTP tests for credential handling fail on Tiger

        We cannot prevent NSURLConnection from doing its credentil handling on Tiger anyway; so
        let it do its work without intervention. Once again, we pass explicitly passed credentials
        in URL, fixing regressions from Safari 3.

        * platform/network/mac/ResourceHandleMac.mm:
        (WebCore::ResourceHandle::start):
        (WebCore::ResourceHandle::didReceiveAuthenticationChallenge):
        (WebCore::ResourceHandle::receivedCredential):

2009-10-13  Roland Steiner  <rolandsteiner@google.com>

        Reviewed by Adam Barth.

        Bug 28964 -  [Chromium] ChromiumDataObject should have getter/setter interface

        Reworked and added to the getter/setter interface in ChromiumDataObject:
        - added contains...() methods to just query the state
        - added containsValid...URL() methods for URL data members
        - removed takeFileNames() as this was too type-dependent
        - changed return type of fileNames() to Vector<String>
        - added interface methods to allow appending to and iteration over file names

        No new tests (no functional behavior changed).

        * platform/chromium/ChromiumDataObject.h:
        (WebCore::ChromiumDataObject::containsMainURL):
        (WebCore::ChromiumDataObject::containsValidMainURL):
        (WebCore::ChromiumDataObject::containsMainURLTitle):
        (WebCore::ChromiumDataObject::containsTextPlain):
        (WebCore::ChromiumDataObject::containsTextHTML):
        (WebCore::ChromiumDataObject::containsHTMLBaseURL):
        (WebCore::ChromiumDataObject::containsValidHTMLBaseURL):
        (WebCore::ChromiumDataObject::containsContent):
        (WebCore::ChromiumDataObject::containsContentFileExtension):
        (WebCore::ChromiumDataObject::containsContentFileName):
        (WebCore::ChromiumDataObject::setContentFileName):
        (WebCore::ChromiumDataObject::containsFileNames):
        (WebCore::ChromiumDataObject::fileNames):
        (WebCore::ChromiumDataObject::clearFileNames):
        (WebCore::ChromiumDataObject::countFileNames):
        (WebCore::ChromiumDataObject::fileNameAt):
        (WebCore::ChromiumDataObject::setFileNames):
        (WebCore::ChromiumDataObject::appendToFileNames):
        (WebCore::ChromiumDataObject::popFileName):

2009-10-13  Simon Fraser  <simon.fraser@apple.com>

        Temporary debugging changes to figure out why the webgl tests are crashing on the build bot.

        * platform/graphics/mac/GraphicsContext3DMac.cpp:
        (WebCore::GraphicsContext3D::GraphicsContext3D):

2009-10-13  Simon Fraser  <simon.fraser@apple.com>

        Reviewed by Dan Bernstein.

        Visibility:visible inside a compositing layer doesn't make the element visible
        https://bugs.webkit.org/show_bug.cgi?id=30339
        
        When deciding if a layer had any renderable content, RenderLayerBacking::paintIntoLayer()
        only consulted hasVisibleContent(), which does not take into a account child layers which
        may be visible. We also have to consult hasVisibleDescendant() as well.

        Test: compositing/compositing-visible-descendant.html

        * rendering/RenderLayer.h:
        (WebCore::RenderLayer::hasVisibleDescendant):
        * rendering/RenderLayerBacking.cpp:
        (WebCore::RenderLayerBacking::paintIntoLayer):

2009-10-13  Laszlo Gombos  <laszlo.1.gombos@nokia.com>

        Reviewed by Simon Hausmann.

        Refactor ENABLE_PLUGIN_PACKAGE_SIMPLE_HASH
        https://bugs.webkit.org/show_bug.cgi?id=30278

        Move the definition of ENABLE_PLUGIN_PACKAGE_SIMPLE_HASH 
        from the make system into common code.

        Enable ENABLE_PLUGIN_PACKAGE_SIMPLE_HASH if NETSCAPE_PLUGIN_API 
        support is not enabled.

        Remove notImplemented() from PluginPackageNone.cpp and 
        PluginDataNone.cpp make them just empty functions.

        * GNUmakefile.am:
        * WebCore.pro:
        * plugins/PluginDataNone.cpp:
        (WebCore::PluginData::initPlugins):
        (WebCore::PluginData::refresh):
        * plugins/PluginPackageNone.cpp:
        (WebCore::PluginPackage::determineQuirks):
        (WebCore::PluginPackage::fetchInfo):
        (WebCore::PluginPackage::load):

2009-10-13  Alexey Proskuryakov  <ap@apple.com>

        Reviewed by Dan Bernstein.

        https://bugs.webkit.org/show_bug.cgi?id=30150
        <rdar://problem/7283540> REGRESSION: Crash when accessing clipboardData.types

        Test: editing/pasteboard/crash-accessing-clipboardData-types.html

        * platform/mac/ClipboardMac.mm: (WebCore::addHTMLClipboardTypesForCocoaType): The String
        class doesn't have operator bool, it's operator NSString* that is invoked instead, and it
        converts null strings to non-null @"".

2009-10-13  Drew Wilson  <atwilson@atwilson-macpro.local>

        Reviewed by Dimitri Glazkov.

        window attributes (like localStorage) that are disabled at runtime are still visible
        https://bugs.webkit.org/show_bug.cgi?id=30240

        Adding codegen/bindings to support runtime disabling of attributes.

        No new tests (only supported by chrome currently)

        * bindings/scripts/CodeGeneratorV8.pm:
        Refactored the guts of GenerateBatchedAttributeData into a separate GenerateSingleBatchedAttribute with a passed-in indentation level to allow generating a single BatchedAttribute struct.
        Added support for the EnabledAtRuntime extended attribute, which generates a call to the appropriate XXXXEnabled() API before adding the attribute to the instance.
        * bindings/v8/V8Proxy.cpp:
        (WebCore::batchConfigureAttributes):
        Refactored attribute setting code into a common inline routine.
        * bindings/v8/V8Proxy.h:
        (WebCore::configureAttribute):
        Inline function which configures a single attribute given a BatchedAttribute struct.
        * bindings/v8/custom/V8CustomBinding.h:
        Added (DECLARE_)ACCESSOR_RUNTIME_ENABLER to allow enabling attributes at runtime.
        * bindings/v8/custom/V8DOMWindowCustom.cpp:
        Added code to enable window.Audio only if MediaPlayer.isAvailable() == true
        * page/DOMWindow.idl:
        Added [EnabledAtRuntime] extended attribute to the Audio attribute.

2009-10-13  Michelangelo De Simone  <micdesim@gmail.com>

        Reviewed by Adam Barth.

        https://bugs.webkit.org/show_bug.cgi?id=27457
        Added support for static validation on type=email input elements as per
        HTML5 specs:
        http://www.whatwg.org/specs/web-apps/current-work/#e-mail-state

        Test: fast/forms/ValidityState-typeMismatch-email.html

        * html/ValidityState.cpp:
        (WebCore::ValidityState::typeMismatch): ValidityState.typeMismatch
        performs validation on type=email input elements now.
        (WebCore::ValidityState::isValidEmailAddress): simple validation method 
        * html/ValidityState.h:

2009-10-13  Dmitry Titov  <dimich@chromium.org>

        Reviewed by Adam Barth.

        Event listeners installed on a window object returned from window.open() don't work
        https://bugs.webkit.org/show_bug.cgi?id=28716

        Tests: http/tests/security/window-events-clear-domain.html
               http/tests/security/window-events-clear-port.html
               http/tests/security/window-events-pass.html

        * dom/Document.cpp: Split code of Document::clear() in a way to avoid removing all
        window event handlers when implicitOpen is called. It is called in 2 cases - on
        committing loaded content (no need to clean handlers) and on document.open() (needs to remove handlers).

        (WebCore::Document::open): in addition to calling implicitOpen it also removes window
        event handlers, to preserve the behavior of document.open().

        (WebCore::Document::implicitOpen): includes the part of removed Document::clear() that
        does not remove window event handlers.

        * dom/Document.h: Removed clear().

        * loader/FrameLoader.cpp:
        (WebCore::FrameLoader::stopLoading): add check to avoid removing window event handlers
        if we transition from temporary empty document to a loaded one.

        (WebCore::FrameLoader::didOpenURL): Remove closeURL() which was called twice when loading.
        (WebCore::FrameLoader::finishedLoadingDocument): add closeURL() to compensate for change above.

2009-10-13  Brian Weinstein  <bweinstein@apple.com>

        Reviewed by Pavel Feldman.

        Fix a leak in the inspector by calling didRemoveNode with
        an error code when it fails, instead of returning from the
        Backend.

        * inspector/InspectorBackend.cpp:
        (WebCore::InspectorBackend::removeNode):
        * inspector/front-end/ElementsTreeOutline.js:

2009-10-13  Brian Weinstein  <bweinstein@apple.com>

        Reviewed by Timothy Hatcher.

        Fixes <https://bugs.webkit.org/show_bug.cgi?id=30337>.
        Web Inspector: Should be able to delete nodes from the Elements Tree.
        
        When the delete key is pressed and a element is selected in the tree,
        the element should be deleted from the Elements Tree and the DOM.

        * inspector/InspectorBackend.cpp:
        (WebCore::InspectorBackend::removeNode):
        * inspector/InspectorBackend.h:
        * inspector/InspectorBackend.idl:
        * inspector/InspectorFrontend.cpp:
        (WebCore::InspectorFrontend::didRemoveNode):
        * inspector/InspectorFrontend.h:
        * inspector/front-end/ElementsPanel.js:
        (WebInspector.ElementsPanel.prototype._updateModifiedNodes):
        * inspector/front-end/ElementsTreeOutline.js:
        (WebInspector.ElementsTreeOutline.prototype.handleKeyEvent):

2009-10-13  Brian Weinstein  <bweinstein@apple.com>

        Reviewed by Timothy Hatcher.

        Fix REGRESSION(49479): Mouseover on resources graph doesn't show timings.
        
        Set pointer-events: none on the new overlay so mouseover events are passed
        to the resources graph so we can show timings.

        * inspector/front-end/inspector.css:

2009-10-13  Girish Ramakrishnan  <girish@forwardbias.in>

        Reviewed by Simon Hausmann.

        [Qt] Plugins : Remove all traces of winId. Use ownerWidget() instead.
        
        This is a bug for two reasons:
        1. Everytime we use winId(), we end up creating a native widget. This causes an
        unnecessary copy of contents from the backing store to the native widget.
        2. Neither windowed nor windowless plugins require the winId of the QWebView or
        QGraphicsView.
        
        Introduce ownerWidget() which returns a QWidget * without creating a native widget
        (as opposed to QWidget::find(winId)).

       https://bugs.webkit.org/show_bug.cgi?id=30170

        * platform/qt/PlatformScreenQt.cpp:
        (WebCore::screenDepthPerComponent):
        * platform/qt/PopupMenuQt.cpp:
        (WebCore::PopupMenu::show):
        * platform/qt/QWebPageClient.h:
        * plugins/qt/PluginViewQt.cpp:
        (WebCore::setSharedXEventFields):
        (WebCore::PluginView::initXEvent):
        (WebCore::PluginView::getValue):
        (WebCore::PluginView::platformStart):

2009-10-13  Gustavo Noronha Silva  <gustavo.noronha@collabora.co.uk>

        Unreviewed build system fix. Typo in a filename.

        * GNUmakefile.am:

2009-10-12  Alexander Pavlov  <apavlov@chromium.org>

        Reviewed by Timothy Hatcher.
        Alter profile link format to enable multiple profile types
        https://bugs.webkit.org/show_bug.cgi?id=30253

        The new profile URL includes the profile type along with the
        profile title and uid.

        * inspector/InspectorController.cpp:
        (WebCore::InspectorController::addProfileFinishedMessageToConsole):
        (WebCore::InspectorController::addStartProfilingMessageToConsole):
        * inspector/front-end/inspector.js:
        (WebInspector.documentClick.followLink):
        (WebInspector.documentClick):
        (WebInspector.linkifyStringAsFragment):

2009-10-12  Alexander Pavlov  <apavlov@chromium.org>

        Reviewed by Timothy Hatcher.

        Fix same-named profiles grouping in the Profiles panel.

        The tree node re-parenting while adding a new group node was broken.
         
        https://bugs.webkit.org/show_bug.cgi?id=30299

        * inspector/front-end/ProfilesPanel.js:
        (WebInspector.ProfilesPanel.prototype.addProfile):

2009-10-12  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Enforce async interaction between inspector controller and frontend.

        https://bugs.webkit.org/show_bug.cgi?id=30300

        * inspector/front-end/inspector.js:
        (WebInspector.dispatch.delayDispatch):
        (WebInspector.dispatch):

2009-10-12  Xiaomei Ji  <xji@chromium.org>

        Reviewed by Sam Weinig.

        Fix issue caretRangeFromPoint() returns wrong result for a zoomed and 
        scrolled page.
        https://bugs.webkit.org/show_bug.cgi?id=30034

        * dom/Document.cpp:
        (WebCore::Document::elementFromPoint): calculate the correct point 
        relative to document when the page is zoomed and scrolled.
        (WebCore::Document::caretRangeFromPoint): calculate the correct point 
        relative to document when the page is zoomed and scrolled.

2009-10-12  Fumitoshi Ukai  <ukai@chromium.org>

        Reviewed by Sam Weinig.

        JavaScript bindings of WebSocket addEventListener/removeEventListener
        https://bugs.webkit.org/show_bug.cgi?id=29841

        Test: fast/websockets/websocket-event-target.html

        * bindings/js/JSWebSocketCustom.cpp:
        (WebCore::JSWebSocket::addEventListener):
        (WebCore::JSWebSocket::removeEventListener):
        * bindings/v8/custom/V8CustomBinding.h:
        * bindings/v8/custom/V8WebSocketCustom.cpp:
        (WebCore::CALLBACK_FUNC_DECL):
        * websockets/WebSocket.idl:

2009-10-12  Sam Weinig  <sam@webkit.org>

        Reviewed by Darin Adler.

        Fix for https://bugs.webkit.org/show_bug.cgi?id=29078
        <rdar://problem/7288221>

        Add a mechanism to blacklist certain codecs.  Initially, just blacklist UTF-7 as HTML5 encourages.

        * platform/text/TextEncodingRegistry.cpp:
        (WebCore::pruneBlacklistedCodecs):
        (WebCore::buildBaseTextCodecMaps):
        (WebCore::extendTextCodecMaps):

2009-10-09  Dave Hyatt  <hyatt@apple.com>

        Reviewed by Darin Adler.

        Add support for the beforeload event to frames.  Complete support of the beforeload event by making sure
        its wrapper gets properly constructed (so that the URL field of the event can be accessed).  Add support
        for the Objective-C wrapper class as well.

        Added fast/dom/beforeload/frame-before-load.html

        * WebCore.xcodeproj/project.pbxproj:
        * bindings/js/JSEventCustom.cpp:
        (WebCore::toJS):
        * bindings/objc/DOMEvents.mm:
        (kitClass):
        * dom/BeforeLoadEvent.h:
        (WebCore::BeforeLoadEvent::isBeforeLoadEvent):
        * dom/Event.cpp:
        (WebCore::Event::isBeforeLoadEvent):
        * dom/Event.h:
        * html/HTMLFrameElementBase.cpp:
        (WebCore::HTMLFrameElementBase::parseMappedAttribute):
        * loader/FrameLoader.cpp:
        (WebCore::FrameLoader::loadWithDocumentLoader):

2009-10-12  Dan Bernstein  <mitz@apple.com>

        Reviewed by Simon Fraser.

        Fix <rdar://problem/7094146> Reproducible crash at
        RenderObject::localToAbsolute()

        Test: fast/dynamic/position-absolute-to-fixed-crash.html

        The crash was caused by stale positioned objects lists following an
        object transitioning from being absolutely position to being fixed
        positioned.

        * rendering/RenderBox.cpp:
        (WebCore::RenderBox::styleWillChange): In case of a transition between
        absolute and fixed position, mark the parent as having a child needing
        layout, so that this object will get inserted into its new container's
        positioned objects list.
        * rendering/RenderObject.cpp:
        (WebCore::RenderObject::styleWillChange): Changed a condition to cover
        this transition, so that this object gets removed from its current
        container's positioned objects list.

2009-10-12  Kenneth Rohde Christiansen  <kenneth@webkit.org>

        Reviewed by Simon Hausmann.

        Add a palette() method that is needed by our RenderTheme.

        * platform/qt/QWebPageClient.h:

2009-10-12  Dirk Schulze  <krit@webkit.org>

        Reviewed by Nikolas Zimmermann.

        SVG Gradients can't handle percentage values in userSpaceOnUse mode
        [https://bugs.webkit.org/show_bug.cgi?id=30286]

        Fixed *GradientAttributes to take SVGLength instead of double. This casues
        the problem, that we can't calculate the correct size of a gradient on
        userSpaceOnUse mode with percentage values.

        Test: svg/custom/gradient-userSpaceOnUse-with-percentage.svg

        * svg/LinearGradientAttributes.h:
        (WebCore::LinearGradientAttributes::LinearGradientAttributes):
        (WebCore::LinearGradientAttributes::x1):
        (WebCore::LinearGradientAttributes::y1):
        (WebCore::LinearGradientAttributes::x2):
        (WebCore::LinearGradientAttributes::y2):
        (WebCore::LinearGradientAttributes::setX1):
        (WebCore::LinearGradientAttributes::setY1):
        (WebCore::LinearGradientAttributes::setX2):
        (WebCore::LinearGradientAttributes::setY2):
        * svg/RadialGradientAttributes.h:
        (WebCore::RadialGradientAttributes::RadialGradientAttributes):
        (WebCore::RadialGradientAttributes::cx):
        (WebCore::RadialGradientAttributes::cy):
        (WebCore::RadialGradientAttributes::r):
        (WebCore::RadialGradientAttributes::fx):
        (WebCore::RadialGradientAttributes::fy):
        (WebCore::RadialGradientAttributes::setCx):
        (WebCore::RadialGradientAttributes::setCy):
        (WebCore::RadialGradientAttributes::setR):
        (WebCore::RadialGradientAttributes::setFx):
        (WebCore::RadialGradientAttributes::setFy):
        * svg/SVGLinearGradientElement.cpp:
        (WebCore::SVGLinearGradientElement::buildGradient):
        (WebCore::SVGLinearGradientElement::collectGradientProperties):
        * svg/SVGRadialGradientElement.cpp:
        (WebCore::SVGRadialGradientElement::buildGradient):
        (WebCore::SVGRadialGradientElement::collectGradientProperties):

2009-10-12  Brian Weinstein  <bweinstein@apple.com>

        Reviewed by Timothy Hatcher.

        Fixes <http://webkit.org/b/30315>.
        Web Inspector: DOM Content and Load lines in Resources are unclear what they mean.
        
        Add tooltip text to the Load event and DOM Content event lines through
        a new layer that allows these lines to be on top of the view.

        * inspector/front-end/ResourcesPanel.js:
        (WebInspector.ResourcesPanel.prototype._updateGraphDividersIfNeeded):
        (WebInspector.ResourcesPanel.prototype._updateDividersLabelBarPosition):
        * inspector/front-end/inspector.css:

2009-10-12  Dimitri Glazkov  <dglazkov@chromium.org>

        No review, rolling out r49429, because it broke layout tests.
        http://trac.webkit.org/changeset/49429

        * bindings/v8/V8AbstractEventListener.cpp:
        (WebCore::V8AbstractEventListener::~V8AbstractEventListener):

2009-10-12  Dirk Schulze  <krit@webkit.org>

        Reviewed by Eric Seidel.

        SVG - crash on feMerge when input not available
        [https://bugs.webkit.org/show_bug.cgi?id=30297]

        Make a early return in SVGFEMergeElement if the needed
        filter effect doesn't exist.

        Test: svg/filters/feMerge-wrong-input.svg

        * svg/SVGFEMergeElement.cpp:
        (WebCore::SVGFEMergeElement::build):

2009-10-12  Chris Marrin  <cmarrin@apple.com>

        Reviewed by Oliver Hunt.

        Added automatic flush before compositing
        https://bugs.webkit.org/show_bug.cgi?id=30236

        This causes image to always render correctly. In writing a testcase
        I needed to implement readPixels. This exposed a bug in reading back
        values from a CanvasArray subclass, so I fixed that as well. Now when
        you wrap a CanvasArray in a JSValue it actually wraps the specific
        subclass. To do this I need to add virtual methods to each CanvasArray
        subclass to determine the type and a custom toJS method for CanvasArray
        to create the proper wrapper. 

        Test: fast/canvas/webgl/triangle.html

        * WebCore.xcodeproj/project.pbxproj:
        * bindings/js/JSCanvasArrayCustom.cpp:
        (WebCore::toJS):
        * html/canvas/CanvasArray.h:
        (WebCore::CanvasArray::isByteArray):
        (WebCore::CanvasArray::isUnsignedByteArray):
        (WebCore::CanvasArray::isShortArray):
        (WebCore::CanvasArray::isUnsignedShortArray):
        (WebCore::CanvasArray::isIntArray):
        (WebCore::CanvasArray::isUnsignedIntArray):
        (WebCore::CanvasArray::isFloatArray):
        * html/canvas/CanvasArray.idl:
        * html/canvas/CanvasByteArray.h:
        (WebCore::CanvasByteArray::isByteArray):
        * html/canvas/CanvasFloatArray.h:
        (WebCore::CanvasFloatArray::isFloatArray):
        * html/canvas/CanvasIntArray.h:
        (WebCore::CanvasIntArray::isIntArray):
        * html/canvas/CanvasRenderingContext3D.cpp:
        (WebCore::CanvasRenderingContext3D::readPixels):
        * html/canvas/CanvasRenderingContext3D.h:
        * html/canvas/CanvasRenderingContext3D.idl:
        * html/canvas/CanvasShortArray.h:
        (WebCore::CanvasShortArray::isShortArray):
        * html/canvas/CanvasUnsignedByteArray.h:
        (WebCore::CanvasUnsignedByteArray::isUnsignedByteArray):
        * html/canvas/CanvasUnsignedIntArray.h:
        (WebCore::CanvasUnsignedIntArray::isUnsignedIntArray):
        * html/canvas/CanvasUnsignedShortArray.h:
        (WebCore::CanvasUnsignedShortArray::isUnsignedShortArray):
        * platform/graphics/GraphicsContext3D.h:
        * platform/graphics/mac/Canvas3DLayer.mm:
        (-[Canvas3DLayer drawInCGLContext:pixelFormat:forLayerTime:displayTime:]):
        * platform/graphics/mac/GraphicsContext3DMac.cpp:
        (WebCore::GraphicsContext3D::readPixels):

2009-10-12  Sebastian Dröge  <sebastian.droege@collabora.co.uk>

        Reviewed by Gustavo Noronha.

        https://bugs.webkit.org/show_bug.cgi?id=30307
        
        Fix 0 sentinel for g_object_set() function call.

        * platform/graphics/gtk/DataSourceGStreamer.cpp:
        (webkit_data_src_uri_set_uri):
        0 is passed as 32 bit value on x86-64 in vararg functions, but
        g_object_set() expects a 64 bit 0. This will cause crashes.

2009-10-12  Cameron McCormack  <cam@mcc.id.au>

        Reviewed by Eric Seidel.

        Drop in="" from <feFlood>
        https://bugs.webkit.org/show_bug.cgi?id=29001

        This makes <feFlood in="bogus"> have an effect, too.

        http://www.w3.org/2003/01/REC-SVG11-20030114-errata#feflood-attribute

        Test: svg/dom/feFlood-no-in1.html

        * svg/SVGFEFloodElement.cpp:
        (WebCore::SVGFEFloodElement::SVGFEFloodElement):
        (WebCore::SVGFEFloodElement::build):
        * svg/SVGFEFloodElement.h:
        * svg/SVGFEFloodElement.idl:
        * svg/graphics/filters/SVGFEFlood.cpp:
        (WebCore::FEFlood::FEFlood):
        (WebCore::FEFlood::create):
        * svg/graphics/filters/SVGFEFlood.h:

2009-10-12  Sebastian Dröge  <sebastian.droege@collabora.co.uk>

        Reviewed by Gustavo Noronha.

        https://bugs.webkit.org/show_bug.cgi?id=29998
        
        Scale video to completely fill the target surface while
        keeping the aspect ratio. This fixes displaying of the
        YouTube HTML5 sample website.

        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.cpp:
        Scale video to completely fill the target surface, keep
        the aspect ratio and center it.

2009-10-12  Sebastian Dröge  <sebastian.droege@collabora.co.uk>

        Reviewed by Gustavo Noronha.

        https://bugs.webkit.org/show_bug.cgi?id=29997
        
        Fixes double memcpy of all rendered video frames.

        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.cpp:
        (WebCore::mediaPlayerPrivateRepaintCallback):
        (WebCore::MediaPlayerPrivate::MediaPlayerPrivate):
        (WebCore::MediaPlayerPrivate::~MediaPlayerPrivate):
        (WebCore::MediaPlayerPrivate::duration):
        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.h:
        * platform/graphics/gtk/VideoSinkGStreamer.cpp:
        (webkit_video_sink_timeout_func):
        (webkit_video_sink_dispose):
        (unlock_buffer_mutex):
        (webkit_video_sink_unlock):
        (marshal_VOID__MINIOBJECT):
        (webkit_video_sink_class_init):
        (webkit_video_sink_new):
        * platform/graphics/gtk/VideoSinkGStreamer.h:
        Directly pass the buffers up to the MediaPlayerPrivate::paint()
        method instead of rendering them first to an intermediate cairo
        surface. This should increase performance and peak memory usage.

2009-10-11  Daniel Bates  <dbates@webkit.org>

        Reviewed by Adam Barth.

        https://bugs.webkit.org/show_bug.cgi?id=30242
        
        Fixes an issue where JavaScript URLs that are URL-encoded twice can 
        bypass the XSSAuditor.
        
        JavaScript URLs that are completed by method Document::completeURL have added
        URL-encoded characters such that a direct comparison with the URL-decoded 
        outgoing HTTP parameters is not sufficient. Instead, the URL-decoded outgoing 
        HTTP parameters must be URL-decoded before comparison.

        Tests: http/tests/security/xssAuditor/iframe-javascript-url-twice-url-encode.html
               http/tests/security/xssAuditor/iframe-javascript-url-twice-url-encode2.html
               http/tests/security/xssAuditor/iframe-javascript-url-twice-url-encode3.html

        * bindings/ScriptControllerBase.cpp:
        (WebCore::ScriptController::executeIfJavaScriptURL): Modified to pass XSSAuditor
        the URL-decoded source code for the JavaScript URL.
        * page/XSSAuditor.cpp:
        (WebCore::isIllegalURICharacter): Minor syntactical change to the comment.
        (WebCore::XSSAuditor::CachingURLCanonicalizer::canonicalizeURL): Added 
        parameter decodeURLEscapeSequencesTwice.
        (WebCore::XSSAuditor::canEvaluateJavaScriptURL):
        (WebCore::XSSAuditor::decodeURL): Ditto.
        (WebCore::XSSAuditor::findInRequest): Ditto.
        * page/XSSAuditor.h:
        (WebCore::XSSAuditor::CachingURLCanonicalizer::CachingURLCanonicalizer): Ditto.

2009-10-11  Dominic Cooney  <dominicc@google.com>

        Reviewed by Adam Barth.

        Fixes a build break in the V8 bindings caused by revision 49420.
        https://bugs.webkit.org/show_bug.cgi?id=30294

        Revision 49420 introduces an IDL-defined CanvasActiveInfo
        type. This causes a build break in the V8 bindings where
        CanvasGraphicsContext3D naively refers to CanvasActiveInfo as a
        non-ref type.

        * WebCore.gypi: Include CanvasActiveInfo.idl in build.
        * bindings/scripts/CodeGeneratorV8.pm: CanvasActiveInfo is a ref
          ptr type.
        * bindings/v8/DOMObjectsInclude.h: Include generated
          CanvasActiveInfo files.
        * bindings/v8/DerivedSourcesAllInOne.cpp:
        * bindings/v8/V8Index.cpp:
        * bindings/v8/V8Index.h:

2009-10-11  Collin Jackson  <collinj@webkit.org>

        Reviewed by Adam Barth.

        Log mixed content warnings to console

        https://bugs.webkit.org/show_bug.cgi?id=30290

        * loader/FrameLoader.cpp:
        (WebCore::FrameLoader::checkIfDisplayInsecureContent):
        (WebCore::FrameLoader::checkIfRunInsecureContent):

2009-10-11  Søren Gjesse  <sgjesse@chromium.org>

        Reviewed by Adam Barth.

        [V8] Add a context scope in JS listener destructor. The destructor code uses the cotext. See http://crbug.com/24200.
        https://bugs.webkit.org/show_bug.cgi?id=30250

        * bindings/v8/V8AbstractEventListener.cpp:
        (WebCore::V8AbstractEventListener::~V8AbstractEventListener):

2009-10-11  Lyon Chen  <lyon.chen@torchmobile.com>

        Reviewed by Alexey Proskuryakov.

        Correct the position of #endif sentence inside WebCore::Document::finishedParsing().

        https://bugs.webkit.org/show_bug.cgi?id=30244

        This change requires no test case as it fix a compiling error.

        * dom/Document.cpp:
        (WebCore::Document::finishedParsing):

2009-10-11  Dominic Cooney  <dominicc@google.com>

        Reviewed by Adam Barth.

        Sets a 500K stack limit for JavaScript workers in Chromium.
        https://bugs.webkit.org/show_bug.cgi?id=29797

        Runaway recursion in JavaScript workers crashes the Chromium
        worker process on OS X. This is because V8's default stack limit
        is 512K on ia32 or 1M on x64, but the worker process runs workers
        on a thread with the OS X default stack size--512K. Because there
        are already some C+frames on the stack when V8 establishes its
        512K default stack limit, and V8 doesn't precisely enforce the
        stack limit, runaway recursion in V8 workers overflows the OS
        stack and segfaults, killing the worker process. This is described
        in Chromium bug 21653 <http://crbug.com/21653>.

        This patch sets the V8 stack limit for worker JavaScript in
        Chromium to a more conservative 500K on all platforms. This allows
        some "headroom" for the C+stack in use when the limit is set up,
        and some "legroom" for the V8 helper functions which in practice
        briefly flout the V8 stack limit.

        Test: LayoutTests/fast/workers/use-machine-stack.html

        * bindings/v8/WorkerContextExecutionProxy.cpp:
        (WebCore::WorkerContextExecutionProxy::initV8IfNeeded):
        * bindings/v8/WorkerContextExecutionProxy.h:

2009-10-11  Kevin Ollivier  <kevino@theolliviers.com>

        wx build fix for wxMac 2.9, use wxGC API for measuring text.

        * platform/wx/wxcode/mac/carbon/fontprops.cpp:
        (GetTextExtent):

2009-10-10  Cameron McCormack  <cam@mcc.id.au>

        Reviewed by Sam Weinig.

        Allow [Reflect] on SVG elements.
        https://bugs.webkit.org/show_bug.cgi?id=28936

        Update the JS binding generators to reference SVGNames instead of
        HTMLNames, if [Reflect]ing an attribute on an SVG element.  Make
        SVGElement::id use [Reflect].

        Also make [Reflect] on an attribute with a setter exception work in ObjC
        bindings.

        Test: svg/dom/id-reflect.html

        * bindings/scripts/CodeGenerator.pm: Add a function to determine the
        appropriate C+namespace for attribute name constants.
        * bindings/scripts/CodeGeneratorObjC.pm: Generate ExceptionCode handling
        code for [Reflect] on an attribute with a setter exception.
        * bindings/scripts/CodeGeneratorCOM.pm: Generate "SVGNames" instead of
        "HTMLNames" when appropriate.
        * bindings/scripts/CodeGeneratorJS.pm: Ditto.
        * bindings/scripts/CodeGeneratorV8.pm: Ditto.
        * svg/SVGElement.cpp: Remove getter and setter methods for id.
        * svg/SVGElement.h: Ditto.
        * svg/SVGElement.idl: Add [Reflect] to id.

2009-10-10  Oliver Hunt  <oliver@apple.com>

        Fix paths in xcode.

        * WebCore.xcodeproj/project.pbxproj:

2009-10-10  Oliver Hunt  <oliver@apple.com>

        Reviewed by Eric Carlson.

        Implement getActiveAttrib and getActiveUniform
        https://bugs.webkit.org/show_bug.cgi?id=30276

        Implements the getActiveAttrib and getActiveUniform APIs.
        Rather simple patch, adds CanvasActiveInfo definition and implementation
        and adds forwarding to the GraphicsContext3D.

        Test: fast/canvas/webgl/getActiveTest.html

        * DerivedSources.make:
        * WebCore.xcodeproj/project.pbxproj:
        * html/canvas/CanvasActiveInfo.h: Added.
        (WebCore::CanvasActiveInfo::create):
        (WebCore::CanvasActiveInfo::name):
        (WebCore::CanvasActiveInfo::type):
        (WebCore::CanvasActiveInfo::size):
        (WebCore::CanvasActiveInfo::CanvasActiveInfo):
        * html/canvas/CanvasActiveInfo.idl: Added.
        * html/canvas/CanvasObject.h:
        (WebCore::CanvasObject::context):
          Need to make the context public as it is needed to ensure we don't
          provide a program from one context as an argument to another.
        * html/canvas/CanvasRenderingContext3D.cpp:
        (WebCore::CanvasRenderingContext3D::getActiveAttrib):
        (WebCore::CanvasRenderingContext3D::getActiveUniform):
        * html/canvas/CanvasRenderingContext3D.h:
        * html/canvas/CanvasRenderingContext3D.idl:
        * platform/graphics/GraphicsContext3D.h:
        * platform/graphics/mac/GraphicsContext3DMac.cpp:
        (WebCore::GraphicsContext3D::getActiveAttrib):
        (WebCore::GraphicsContext3D::getActiveUniform):

2009-10-10  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Timothy Hatcher.

        Web Inspector: Adding new attributes in Element Panel is
        counterintuitive.

        https://bugs.webkit.org/show_bug.cgi?id=30057

        * inspector/front-end/ElementsTreeOutline.js:
        (WebInspector.ElementsTreeOutline.prototype._onmousemove):
        (WebInspector.ElementsTreeElement.prototype.set hovered):
        (WebInspector.ElementsTreeElement.prototype.toggleNewAttributeButton):

2009-10-10  Laszlo Gombos  <laszlo.1.gombos@nokia.com>

        Reviewed by Holger Freyther.

        Build fix if Netscape plugin support is turned off
        https://bugs.webkit.org/show_bug.cgi?id=30275

        In addition to fixing the build break with guards
        remove notImplemented() from PluginViewNone.cpp and
        make them just just be empty functions.

        * plugins/PluginView.cpp:
        (WebCore::PluginView::handleEvent):
        (WebCore::PluginView::PluginView):
        * plugins/PluginView.h:
        * plugins/PluginViewNone.cpp:
        (WebCore::PluginView::setFocus):
        (WebCore::PluginView::show):
        (WebCore::PluginView::hide):
        (WebCore::PluginView::paint):
        (WebCore::PluginView::handleKeyboardEvent):
        (WebCore::PluginView::handleMouseEvent):
        (WebCore::PluginView::setParent):
        (WebCore::PluginView::setNPWindowRect):
        (WebCore::PluginView::handlePostReadFile):
        (WebCore::PluginView::getValue):
        (WebCore::PluginView::getValueStatic):
        (WebCore::PluginView::invalidateRect):
        (WebCore::PluginView::invalidateRegion):
        (WebCore::PluginView::forceRedraw):
        (WebCore::PluginView::platformStart):
        (WebCore::PluginView::platformDestroy):
        (WebCore::PluginView::setParentVisible):
        (WebCore::PluginView::updatePluginWidget):

2009-10-10  Laszlo Gombos  <laszlo.1.gombos@nokia.com>

        Unreviewed.

        [Qt] Build fix for QtWebKit after r49415.

        Add HistoryController.cpp to the build.

        * WebCore.pro:

2009-10-09  Darin Fisher  <darin@chromium.org>

        Reviewed by Eric Seidel.

        [Chromium] KURLGoogle's protocolIs barfs on input containing hyphens
        https://bugs.webkit.org/show_bug.cgi?id=30262

        This is not testable from WebKit since WebKit never uses the member
        function form of protocolIs with input that can be controlled from a
        web page.  It always passes string literals lacking hyphens.

        * platform/KURLGoogle.cpp:
        (WebCore::lowerCaseEqualsASCII): Only assert if toASCIILower would
        transform the input character.

2009-10-10  Adam Barth  <abarth@webkit.org>

        Reviewed by Oliver Hunt.

        Move HistoryController to its own file
        https://bugs.webkit.org/show_bug.cgi?id=30272

        Purely mechanical.

        * GNUmakefile.am:
        * WebCore.gypi:
        * WebCore.vcproj/WebCore.vcproj:
        * WebCore.xcodeproj/project.pbxproj:
        * WebCoreSources.bkl:
        * loader/FrameLoader.cpp:
        * loader/FrameLoader.h:
        * loader/HistoryController.cpp: Added.
        * loader/HistoryController.h: Added.

2009-10-09  Ryosuke Niwa  <rniwa@webkit.org>

        Reviewed by Eric Seidel.

        ApplyStyleCommand removes presentational tags even when not necessary
        https://bugs.webkit.org/show_bug.cgi?id=28091

        This patch updates implicitlyStyledElementShouldBeRemovedWhenApplyingStyle to return true
        (triggering removal of tag) only if the style implicitly added by the element is not present in
        the new style to apply. It also changes surroundNodeRangeWithElement so that it merges the
        surrounding element when possible. applyTextDecorationStyle is modified so that it does not add
        style span when the style attribute is empty.

        Test: editing/execCommand/toggle-style-3.html

        * editing/ApplyStyleCommand.cpp:
        (WebCore::ApplyStyleCommand::shouldRemoveTextDecorationTag): Returns true if specified text
        decoration is not present in the style to apply
        (WebCore::ApplyStyleCommand::implicitlyStyledElementShouldBeRemovedWhenApplyingStyle): No longer
        returns true if the tag is used in new style
        (WebCore::ApplyStyleCommand::applyTextDecorationStyle): Does not add style-span when redundant
        (WebCore::ApplyStyleCommand::surroundNodeRangeWithElement): Merges the newly created element
        with the surrounding identical elements
        * editing/ApplyStyleCommand.h:

2009-10-09  Adam Barth  <abarth@webkit.org>

        Reviewed by Darin Adler.

        Factor HistoryController out of FrameLoader
        https://bugs.webkit.org/show_bug.cgi?id=30246

        HistoryController is in charge of managing the current / previous /
        provisional HistoryItems.  The split isn't perfect, but it's a place to
        start.  I'll move HistoryController into its own file in another patch.

        * WebCore.base.exp:
        * loader/FrameLoader.cpp:
        (WebCore::HistoryController::HistoryController):
        (WebCore::HistoryController::~HistoryController):
        (WebCore::FrameLoader::FrameLoader):
        (WebCore::FrameLoader::closeURL):
        (WebCore::FrameLoader::begin):
        (WebCore::HistoryController::restoreDocumentState):
        (WebCore::HistoryController::setCurrentItem):
        (WebCore::HistoryController::setProvisionalItem):
        (WebCore::FrameLoader::loadURLIntoChildFrame):
        (WebCore::FrameLoader::canCachePageContainingThisFrame):
        (WebCore::FrameLoader::logCanCacheFrameDecision):
        (WebCore::FrameLoader::scrollToAnchor):
        (WebCore::FrameLoader::commitProvisionalLoad):
        (WebCore::FrameLoader::transitionToCommitted):
        (WebCore::FrameLoader::checkLoadCompleteForThisFrame):
        (WebCore::FrameLoader::didFirstLayout):
        (WebCore::HistoryController::updateForFrameLoadCompleted):
        (WebCore::FrameLoader::frameLoadCompleted):
        (WebCore::FrameLoader::detachFromParent):
        (WebCore::FrameLoader::receivedMainResourceError):
        (WebCore::FrameLoader::continueFragmentScrollAfterNavigationPolicy):
        (WebCore::FrameLoader::continueLoadAfterNavigationPolicy):
        (WebCore::HistoryController::addHistoryItemForFragmentScroll):
        (WebCore::FrameLoader::loadProvisionalItemFromCachedPage):
        (WebCore::FrameLoader::shouldTreatURLAsSameAsCurrent):
        (WebCore::HistoryController::createHistoryItem):
        (WebCore::FrameLoader::checkDidPerformFirstNavigation):
        (WebCore::HistoryController::addBackForwardItemClippedAtTarget):
        (WebCore::HistoryController::createHistoryItemTree):
        (WebCore::HistoryController::saveScrollPositionAndViewStateToItem):
        (WebCore::HistoryController::restoreScrollPositionAndViewState):
        (WebCore::HistoryController::invalidateCurrentItemCachedPage):
        (WebCore::HistoryController::saveDocumentState):
        (WebCore::FrameLoader::loadItem):
        (WebCore::HistoryController::urlsMatchItem):
        (WebCore::HistoryController::goToItem):
        (WebCore::HistoryController::recursiveGoToItem):
        (WebCore::HistoryController::childFramesMatchItem):
        (WebCore::HistoryController::updateForStandardLoad):
        (WebCore::HistoryController::updateForClientRedirect):
        (WebCore::HistoryController::updateForBackForwardNavigation):
        (WebCore::HistoryController::updateForReload):
        (WebCore::HistoryController::updateForRedirectWithLockedBackForwardList):
        (WebCore::HistoryController::updateForCommit):
        (WebCore::HistoryController::updateForAnchorScroll):
        (WebCore::HistoryController::saveDocumentAndScrollState):
        (WebCore::HistoryController::setCurrentItemTitle):
        (WebCore::FrameLoader::didChangeTitle):
        * loader/FrameLoader.h:
        (WebCore::HistoryController::current):
        (WebCore::HistoryController::provisional):
        (WebCore::FrameLoader::policyChecker):
        (WebCore::FrameLoader::history):
        (WebCore::FrameLoader::creatingInitialEmptyDocument):
        * page/Page.cpp:
        (WebCore::Page::goToItem):

2009-10-09  Alexey Proskuryakov  <ap@apple.com>

        Unreviewed - fixing an obvious typo in my previous check-in.

        https://bugs.webkit.org/show_bug.cgi?id=30260
        <rdar://problem/6447115> REGRESSION: Logging out from SAP doesn't work

        Fixes existing tests (which I thought I had run the previous time).

        * platform/network/CredentialStorage.cpp: (WebCore::originsWithCredentials): Return the
        set by reference.

2009-10-09  David Levin  <levin@chromium.org>

        Reviewed by Eric Seidel.

        [v8] Need change to V8WorkerContextEventListener::reportError signature to match the base class.
        https://bugs.webkit.org/show_bug.cgi?id=30264

        The base class method changed in r48884.

        Test: fast/worker/worker-script-error.html

        * bindings/v8/V8WorkerContextEventListener.cpp:
        (WebCore::V8WorkerContextEventListener::reportError):
        * bindings/v8/V8WorkerContextEventListener.h:

2009-10-09  Alexey Proskuryakov  <ap@apple.com>

        Reviewed by Brady Eidson.

        https://bugs.webkit.org/show_bug.cgi?id=30260
        <rdar://problem/6447115> REGRESSION: Logging out from SAP doesn't work

        Tests: http/tests/xmlhttprequest/logout.html
               http/tests/xmlhttprequest/re-login-async.html
               http/tests/xmlhttprequest/re-login.html

        Fix several issues with existing credential handling code.

        * platform/network/CredentialStorage.cpp:
        (WebCore::pathToDefaultProtectionSpaceMap): Changed the data structure to a simpler one.
        (WebCore::originsWithCredentials): The reason for two-stage lookup above was that we didn't
        want to iterate paths for origins that never had credentials associated with them. Changed
        to use a separate HashSet for this.
        (WebCore::pathToDefaultProtectionSpaceMap): The concept of default per-path credentials didn't
        match the spec very well. UAs are supposed to deduce protection space from an URL, and then
        use whichever credentials are known for this protection space. So, OriginToDefaultBasicCredentialMap
        is now PathToDefaultProtectionSpaceMap.
        (WebCore::protectionSpaceMapKeyFromURL): Factored out a helper that extracts a directory
        URL from a given URL. These directory URLs are what we use as keys in PathToDefaultProtectionSpaceMap.
        (WebCore::CredentialStorage::set): Updated for above changes.
        (WebCore::findDefaultProtectionSpaceForURL): Factored out code iterating path length to find
        a prefix in OriginToDefaultBasicCredentialMap.
        (WebCore::CredentialStorage::set): Another version of set() can update credentials for a
        URL default protection space. It does nothing if the given URL doesn't correspond to a known
        protection space.
        (WebCore::CredentialStorage::get): Renamed from getDefaultAuthenticationCredential.

        * platform/network/CredentialStorage.h: Made the distinction between methods that use a known
        protection space and those that deduce one from URL more clear.

        * platform/network/mac/ResourceHandleMac.mm:
        (WebCore::ResourceHandle::start): Update credentials before starting the request for real.
        This makes the following pattern work:
          var req = new XMLHttpRequest("GET", "logout.html", "logout", "logout"); // wrong credentials
          req.send("");
          req.abort();
        Abort() is used here to avoid having UA present an auth dialog after getting a 401 response.
        Note that one cannot log in using the same method, because there isn't a known protection
        space for the URL yet in that case, so the added code has no effect.
        (WebCore::ResourceHandle::didReceiveAuthenticationChallenge): Use a correct persistence for
        calling receivedCredential(). This fixes logging in using an async XHR (withut abort(), of
        course), and matches sync case.
        (+[WebCoreSynchronousLoader loadRequest:allowStoredCredentials:returningResponse:error:]):
        Renamed getDefaultAuthenticationCredential() to get().

        * platform/network/cf/ResourceHandleCFNet.cpp:
        (WebCore::ResourceHandle::start):
        (WebCore::WebCoreSynchronousLoader::load):
        Same changes as in Mac code.

2009-10-09  Enrica Casucci  <enrica@apple.com>

        Reviewed by Adele Peterson.

        Undoing a indent removes text instead of it's formatting.
        <rdar://problem/7169206>
        https://bugs.webkit.org/show_bug.cgi?id=28722
        Restored the behavior prior to http://trac.webkit.org/changeset/46143. This change implemented the
        indent command making simple DOM operation, without using moveParagraph which cause undo to be broken.
        
        Added editing/undo/undo-indent.html test.

        * editing/IndentOutdentCommand.cpp:
        (WebCore::IndentOutdentCommand::prepareBlockquoteLevelForInsertion): Restored. 
        (WebCore::IndentOutdentCommand::tryIndentingAsListItem): Merged changes.
        (WebCore::IndentOutdentCommand::indentIntoBlockquote): Restored.
        (WebCore::IndentOutdentCommand::indentRegion): Restored and added call to updateLayout to
        ensure TextIterator could correctly calculate the position starting from the index.
        * editing/IndentOutdentCommand.h: Restored.

2009-10-09  Jens Alfke  <snej@chromium.org>

        Reviewed by Darin Adler.
        
        Optimization: Many StringImpl transformations are no-ops and should just return 'this'
        https://bugs.webkit.org/show_bug.cgi?id=30186

        Optimized StringImpl methods lower(), stripWhiteSpace() and simplifyWhiteSpace() to
        detect no-ops and return this instead of creating a new instance.
        Empirical testing shows that the majority of calls to these methods are no-ops, making
        this worthwhile even if (in the case of lower()) the non-no-op case is slightly slowed.
        Upper() is very rarely a no-op, so it wasn't worthwhile to optimize it.

        * platform/text/StringImpl.cpp:
        (WebCore::StringImpl::lower):
        (WebCore::StringImpl::upper): Just add a comment explaining why this wasn't optimized
        (WebCore::StringImpl::stripWhiteSpace):
        (WebCore::StringImpl::simplifyWhiteSpace):

2009-10-09  Dirk Schulze  <krit@webkit.org>

        Reviewed by Oliver Hunt.

        SVG Filter feGaussianBlur implementation is missing
        [https://bugs.webkit.org/show_bug.cgi?id=28141]

        This is the implementation of GaussianBlur filter for SVG.

        There is already a test for feGaussianBlur
        Test: svg/W3C-SVG-1.1/filters-gauss-01-b-w3c.svg 

        Test: svg/filters/feGaussianBlur.svg

        * platform/graphics/filters/FilterEffect.cpp:
        (WebCore::FilterEffect::FilterEffect):
        * platform/graphics/filters/FilterEffect.h:
        (WebCore::FilterEffect::isAlphaImage):
        (WebCore::FilterEffect::setIsAlphaImage):
        * platform/graphics/filters/SourceAlpha.cpp:
        (WebCore::SourceAlpha::apply):
        * svg/graphics/filters/SVGFEGaussianBlur.cpp:
        (WebCore::boxBlur):
        (WebCore::FEGaussianBlur::apply):

2009-10-09  Philippe Normand  <pnormand@igalia.com>

        Reviewed by Gustavo Noronha.

        [GTK] QoS support in the video sink
        https://bugs.webkit.org/show_bug.cgi?id=29959

        Removed the async buffer queue from the sink. Synchronize the
        render method of the sink using a g_timeout_add() combined with a
        gcond triggered when the buffer has been rendered.
        Also fixed the video sink reference handling in the player, now
        that the idle is not there anymore to mess up things.

        * platform/graphics/gtk/MediaPlayerPrivateGStreamer.cpp:
        (WebCore::MediaPlayerPrivate::~MediaPlayerPrivate):
        (WebCore::MediaPlayerPrivate::createGSTPlayBin):
        * platform/graphics/gtk/VideoSinkGStreamer.cpp:
        (webkit_video_sink_init):
        (webkit_video_sink_timeout_func):
        (webkit_video_sink_render):
        (webkit_video_sink_dispose):
        (unlock_buffer_mutex):
        (webkit_video_sink_unlock):
        (webkit_video_sink_stop):
        (webkit_video_sink_class_init):

2009-10-09  Dirk Schulze  <krit@webkit.org>

        Reviewed by Nikolas Zimmermann.

        feMorphology filter is not implemented
        [https://bugs.webkit.org/show_bug.cgi?id=5863]

        Adds SVGFEMorphologyElement, for the SVG filter. It also fixes a bug
        with the attribute "operator". It was only accessible via "_operator" 
        on JavaScript.

        Test: svg/dom/operatorAttribute.xhtml

        * DerivedSources.cpp:
        * DerivedSources.make:
        * GNUmakefile.am:
        * WebCore.SVG.Filters.exp:
        * WebCore.gypi:
        * WebCore.pro:
        * WebCore.xcodeproj/project.pbxproj:
        * bindings/objc/DOM.mm:
        (WebCore::createElementClassMap):
        * bindings/objc/DOMSVG.h:
        * bindings/scripts/CodeGeneratorJS.pm:
        * bindings/scripts/CodeGeneratorObjC.pm:
        * page/DOMWindow.idl:
        * svg/SVGAllInOne.cpp:
        * svg/SVGFECompositeElement.idl:
        * svg/SVGFEMorphologyElement.cpp: Added.
        (WebCore::SVGFEMorphologyElement::SVGFEMorphologyElement):
        (WebCore::SVGFEMorphologyElement::~SVGFEMorphologyElement):
        (WebCore::SVGFEMorphologyElement::setRadius):
        (WebCore::SVGFEMorphologyElement::parseMappedAttribute):
        (WebCore::SVGFEMorphologyElement::build):
        * svg/SVGFEMorphologyElement.h: Added.
        * svg/SVGFEMorphologyElement.idl: Added.
        * svg/graphics/filters/SVGFEMorphology.cpp:
        (WebCore::operator<<):
        * svg/graphics/filters/SVGFEMorphology.h:
        (WebCore::):
        * svg/svgtags.in:

2009-10-09  Yury Semikhatsky  <yurys@chromium.org>

        Reviewed by Dimitri Glazkov.

        Fix Chromium breakage.

        https://bugs.webkit.org/show_bug.cgi?id=30104

        * inspector/front-end/inspector.js:
        (WebInspector.addCookieDomain): check that Storage panel is present before calling its methods.

2009-10-09  Joe Ligman  <joseph.ligman@nokia.com>

        Reviewed by Simon Hausmann.

        [Qt] Added pure virtual methods setInputMethodEnabled and setInputMethodHint to QWebPageClient

        https://bugs.webkit.org/show_bug.cgi?id=30023

        * platform/qt/QWebPageClient.h:

2009-10-08  Dave Hyatt  <hyatt@apple.com>

        Reviewed by Darin Adler.

        Implement beforeload for images.  ImageLoadEventSender has been refactored into a more generic
        ImageEventSender that can be used by both load and beforeload events.  If the document has any
        beforeload listeners, then the installation of images onto the renderer becomes asynchronous
        and will be held up until the beforeload event can fire at a later date.

        Both beforeload and load events now fire at the end of the tokenizer write() methods, so that
        in the typical parsing case we don't have to put off the beforeload/load events until after
        a layout or paint might already have happened.  This lets beforeload/load not cause extra
        layouts and repaints.

        * dom/ContainerNode.cpp:
        (WebCore::ContainerNode::dispatchBeforeLoadEvent):
        * dom/Document.cpp:
        (WebCore::Document::implicitClose):
        (WebCore::Document::addListenerTypeIfNeeded):
        * dom/Document.h:
        (WebCore::Document::):
        * dom/XMLTokenizer.cpp:
        (WebCore::XMLTokenizer::write):
        * html/HTMLImageElement.cpp:
        (WebCore::HTMLImageElement::attach):
        * html/HTMLInputElement.cpp:
        (WebCore::HTMLInputElement::attach):
        * html/HTMLTokenizer.cpp:
        (WebCore::HTMLTokenizer::write):
        * loader/ImageLoader.cpp:
        (WebCore::ImageBeforeLoadEventSender::ImageBeforeLoadEventSender):
        (WebCore::ImageLoadEventSender::ImageLoadEventSender):
        (WebCore::beforeLoadEventSender):
        (WebCore::ImageLoader::ImageLoader):
        (WebCore::ImageLoader::~ImageLoader):
        (WebCore::ImageLoader::setImage):
        (WebCore::ImageLoader::setLoadingImage):
        (WebCore::ImageLoader::updateFromElement):
        (WebCore::ImageLoader::notifyFinished):
        (WebCore::ImageLoader::dispatchPendingBeforeLoadEvent):
        (WebCore::ImageLoader::dispatchPendingEvents):
        (WebCore::ImageEventSender::ImageEventSender):
        (WebCore::ImageEventSender::dispatchEventSoon):
        (WebCore::ImageEventSender::cancelEvent):
        (WebCore::ImageEventSender::dispatchPendingEvents):
        (WebCore::ImageEventSender::timerFired):
        * loader/ImageLoader.h:
        (WebCore::ImageLoader::haveFiredBeforeLoadEvent):
        * wml/WMLImageElement.cpp:
        (WebCore::WMLImageElement::attach):

2009-10-09  Pavel Feldman  <pfeldman@chromium.org>

        Reviewed by Dimitri Glazkov.

        Web Inspector: Wrap Database into ScriptObject in v8 bindings.

        https://bugs.webkit.org/show_bug.cgi?id=30174

        No tests due to no Script* test infrastructure.

        * bindings/v8/ScriptObjectQuarantine.cpp:
        (WebCore::getQuarantinedScriptObject):

2009-10-09  Girish Ramakrishnan  <girish@forwardbias.in>

        Reviewed by Simon Hausmann.

        [Qt] Windowless Plugins : Fix crash when using QWebPage without QWebView.
        
        'client' is 0 when we have no view.

        https://bugs.webkit.org/show_bug.cgi?id=30251

        * plugins/qt/PluginViewQt.cpp:
        (WebCore::PluginView::paint):

2009-10-09  Girish Ramakrishnan  <girish@forwardbias.in>

        Reviewed by Simon Hausmann.

        [Qt] Plugins : Add missing setCurrentPlugin(0)

        https://bugs.webkit.org/show_bug.cgi?id=30248

        * plugins/qt/PluginViewQt.cpp:
        (WebCore::PluginView::dispatchNPEvent):

2009-10-09  Jakub Wieczorek  <faw217@gmail.com>

        Reviewed by Simon Hausmann.

        [Qt] beforeload event does not fire on script elements in XML
        https://bugs.webkit.org/show_bug.cgi?id=30235

        r49194 was lacking a change to XMLTokenizerQt.cpp, equivalent to the one
        made in XMLTokenizerLibxml2.cpp.

        * dom/XMLTokenizerQt.cpp:
        (WebCore::XMLTokenizer::parseEndElement):

2009-10-09  Zoltan Horvath  <zoltan@webkit.org>

        Reviewed by Darin Adler.

        Allow custom memory allocation control for WebCore's CSSParserValueList
        https://bugs.webkit.org/show_bug.cgi?id=30249

        Inherits CSSParserValueList class from FastAllocBase because it has 
        been instantiated by 'new' in WebCor
