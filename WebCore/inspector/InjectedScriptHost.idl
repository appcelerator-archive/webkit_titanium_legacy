/*
 * Copyright (C) 2007, 2008 Apple Inc. All rights reserved.
 * Copyright (C) 2008 Matt Lilek <webkit@mattlilek.com>
 * Copyright (C) 2009 Google Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following disclaimer
 * in the documentation and/or other materials provided with the
 * distribution.
 *     * Neither the name of Google Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

module core {
    interface [
        GenerateConstructor
    ] InjectedScriptHost {
        [Custom] DOMWindow inspectedWindow();
        [Custom] DOMObject wrapCallback(in DOMObject callback);
        void copyText(in DOMString text);
        [Custom] DOMObject nodeForId(in long nodeId);
        [Custom] long wrapObject(in DOMObject object, in DOMString objectGroup);
        [Custom] DOMObject unwrapObject(in long objectId);
        [Custom] int pushNodePathToFrontend(in DOMObject node, in boolean selectInUI);

        void addNodesToSearchResult(in DOMString nodeIds);
        long pushNodeByPathToFrontend(in DOMString path);

#if defined(ENABLE_JAVASCRIPT_DEBUGGER) && ENABLE_JAVASCRIPT_DEBUGGER
        [Custom] DOMObject currentCallFrame();
#endif

#if defined(ENABLE_DATABASE) && ENABLE_DATABASE
        [Custom] DOMObject databaseForId(in long databaseId);
        [Custom] void selectDatabase(in DOMObject database);
#endif

#if defined(ENABLE_DOM_STORAGE) && ENABLE_DOM_STORAGE
        [Custom] void selectDOMStorage(in DOMObject storage);
#endif

        void reportDidDispatchOnInjectedScript(in long callId, in DOMString result, in boolean isException);
    };
}
